<?xml version="1.0" encoding="UTF-8"?>
<sql-queryset name="DIAGNOSIS" description="Oracle SQL 문들을 정의하고 있다.">

	<sql-query name="SELECT_USER_MANAGER_YN" comment="부서장 유무를 판단" >
		<![CDATA[
		
            -------------------------------------------------------------------------
            -- FILENAME : DIAGNOSIS-QUERYMAP.XML / QUERYNAME : SELECT_USER_MANAGER_YN
            -------------------------------------------------------------------------         
            SELECT US.COMPANY_NUM, US.DEPT_NUM, DEPT.DEPT_NAME, US.USER_NUM, US.KOR_NAME, DEPT_MANAGER_FLAG, DEPT_MANAGER
                , DEPT.DEPT_NAME DEPT_FULL_NAME
              FROM(
                    SELECT COMPANY_NUM, DEPT_NUM, USER_NUM, KOR_NAME
                    	, case when (select count(*) from t_mtp_dept_addinfo where company_num = a.company_num and user_num = a.user_num) > 0 then 'Y'
                          else 'N' 
                          end DEPT_MANAGER_FLAG
                      FROM T_MTP_USER a
                     WHERE COMPANY_NUM = ?            -- 1. 회사번호 
                       AND USE_FLAG = 'Y'
                       AND USER_NUM = ?               -- 2. 사용자번호
                  ) US,
                  (
                    SELECT TMD.COMPANY_NUM, TMD.DEPT_NUM, DEPT_NAME, USER_NUM AS DEPT_MANAGER
                      FROM T_MTP_DEPT TMD, T_MTP_DEPT_ADDINFO TMDA
        	         WHERE TMD.COMPANY_NUM = TMDA.COMPANY_NUM
                       AND TMD.DEPT_NUM = TMDA.DEPT_NUM 
                       AND TMD.COMPANY_NUM = ?        -- 3. 회사번호  
                       AND TMD.FORMAL_FLAG = 'Y'
			      ) DEPT
			 WHERE US.DEPT_NUM = DEPT.DEPT_NUM(+)

		]]>
    </sql-query>

	<sql-query name="SELECT_EXEC_LIST" comment="진단 리스트를 가져옴" >
		<![CDATA[
				SELECT a.exec_num
                     , a.exec_title
                     , case 
           				       WHEN (a.UP_DIAG_FLAG = 'Y' or a.DOWN_DIAG_FLAG = 'Y' or a.COL_DIAG_FLAG = 'Y') THEN 'Y'  -- 다면             
           					   ELSE 'N'            
        				    END muilt_diag_flag
                     , NVL2(a.exec_sdate, SUBSTR(exec_sdate,1,4) || '.' ||SUBSTR(exec_sdate,5,2) || '.' || SUBSTR(exec_sdate,7,2), '') ||' ~ '||
                          NVL2(a.exec_edate, SUBSTR(exec_edate,1,4) || '.' || SUBSTR(exec_edate,5,2) || '.' || SUBSTR(exec_edate,7,2), '') AS exec_date
                     , a.complete_flag
                     , CASE WHEN exec_sdate <= TO_CHAR(sysdate,'YYYYMMDD') AND exec_edate >= TO_CHAR(sysdate,'YYYYMMDD') THEN 'Y'
                            WHEN exec_edate < TO_CHAR(sysdate,'YYYYMMDD') THEN 'E'
                            ELSE 'B'
                       END use_flag
                     , CASE WHEN b.exec_num = a.exec_num THEN 'Y'
                            ELSE 'N'
                       END my_exec
                     , (SELECT MAX(ps.complete_flag)
                          FROM t_mtp_diag_val_person_set ps
                         WHERE ps.company_num=a.company_num AND ps.exec_num=a.exec_num
                               AND ps.exec_user_num=b.user_num --AND ps.examinee_num=b.user_num
                       ) my_comp
					 , NVL((
                        SELECT COUNT( USER_NUM ) CNT
                        FROM T_MTP_DIAG_VAL_RESULT_COMP_ACT
                        WHERE EXEC_NUM = B.EXEC_NUM AND COMPANY_NUM = A.COMPANY_NUM AND EXEC_USER_NUM = B.USER_NUM
                        GROUP BY EXEC_NUM
                       ), 0) ING_CNT
                  FROM t_mtp_exec a,
                       (
                        SELECT exec_num, a.user_num
                          FROM (
                                SELECT exec_num
                                      , exec_user_num user_num
                                      , complete_flag
                                  FROM t_mtp_diag_val_person_set
                                 WHERE company_num = ? AND exec_user_num = ?
                                ) a
                          GROUP BY a.exec_num, a.user_num
                       ) b
                 WHERE a.company_num = ?
                       AND a.use_flag = 'Y'
                       AND a.open_flag = 'Y'
                       #where#
                order by to_number(exec_num) desc
		]]>
    </sql-query>

	<sql-query name="SELECT_NOW_EXEC" comment="현재 진쟁중인 진단 리스트를 가져옴" >
		<![CDATA[
				SELECT EXEC_NUM
                    FROM(
                        SELECT a.exec_num
                         , a.exec_title
                         , case 
           				       WHEN (a.UP_DIAG_FLAG = 'Y' or a.DOWN_DIAG_FLAG = 'Y' or a.COL_DIAG_FLAG = 'Y') THEN 'Y'  -- 다면             
           					   ELSE 'N'            
        				    END muilt_diag_flag 
                         , NVL2(a.exec_sdate, SUBSTR(exec_sdate,1,4) || '.' ||SUBSTR(exec_sdate,5,2) || '.' || SUBSTR(exec_sdate,7,2), '') ||' ~ '||
                              NVL2(a.exec_edate, SUBSTR(exec_edate,1,4) || '.' || SUBSTR(exec_edate,5,2) || '.' || SUBSTR(exec_edate,7,2), '') AS exec_date
                         , a.complete_flag
                         , CASE WHEN exec_sdate <= TO_CHAR(sysdate,'YYYYMMDD') AND exec_edate >= TO_CHAR(sysdate,'YYYYMMDD') THEN 'Y'
                                WHEN exec_edate < TO_CHAR(sysdate,'YYYYMMDD') THEN 'E'
                                ELSE 'B'
                           END use_flag
                         , CASE WHEN b.exec_num = a.exec_num THEN 'Y'
                                ELSE 'N'
                           END my_exec
                         , (SELECT MAX(ps.complete_flag)
                              FROM t_mtp_diag_val_person_set ps
                             WHERE ps.company_num=a.company_num AND ps.exec_num=a.exec_num
                                   AND ps.exec_user_num=b.user_num --AND ps.examinee_num=b.user_num
                           ) my_comp
    					 , NVL((
                            SELECT COUNT( USER_NUM ) CNT
                            FROM T_MTP_DIAG_VAL_RESULT_COMP_ACT
                            WHERE EXEC_NUM = B.EXEC_NUM AND COMPANY_NUM = A.COMPANY_NUM AND EXEC_USER_NUM = B.USER_NUM
                            GROUP BY EXEC_NUM
                           ), 0) ING_CNT
                      FROM t_mtp_exec a,
                           (
                            SELECT exec_num, a.user_num
                              FROM (
                                    SELECT exec_num
                                          , exec_user_num user_num
                                          , complete_flag
                                      FROM t_mtp_diag_val_person_set
                                     WHERE company_num = ? AND exec_user_num = ?
                                    ) a
                              GROUP BY a.exec_num, a.user_num
                           ) b
                     WHERE a.company_num =?
                           AND a.use_flag = 'Y'
                           AND a.open_flag = 'Y'
                           AND a.exec_num = b.exec_num
                     )
                 WHERE COMPLETE_FLAG = 'N' AND USE_FLAG = 'Y' AND MY_COMP != 'Y'
		]]>
    </sql-query>




	<sql-query name="SELECT_DEPT_INFO" comment="부서정보 select" >
		<![CDATA[
				SELECT dept_num code_num, dept_name code_name, DEPT_NAME fullname, user_num, parent_dept_num pdnum
					  ,root_dept_num rdnum
				  FROM t_mtp_dept
				 WHERE company_num=?
                    AND FORMAL_FLAG = 'Y'
				 ORDER BY dept_num
		]]>
    </sql-query>

    <sql-query name="SELECT_GRADE_INFO" comment="직급정보 select" >
		<![CDATA[
				SELECT grade_num code_num, grade_name code_name--, stratum_code
				  FROM t_mtp_grade
				 WHERE company_num=?
				 ORDER BY grade_num
		]]>
    </sql-query>
    
    <sql-query name="SELECT_EXEC_INFO_YN" comment="역량진단 대상자 유무 판단 및 실시정보 select" >
		<![CDATA[
		
		    ----------------------------------------------------------------------
		    -- fileName : diagnosis-querymap.xml / queryName : SELECT_EXEC_INFO_YN
		    ---------------------------------------------------------------------- 
            SELECT EXEC_NUM ENUM
                 ,  exec_num
                 , EXEC_TITLE ETITLE
                 , SUBSTR(EXEC_SDATE ,1,4)||'.'||SUBSTR(EXEC_SDATE ,5,2)||'.'||SUBSTR(EXEC_SDATE ,7,2)
                   ||' ~ '||
                   SUBSTR(EXEC_EDATE ,1,4)||'.'||SUBSTR(EXEC_EDATE ,5,2)||'.'||SUBSTR(EXEC_EDATE ,7,2)
                   EDATE
                 --, CONTRACT_PERSON_NUM PCOUNT
                 , OPEN_FLAG
                 -- 메세지처리를위해 이창열대리님의 요청임. 진단마감일 다음날로 설정하도록.., SUBSTR(EXEC_EDATE ,1,4)||'년 '||SUBSTR(EXEC_EDATE ,5,2)||'월 '||SUBSTR(EXEC_EDATE ,7,2)||'일' ENDDATE
                 , SUBSTR(TO_CHAR(TO_DATE(EXEC_EDATE)+1, 'YYYYMMDD') ,1,4)||'년 '||SUBSTR(TO_CHAR(TO_DATE(EXEC_EDATE)+1, 'YYYYMMDD') ,5,2)||'월 '|| SUBSTR(TO_CHAR(TO_DATE(EXEC_EDATE)+1, 'YYYYMMDD') ,7,2)||'일' ENDDATE
              FROM T_MTP_EXEC
             WHERE EXEC_NUM = ?
                    AND COMPANY_NUM = ?
		]]>
    </sql-query>    

	<sql-query name="SELECT_USER_INFO" comment="사용자정보 select" >
		<![CDATA[
		
            -------------------------------------------------------------------
            -- fileName : diagnosis-querymap.xml / queryName : SELECT_USER_INFO
            ------------------------------------------------------------------- 
            SELECT USER_NUM, KOR_NAME, COMPANY_NUM, COMPANY_NAME
                , EMP_NUM, DEPT_NUM, DEPT_NAME, SIMPLE_DEPT_NAME
                , EMAIL
                , SEX_CODE
                , GRADE_NUM, GRADE_NAME
                , CASE WHEN CONFORMITY_FLAG IS NULL THEN 'N' ELSE CONFORMITY_FLAG END CONFORMITY_FLAG
                , (SELECT JOB_NAME FROM T_JOB_PROFILE WHERE COMPANY_NUM=A.COMPANY_NUM AND JOB_NUM=A.JOB_NUM2) JOB_NAME2, REPCOMP_NAME
              FROM (
                    SELECT DISTINCT TS.USER_NUM, MU.KOR_NAME
                          ,TS.COMPANY_NUM
                          , (SELECT COMPANY_NAME FROM T_COMPANY_INFO WHERE COMPANY_NUM = MU.COMPANY_NUM) COMPANY_NAME
                          ,MU.EMP_NUM, MU.DEPT_NUM
                          ,(SELECT DEPT_NAME FROM T_MTP_DEPT WHERE COMPANY_NUM = MU.COMPANY_NUM AND DEPT_NUM = MU.DEPT_NUM) DEPT_NAME
                          ,(SELECT SIMPLE_DEPT_NAME FROM T_MTP_DEPT WHERE COMPANY_NUM = MU.COMPANY_NUM AND DEPT_NUM = MU.DEPT_NUM) SIMPLE_DEPT_NAME
                          ,(SELECT REPCOMP_NAME FROM T_MTP_DEPT WHERE COMPANY_NUM = MU.COMPANY_NUM AND DEPT_NUM = MU.DEPT_NUM) REPCOMP_NAME
                          ,MU.EMAIL
                          ,TS.SEX_CODE
                          ,TS.GRADE_NUM
                          ,TS.GRADE_NAME
                          , (SELECT CASE WHEN PARENT_DEPT_NUM IS NULL THEN 'N'ELSE 'Y' END CONFORMITY_FLAG
                               FROM T_MTP_DEPT TMD, T_MTP_DEPT_ADDINFO TMDA
                              WHERE TMD.COMPANY_NUM = TMDA.COMPANY_NUM
                                AND TMD.DEPT_NUM = TMDA.DEPT_NUM
                                AND TMD.COMPANY_NUM = MU.COMPANY_NUM 
                                AND TMD.DEPT_NUM = MU.DEPT_NUM 
                                AND TMDA.USER_NUM = MU.USER_NUM
                            ) CONFORMITY_FLAG
                          , MU.JOB_NUM2
                      FROM T_MTP_DIAG_PLAN_TARGET_SET TS, T_MTP_USER MU
                     WHERE TS.COMPANY_NUM = ?                                                            -- 1. 회사번호
                           AND TS.EXEC_NUM = ?                                                           -- 2. 실시번호
                           AND TS.USER_NUM = ?                                                           -- 3. 사용자번호
                           AND MU.USER_NUM = TS.USER_NUM
                  ) A
		]]>
    </sql-query>
    
	<sql-query name="INSERT_TARGET_MULTI_JOB" 
	    comment="기본정보 확인해서 선택 한 직무를 넣는다."
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
		<![CDATA[
		
		    --------------------------------------------------------------------------
		    -- fileName : diagnosis-querymap.xml / queryName : INSERT_TARGET_MULTI_JOB
		    -------------------------------------------------------------------------- 		
    		INSERT INTO T_MTP_DIAG_TARGET_MULTI_JOB ( EXEC_NUM, USER_NUM, COMPANY_NUM, JOB_NUM, JOB_SUIT_RATE) 
			VALUES ( ?, ?, ?, ?, '0')
	            
		]]>
    </sql-query>  
    
        
    <sql-query name="UPDATE_PLAN_TARGET_SET" comment="기본정보 확인해서 선택 한 계층를 업데이트한다." >
		<![CDATA[
		
		    -------------------------------------------------------------------------
		    -- fileName : diagnosis-querymap.xml / queryName : UPDATE_PLAN_TARGET_SET
		    ------------------------------------------------------------------------- 		
			UPDATE T_MTP_DIAG_PLAN_TARGET_SET
			   SET JOB_NUM2 = ?
			 WHERE COMPANY_NUM =  ?
			   AND EXEC_NUM = ?
			   AND USER_NUM = ? 
		]]>
    </sql-query>
    
    
    
    <sql-query name="SELECT_T_DIAG_TARGET_MULTI_JOB" comment="기본정보 확인해서 선택 한 계층를 업데이트한다." >
		<![CDATA[
		
		    ---------------------------------------------------------------------------------
		    -- fileName : diagnosis-querymap.xml / queryName : SELECT_T_DIAG_TARGET_MULTI_JOB
		    --------------------------------------------------------------------------------- 		
			SELECT COUNT(*) CNT FROM T_MTP_DIAG_TARGET_MULTI_JOB
			WHERE EXEC_NUM = ?
			  AND USER_NUM = ?
			  AND COMPANY_NUM = ?
			  AND JOB_NUM =? 			
			
		]]>
    </sql-query>
    
    
    
    <sql-query name="DELETE_TARGET_MULTI_JOB" comment="지우고 새로 넣는다." >
		<![CDATA[
		
		    --------------------------------------------------------------------------
		    -- fileName : diagnosis-querymap.xml / queryName : DELETE_TARGET_MULTI_JOB
		    -------------------------------------------------------------------------- 		
			DELETE FROM T_MTP_DIAG_TARGET_MULTI_JOB
			WHERE EXEC_NUM = ?
			  AND USER_NUM = ?
			  AND COMPANY_NUM = ?
			  		
			
		]]>
    </sql-query>    
    

	<sql-query name="SELECT_ALL_JOB1" 
	    comment="기본확인 정보에서 직무선택을 위해 직무 정보를 받아온다."
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
		<![CDATA[
		
		    ------------------------------------------------------------------
		    -- fileName : diagnosis-querymap.xml / queryName : SELECT_ALL_JOB1
		    ------------------------------------------------------------------ 		
			SELECT JOB_NUM, JOB_NAME , 'false' TARGET_YN FROM T_JOB_PROFILE
			WHERE COMPANY_NUM = ?
			  AND USE_FLAG = 'Y' AND PROFILE_CODE = '001'  
	            
		]]>
    </sql-query>    
    
	<sql-query name="SELECT_ALL_JOB2" 
	    comment="기본확인 정보에서 계층선택을 위해 계층 정보를 받아온다."
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
		<![CDATA[
		
		    ------------------------------------------------------------------
		    -- fileName : diagnosis-querymap.xml / queryName : SELECT_ALL_JOB2
		    ------------------------------------------------------------------ 	
		    SELECT JOB_NUM, JOB_NAME FROM T_JOB_PROFILE
			WHERE COMPANY_NUM = ?
			  AND USE_FLAG = 'Y' AND PROFILE_CODE = '002'  
	            
		]]>
    </sql-query>     
    
    
    DELETE_FROM_TARGET_MULTI_JOB
    
	<sql-query name="DELETE_FROM_TARGET_MULTI_JOB" 
	    comment="기본확인 정보에서 계층선택을 위해 계층 정보를 받아온다."
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
		<![CDATA[
		
		    -------------------------------------------------------------------------------
		    -- fileName : diagnosis-querymap.xml / queryName : DELETE_FROM_TARGET_MULTI_JOB
		    ------------------------------------------------------------------------------- 		
		    DELETE FROM T_MTP_DIAG_TARGET_MULTI_JOB
			WHERE EXEC_NUM =?
			AND USER_NUM =?
			AND COMPANY_NUM = ?  
	            
		]]>
    </sql-query>      
    


	<sql-query name="SELECT_CNT" 
	    comment="기본확인 정보에서 계층선택을 위해 계층 정보를 받아온다."
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
		<![CDATA[
		
		    -------------------------------------------------------------
		    -- fileName : diagnosis-querymap.xml / queryName : SELECT_CNT
		    ------------------------------------------------------------- 		
		    SELECT JOB_NUM FROM T_MTP_DIAG_TARGET_MULTI_JOB
			WHERE EXEC_NUM =?
			AND USER_NUM =?
			AND COMPANY_NUM = ?  
	            
		]]>
    </sql-query>  
    
    <sql-query name="SELECT_VAL_PERSON_INFO" comment="역량진단 평가 대상자정보 select" >
		<![CDATA[
		
		    -------------------------------------------------------------------------
		    -- FILENAME : DIAGNOSIS-QUERYMAP.XML / QUERYNAME : SELECT_VAL_PERSON_INFO
		    ------------------------------------------------------------------------- 			
            SELECT D.EXEC_USER_NUM, D.EXAMINEE_NUM, C.KOR_NAME EXAMINEE_NAME, D.COMPLETE_FLAG, D.VAL_DIRECTION_CODE
                   , C.DEPT_NUM, C.GRADE_NUM, C.EMP_NUM, C.GRADE_NAME, C.DEPT_NAME, C.ACHIEVE_CODE, C.SEX_CODE
                   , ROW_NUMBER () OVER (PARTITION BY D.VAL_DIRECTION_CODE ORDER BY C.GRADE_NAME, C.KOR_NAME) RNUM
              FROM (
                    SELECT A.USER_NUM, A.EMP_NUM, B.DEPT_NUM, A.KOR_NAME, B.GRADE_NUM
                           ,B.ACHIEVE_CODE, B.SEX_CODE
                           ,(SELECT DEPT_NAME FROM T_MTP_DEPT WHERE COMPANY_NUM = B.COMPANY_NUM AND DEPT_NUM = B.DEPT_NUM) DEPT_NAME
						   , A.GRADE_NAME
                      FROM T_MTP_USER A, T_MTP_DIAG_PLAN_TARGET_SET B
                     WHERE A.COMPANY_NUM = ?                            -- 1. 회사번호
                       AND A.USER_NUM = B.USER_NUM
                       AND B.EXEC_NUM = ?                               -- 2. 실시번호
                   ) C,
                   (
                     SELECT *
                       FROM T_MTP_DIAG_VAL_PERSON_SET
                      WHERE COMPANY_NUM = ?                             -- 3. 회사번호
                        AND EXEC_NUM = ?                                -- 4. 실시번호
                        AND EXEC_USER_NUM = ?                           -- 5. 사용자번호
                   ) D
            WHERE D.EXEC_USER_NUM = ?                                   -- 6. 사용자번호
                  AND C.USER_NUM = D.EXAMINEE_NUM
		]]>
    </sql-query>

    <sql-query name="UPDATE_PLAN_TARGET_INFO" comment="역량진단 평가 대상자정보 update" >
		<![CDATA[
				UPDATE t_mtp_diag_plan_target_set
				   SET dept_num=?, want_dept_num=?, grade_num=?, grade_name=?, sex_code=?
				      , age_code=?, career_code=?, stratum_code=?
				      ,updated_dtime=TO_CHAR(sysdate,'YYYYMMDDHH24MISS'), updated_by=?
				 WHERE exec_num=? AND company_num=? AND user_num=?
		]]>
    </sql-query>

	<sql-query name="SELECT_VAL_PERSON_INFO_DOWN_USER" comment="부하진단 역량진단 평가 대상자정보 select" >
		<![CDATA[
                SELECT user_num
                  FROM (
                        SELECT a.user_num
                          FROM t_mtp_user a, t_mtp_diag_plan_target_set b
                         WHERE a.company_num = ?
                               AND a.user_num = b.user_num
                               AND b.exec_num = ?
                       ) c,
                       (
                         SELECT *
                           FROM t_mtp_diag_val_person_set
                          WHERE company_num = ?
                                AND exec_num = ?
                                AND exec_user_num = ? AND VAL_DIRECTION_CODE = '003'
                       ) d
                WHERE d.exec_user_num = ?
                      AND c.user_num = d.examinee_num
		]]>
    </sql-query>

    <sql-query name="SELECT_LOW_DIAGNO_PERSON_CNT" comment="하향진단자 인원수" >
		<![CDATA[
		 	SELECT COUNT(EXAMINEE_NUM) CNT
			   FROM t_mtp_diag_val_person_set
			  WHERE company_num = ?
					AND exec_num = ?
					AND exec_user_num = ?
					AND VAL_DIRECTION_CODE = '003'
		]]>
    </sql-query>

	<sql-query name="SELECT_IMPORTANCE_EXAM_YN" comment="역량진단 중요도 문제 기등록 유무판단" >
		<![CDATA[
				SELECT COUNT(exec_num) yn
				  FROM t_mtp_user_diag_impt
				 WHERE company_num = ?
				       AND exec_num = ?
				       AND user_num = ?
		]]>
    </sql-query>

    <sql-query name="SELECT_IMPORTANCE_EXAM" comment="역량진단 중요도 문제 select : 처음한번만" >
		<![CDATA[
				SELECT a.comp_grp_code, b.code_name, a.comp_num, a.comp_name, a.comp_desc
				  FROM t_mtp_comp_profile a, t_common_code b
				 WHERE b.code_category_num='CD041'
				       AND a.use_flag='Y'
				       AND a.comp_grp_code = b.code
				 ORDER BY comp_grp_code, TO_NUMBER(comp_num)
		]]>
    </sql-query>

    <sql-query name="INSERT_IMPORTANCE_EXAM" comment="역량진단 중요도 문제 insert : 처음한번만" >
		<![CDATA[
			INSERT  INTO t_mtp_user_diag_impt(exec_num, company_num, user_num, comp_num, created_dtime
			                                , created_by)
   				  VALUES (?, ?, ?, ?, TO_CHAR(sysdate,'YYYYMMDDHH24MISS')
   				         ,?
   				         )
		]]>
    </sql-query>
    


    <sql-query name="SELECT_IMPORTANCE_EXAM_RE" comment="역량진단 중요도 문제 select : 두번째부터" >
		<![CDATA[
				SELECT rownum rnum, a.*
				  FROM (
				        SELECT d.comp_grp_code, d.code_name, d.comp_num exam_num, d.comp_name, d.comp_desc, c.impt_score score, c.impt_flag
				          FROM t_mtp_user_diag_impt c,
				               (
				                SELECT a.comp_grp_code, b.code_name, a.comp_num, a.comp_name, a.comp_desc
				                  FROM t_mtp_comp_profile a, t_common_code b
				                 WHERE b.code_category_num='CD041'
				                   AND a.comp_grp_code = b.code
				               ) d
				         WHERE c.company_num = ?
				               AND c.exec_num = ?
				               AND c.user_num = ?
				               AND c.comp_num = d.comp_num
				         ORDER BY comp_grp_code, TO_NUMBER(exam_num)
				        ) a
		]]>
    </sql-query>

    <sql-query name="UPDATE_IMPORTANCE_SCORE" comment="역량진단 중요도 문제 점수 등록" >
		<![CDATA[
				UPDATE t_mtp_user_diag_impt
				   SET impt_score=?, updated_dtime=TO_CHAR(sysdate,'YYYYMMDDHH24MISS'), updated_by=?
				 WHERE exec_num=?
				       AND user_num=?
				       AND comp_num=?
		]]>
    </sql-query>

    <sql-query name="UPDATE_IMPORTANCE_FLAG" comment="조화도 체크 역량 등록" >
		<![CDATA[
				UPDATE t_mtp_user_diag_impt
				   SET impt_flag=?, updated_dtime=TO_CHAR(sysdate,'YYYYMMDDHH24MISS'), updated_by=?
				 WHERE exec_num=?
				       AND user_num=?
				       AND comp_num=?
		]]>
    </sql-query>

    <sql-query name="SELECT_POSSESSION_EXAM_YN" comment="행동지표별 보유도 문제 기등록 유무판단" >
		<![CDATA[
		    ----------------------------------------------------------------------------
		    -- FILENAME : DIAGNOSIS-QUERYMAP.XML / QUERYNAME : SELECT_POSSESSION_EXAM_YN
		    ----------------------------------------------------------------------------		
			SELECT count(exec_num) yn
			  FROM t_mtp_diag_val_result_comp_act
			 WHERE exec_num=?
			       AND company_num=?
			       AND exec_user_num=?
		]]>
    </sql-query>
    
	<sql-query
	  name="SELECT_META"
	  comment="메타 정보를 가져온다. "
	  cacheable="true"
	  callable="true"
	  fetch-size="10"
	  flush-mode="always"
	  timeout="1000">
	 <![CDATA[
	 
		    --------------------------------------------------------------
		    -- FILENAME : DIAGNOSIS-QUERYMAP.XML / QUERYNAME : SELECT_META
		    --------------------------------------------------------------	 
			SELECT META_VAL FROM T_META WHERE COMPANY_NUM = ? AND META_CATEGORY_NUM = ?
	      ]]>
	 </sql-query>     

    <sql-query name="SELECT_EXEC_USER_LIST" comment="진단자가 진단해야하는 대상자 리스트" >
		<![CDATA[
		
		    ------------------------------------------------------------------------
		    -- FILENAME : DIAGNOSIS-QUERYMAP.XML / QUERYNAME : SELECT_EXEC_USER_LIST
		    ------------------------------------------------------------------------		
			SELECT EXAMINEE_NUM
			FROM T_MTP_DIAG_VAL_PERSON_SET A
			WHERE A.COMPANY_NUM=? AND A.EXEC_NUM = ? AND A.EXEC_USER_NUM = ?
		]]>
    </sql-query>

    <sql-query name="SELECT_POSSESSION_EXAM" comment="행동지표별 보유도 문제 select : 처음한번만 " >
		<![CDATA[
			SELECT ROWNUM RNUM, AA.*
			FROM(
				SELECT MCA.ACT_NUM, MCA.COMP_NUM, MCA.ACT_CONTENTS
				FROM T_MTP_COMP_ACT MCA,
					(
					SELECT A.COMP_NUM
					FROM T_MTP_COMP_PROFILE A, T_JOB_COMP_MAP B, T_JOB_PROFILE C
					WHERE A.COMP_NUM=B.COMP_NUM AND A.COMPANY_NUM=B.COMPANY_NUM
						AND B.COMPANY_NUM=C.COMPANY_NUM AND B.JOB_NUM=C.JOB_NUM
						AND A.COMPANY_NUM = ? AND A.USE_FLAG = 'Y'
						AND C.JOB_NUM = (
										 SELECT JOB_NUM
										 FROM T_MTP_DIAG_PLAN_TARGET_SET
										 WHERE COMPANY_NUM = ? AND EXEC_NUM = ?
											AND USER_NUM = ?
										 )
					) CMP
				WHERE MCA.COMP_NUM = CMP.COMP_NUM
					AND MCA.USE_FLAG = 'Y'
				ORDER BY MCA.COMP_NUM
				) AA
		]]>
    </sql-query>

    <sql-query name="INSERT_POSSESSION_EXAM" comment="행동지표별 역량다면진단 문제 insert : 처음한번만" >
		<![CDATA[
		
            -------------------------------------------------------------------------
            -- FILENAME : DIAGNOSIS-QUERYMAP.XML / QUERYNAME : INSERT_POSSESSION_EXAM
            -------------------------------------------------------------------------
            INSERT INTO T_MTP_DIAG_VAL_RESULT_COMP_ACT(
                EXEC_NUM, COMPANY_NUM, USER_NUM, EXEC_USER_NUM, ACT_NUM, ACT_SEQ, CREATED_DTIME, CREATED_BY)
            SELECT ?, COMPANY_NUM, ?, ?, ACT_NUM, ROWNUM RNUM, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'), ?    
                   -- 1.실시번호 2.사용자번호 3.사용자번호 4.사용자번호
            FROM(
                SELECT MCA.ACT_NUM, MCA.COMP_NUM, MCA.ACT_CONTENTS, MCA.COMPANY_NUM
                FROM T_MTP_COMP_ACT MCA,
                    (
                        SELECT DISTINCT COMP_NUM FROM T_JOB_COMP_MAP2 
                         WHERE COMPANY_NUM = ? AND JOB_NUM2 = ?                                        -- 5.회사번호, 6.계층번호
                           AND JOB_NUM1 IN ( SELECT JOB_NUM FROM T_MTP_DIAG_TARGET_MULTI_JOB  
                                              WHERE COMPANY_NUM = ?                                    -- 7.회사번호  
                                                AND EXEC_NUM = ?                                       -- 8.실시번호  
                                                AND USER_NUM = ?                                       -- 9.사용자번호
                                            )   
                        UNION ALL     
                        SELECT DISTINCT A.COMP_NUM
                        FROM T_MTP_COMP_PROFILE A, T_JOB_COMP_MAP B, T_JOB_PROFILE C, T_EXEC_COMP_GRP_MAP D, T_MTP_COMP_GRP E
                        WHERE A.COMP_NUM=B.COMP_NUM AND A.COMPANY_NUM=B.COMPANY_NUM AND B.COMPANY_NUM=C.COMPANY_NUM 
                          AND B.JOB_NUM=C.JOB_NUM AND A.COMP_GRP_NUM = D.COMP_GRP_NUM AND A.COMPANY_NUM = D.COMPANY_NUM 
                          AND D.COMP_GRP_NUM = E.COMP_GRP_NUM AND D.COMPANY_NUM = E.COMPANY_NUM 
                          AND E.USE_FLAG = 'Y' AND A.USE_FLAG = 'Y' 
                          AND D.EXEC_NUM = ?                            -- 10.실시번호
                          AND A.COMPANY_NUM = ?                         -- 11.회사번호
                          AND B.JOB_NUM = ?                            -- 12.계층번호
                          --AND D.COMP_GRP_NUM = 1
                          AND B.DEPT_LEVEL_CODE = (
                                                   SELECT DEPT_LEVEL_CODE FROM T_MTP_USER A, T_MTP_DEPT_ADDINFO B
                                                    WHERE A.USER_NUM = ?                            -- 13.사용자번호
                                                      AND A.COMPANY_NUM = ?                         -- 14.회사번호
                                                      AND A.DEPT_NUM = B.DEPT_NUM
                                                      AND A.COMPANY_NUM = B.COMPANY_NUM )                          
                    ) CMP
                WHERE MCA.COMP_NUM = CMP.COMP_NUM
                    AND MCA.USE_FLAG = 'Y' AND MCA.COMPANY_NUM = ?      -- 15.회사번호 
                ORDER BY 2
                ) AA
                
		]]>
    </sql-query>
    
    <sql-query name="INSERT_POSSESSION_EXAM_JOB_NUM2" comment="행동지표별 역량다면진단 문제 insert : 처음한번만 행동지표에 개층 추가 " >
		<![CDATA[
		
		    ----------------------------------------------------------------------------------
		    -- FILENAME : DIAGNOSIS-QUERYMAP.XML / QUERYNAME : INSERT_POSSESSION_EXAM_JOB_NUM2
		    ---------------------------------------------------------------------------------- 			
			INSERT INTO T_MTP_DIAG_VAL_RESULT_COMP_ACT(
				EXEC_NUM, COMPANY_NUM, USER_NUM, EXEC_USER_NUM, ACT_NUM, ACT_SEQ, CREATED_DTIME, CREATED_BY)
			SELECT ?, COMPANY_NUM, ?, ?, ACT_NUM, ROWNUM RNUM, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'), ?
			       -- 1.실시번호 2.사용자번호 3.사용자번호 4.사용자번호
			FROM(
				SELECT MCA.ACT_NUM, MCA.COMP_NUM, MCA.ACT_CONTENTS, MCA.COMPANY_NUM
				FROM T_MTP_COMP_ACT MCA, T_ACT_JOB_MAP AJM,
					(
					SELECT DISTINCT A.COMP_NUM
					FROM T_MTP_COMP_PROFILE A, T_JOB_COMP_MAP B, T_JOB_PROFILE C, T_EXEC_COMP_GRP_MAP D, T_MTP_COMP_GRP E
					WHERE A.COMP_NUM=B.COMP_NUM AND A.COMPANY_NUM=B.COMPANY_NUM
						AND B.COMPANY_NUM=C.COMPANY_NUM AND B.JOB_NUM=C.JOB_NUM
						AND A.COMP_GRP_NUM = D.COMP_GRP_NUM AND A.COMPANY_NUM = D.COMPANY_NUM AND D.EXEC_NUM = ?
						AND D.COMP_GRP_NUM = E.COMP_GRP_NUM AND D.COMPANY_NUM = E.COMPANY_NUM AND E.USE_FLAG = 'Y'
						AND A.COMPANY_NUM = ? AND A.USE_FLAG = 'Y'
						AND (C.JOB_NUM IN (
										 SELECT JOB_NUM
										 FROM T_MTP_DIAG_PLAN_TARGET_SET TS, T_MTP_DIAG_TARGET_MULTI_JOB MJ
										 WHERE TS.COMPANY_NUM = MJ.COMPANY_NUM
                                           AND TS.EXEC_NUM = MJ.EXEC_NUM
                                           AND TS.USER_NUM = MJ.USER_NUM 
										   AND TS.COMPANY_NUM = ? 
                                           AND TS.EXEC_NUM = ?
										   AND TS.USER_NUM = ?
                        				 )
                            OR
                            C.JOB_NUM = (
                                         SELECT JOB_NUM2
										 FROM T_MTP_DIAG_PLAN_TARGET_SET
										 WHERE COMPANY_NUM = ? AND EXEC_NUM = ?
											AND USER_NUM = ?
                                        ))
					) CMP
				WHERE MCA.COMP_NUM = CMP.COMP_NUM
					AND MCA.USE_FLAG = 'Y' AND MCA.COMPANY_NUM = ?
					AND MCA.ACT_NUM  = AJM.ACT_NUM AND MCA.COMPANY_NUM = AJM.COMPANY_NUM
                    AND AJM.JOB_NUM  = ( SELECT JOB_NUM2 FROM T_MTP_DIAG_PLAN_TARGET_SET WHERE COMPANY_NUM = ? AND EXEC_NUM = ? AND USER_NUM = ? )
				ORDER BY 2
				) AA 
		]]>
    </sql-query>

    <sql-query name="SELECT_POSSESSION_EXAM_LIST" comment="행동지표별 역량다면진단 문제목록 가져오기" >
		<![CDATA[
			SELECT ROWNUM RNUM, CO.*
            FROM(
                SELECT a.*, b.cnt que_cnt FROM 
                (            
                    SELECT B.company_num, B.comp_num, B.comp_name, B.comp_desc, A.act_num exam_num, A.act_contents
                        , CASE WHEN COUNT(c.getting_score) = COUNT(C.act_num )THEN 'Y'
                               ELSE 'N'
                          END flag
                    FROM t_mtp_comp_act a, t_mtp_comp_profile b, t_mtp_diag_val_result_comp_act c
                   WHERE a.comp_num = b.comp_num and a.company_num = b.company_num
					 AND A.act_num = C.act_num and a.company_num = c.company_num
					 AND c.company_num = ?
					 AND c.exec_num = ?
					 AND c.exec_user_num = ?
                    GROUP BY B.company_num, B.comp_num, B.comp_name, B.comp_desc, A.act_num, A.act_contents
                    ORDER BY B.comp_num, A.act_num
                ) a,
                (
                    select company_num, act_num, count(que_num) cnt 
                      from t_mtp_comp_act_question
                     where company_num = ?
                     group by company_num, act_num                                             
                ) b
                where a.company_num = b.company_num
                and a.exam_num = b.act_num                                
                ) CO			
		]]>
    </sql-query>
    
    
    
    <sql-query name="SELECT_JOBNAME2" comment="계층 정보" >
		<![CDATA[
		
            ------------------------------------------------------------------
            -- FILENAME : DIAGNOSIS-QUERYMAP.XML / QUERYNAME : SELECT_JOBNAME2
            ------------------------------------------------------------------  
            SELECT JOB_NUM2 FROM T_MTP_USER WHERE COMPANY_NUM = ? AND USER_NUM = ?
			
		]]>
    </sql-query>    
    
    <sql-query name="SELECT_POSSESSION_EXAM_LIST_QUESTION" comment="행동지표별 문항가져오기" >
		<![CDATA[
			  SELECT distinct A.act_num exam_num, que_num, question, grade                   
                FROM t_mtp_comp_act a, t_mtp_comp_profile b, t_mtp_diag_val_result_comp_act c, t_mtp_comp_act_question d
                WHERE a.comp_num = b.comp_num and a.company_num = b.company_num
                  AND A.act_num = C.act_num and a.company_num = c.company_num
                  AND A.act_num = d.act_num and a.company_num = d.company_num
                  AND c.company_num = ?
                  AND c.exec_num = ?
                  AND c.exec_user_num = ?
                order by  A.act_num, que_num
		]]>
    </sql-query>
    
    
    
    <sql-query name="UPDATE_T_MTP_USER" comment="사용자정보 (계층) 업데이트" >
		<![CDATA[
		
            ----------------------------------------------------------------------------
            -- FILENAME : DIAGNOSIS-QUERYMAP.XML / QUERYNAME : SELECT_POSSESSION_EXAM_RE
            ---------------------------------------------------------------------------- 
            UPDATE T_MTP_USER
               SET JOB_NUM2 = ?
             WHERE COMPANY_NUM = ?
               AND USER_NUM = ?		
			
		]]>
    </sql-query>
    
    
    
    <sql-query name="SELECT_MY_JOB1_LIST" comment="진단자 본인의 직무정보" >
		<![CDATA[
		
            ----------------------------------------------------------------------
            -- FILENAME : DIAGNOSIS-QUERYMAP.XML / QUERYNAME : SELECT_MY_JOB1_LIST
            ---------------------------------------------------------------------- 
			SELECT JOB_NUM, (SELECT JOB_NAME FROM T_JOB_PROFILE WHERE A.JOB_NUM = JOB_NUM AND A.COMPANY_NUM = COMPANY_NUM) JOB_NAME 
			  FROM T_MTP_DIAG_TARGET_MULTI_JOB A
			 WHERE EXEC_NUM = ?
			   AND COMPANY_NUM = ?
			   AND USER_NUM = ?	
			
		]]>
    </sql-query>
    
    <sql-query name="SELECT_MY_JOB2_LIST" comment="진단자 본인의 계층정보" >
		<![CDATA[
		
            ----------------------------------------------------------------------
            -- FILENAME : DIAGNOSIS-QUERYMAP.XML / QUERYNAME : SELECT_MY_JOB2_LIST
            ---------------------------------------------------------------------- 
			SELECT JOB_NUM2 JOB_NUM, (SELECT JOB_NAME FROM T_JOB_PROFILE WHERE A.JOB_NUM2 = JOB_NUM AND A.COMPANY_NUM = COMPANY_NUM) JOB_NAME 
			  FROM T_MTP_DIAG_PLAN_TARGET_SET A
			 WHERE EXEC_NUM = ?
			   AND COMPANY_NUM = ?
			   AND USER_NUM = ?	
			
		]]>
    </sql-query>    
    

    <sql-query name="SELECT_POSSESSION_EXAM_RE" comment="행동지표별 역량다면진단 문제 select : 두번째부터" >
		<![CDATA[
		
            ----------------------------------------------------------------------------
            -- FILENAME : DIAGNOSIS-QUERYMAP.XML / QUERYNAME : SELECT_POSSESSION_EXAM_RE
            ----------------------------------------------------------------------------             
            SELECT A.RNUM, A.EXAM_NUM, A.VAL_DIRECTION_CODE, A.GRADE_NAME, A.USER_NUM,
                   A.USER_NAME, A.SCORE, A.SEX_CODE, NVL(A.QUE_NUM, 0) QUE_NUM, -- NULL 이면 0로 이동  
                   B.QUE_CNT
              FROM ( 
                    SELECT *
                      FROM (
                            SELECT ROW_NUMBER () OVER (PARTITION BY DVRC.ACT_NUM ORDER BY DPTS.VAL_DIRECTION_CODE DESC, DVRC.USER_NUM) RNUM
                                 , DVRC.ACT_NUM EXAM_NUM , DPTS.VAL_DIRECTION_CODE , DPTS.GRADE_NAME , DVRC.USER_NUM 
                                 , (SELECT MU.KOR_NAME FROM T_MTP_USER MU WHERE MU.USER_NUM = DVRC.USER_NUM) USER_NAME
                                 , DVRC.GETTING_SCORE SCORE , DVRC.QUE_NUM , DPTS.SEX_CODE
                              FROM (
                                    SELECT ACT_NUM, USER_NUM, GETTING_SCORE, SEL_QUE_NUM AS QUE_NUM
                                      FROM T_MTP_DIAG_VAL_RESULT_COMP_ACT
                                     WHERE COMPANY_NUM = ?                                              -- 1. 회사번호
                                       AND EXEC_NUM = ?                                                 -- 2. 실시번호
                                       AND EXEC_USER_NUM = ?                                            -- 3. 사용자번호
                                   ) DVRC,
                                   (
                                    SELECT DPTS.GRADE_NAME, DVPS.EXAMINEE_NUM, DVPS.VAL_DIRECTION_CODE, DPTS.SEX_CODE
                                      FROM T_MTP_DIAG_PLAN_TARGET_SET DPTS, T_MTP_DIAG_VAL_PERSON_SET DVPS
                                     WHERE DPTS.COMPANY_NUM = ?                                         -- 4. 회사번호
                                       AND DPTS.EXEC_NUM = ?                                            -- 5. 실시번호
                                       AND DVPS.COMPANY_NUM = ?                                         -- 6. 회사번호
                                       AND DVPS.EXEC_NUM = ?                                            -- 7. 실시번호
                                       AND DVPS.EXEC_USER_NUM = ?                                       -- 8. 사용자번호
                                       AND DPTS.USER_NUM = DVPS.EXAMINEE_NUM
                                   ) DPTS
                             WHERE DPTS.EXAMINEE_NUM = DVRC.USER_NUM
                            )
                     ORDER BY TO_NUMBER(EXAM_NUM), RNUM
                    ) A,
                   (
                    SELECT COMPANY_NUM, ACT_NUM, COUNT(QUE_NUM) QUE_CNT 
                      FROM T_MTP_COMP_ACT_QUESTION
                     WHERE COMPANY_NUM = ?                                                              -- 9. 회사번호
                     GROUP BY COMPANY_NUM, ACT_NUM                                             
                    ) B
             WHERE A.EXAM_NUM = B.ACT_NUM 	
                			
		]]>
    </sql-query>

    <sql-query name="UPDATE_POSSESSION_SCORE" comment="행동지표별 역량다면진단 문제 점수 등록" >
		<![CDATA[
				UPDATE t_mtp_diag_val_result_comp_act
				   SET getting_score = (select NVL(GRADE, 0) from t_mtp_comp_act_question where company_num = ?  and act_num = ? and  que_num = ?), 
				       sel_que_num = ?, 
				       updated_dtime = TO_CHAR(sysdate,'YYYYMMDDHH24MISS'), 
				       updated_by = ?
				 WHERE company_num = ? AND exec_num = ?
				   AND user_num = ? AND exec_user_num = ? AND act_num = ?
		]]>
    </sql-query>

    <sql-query name="UPDATE_ACHIEVE_INFO" comment="부하 역량진단 평가 대상자 업적정보 update" >
		<![CDATA[
				UPDATE t_mtp_diag_plan_target_set
				   SET achieve_code = ?
				      ,updated_dtime=TO_CHAR(sysdate,'YYYYMMDDHH24MISS'), updated_by = ?
				 WHERE company_num = ? AND exec_num = ? AND user_num = ?
		]]>
    </sql-query>

    <sql-query name="UPDATE_COMPLETE_FLAG" comment="역량진단 완료여부 플레그 update" >
		<![CDATA[
				UPDATE t_mtp_diag_val_person_set
				   SET complete_flag=?
				      ,updated_dtime=TO_CHAR(sysdate,'YYYYMMDDHH24MISS'), updated_by=?
				 WHERE exec_num=? AND company_num=? AND exec_user_num=?
		]]>
    </sql-query>



	<sql-query name="SELECT_COMPANY_DIAG_LIST" comment="해당 회사가 계약한 진단정보 리스트" >
		<![CDATA[
			select rownum, aa.*
			from
			(select exec_num
				 , company_num
				 , exec_title
				 , NVL2(exec_sdate, SUBSTR(exec_sdate,1,4) || '.' ||SUBSTR(exec_sdate,5,2) || '.' || SUBSTR(exec_sdate,7,2), '') ||' ~ '||
				   NVL2(exec_edate, SUBSTR(exec_edate,1,4) || '.' || SUBSTR(exec_edate,5,2) || '.' || SUBSTR(exec_edate,7,2), '') AS exec_date
				 , NVL2(exec_sdate, SUBSTR(exec_sdate,1,4) || '.' ||SUBSTR(exec_sdate,5,2) || '.' || SUBSTR(exec_sdate,7,2), '') exec_sdate
				 , NVL2(exec_edate, SUBSTR(exec_edate,1,4) || '.' || SUBSTR(exec_edate,5,2) || '.' || SUBSTR(exec_edate,7,2), '') exec_edate
				 , exec_sdate exec_ssdate
				 , exec_edate exec_eedate
				 , open_flag
				 , use_flag
				 , complete_flag
				 , up_diag_flag
				 , down_diag_flag
				 , col_diag_flag
				 , up_weight
				 , down_weight
				 , col_weight
				 , self_weight
				 , SCDP_SDATE SCDP_SSDATE
				 , SCDP_EDATE SCDP_EEDATE
				 , NVL2(SCDP_SDATE, SUBSTR(SCDP_SDATE,1,4) || '.' ||SUBSTR(SCDP_SDATE,5,2) || '.' || SUBSTR(SCDP_SDATE,7,2), '') ||' ~ '||
				   NVL2(SCDP_EDATE, SUBSTR(SCDP_EDATE,1,4) || '.' || SUBSTR(SCDP_EDATE,5,2) || '.' || SUBSTR(SCDP_EDATE,7,2), '') AS SCDP_DATE
				 , NVL2(SCDP_SDATE, SUBSTR(SCDP_SDATE,1,4) || '.' ||SUBSTR(SCDP_SDATE,5,2) || '.' || SUBSTR(SCDP_SDATE,7,2), '') SCDP_SDATE
				 , NVL2(SCDP_EDATE, SUBSTR(SCDP_EDATE,1,4) || '.' || SUBSTR(SCDP_EDATE,5,2) || '.' || SUBSTR(SCDP_EDATE,7,2), '') SCDP_EDATE
				 , (CASE WHEN TO_CHAR(SYSDATE,'YYYYMMDD') >= SUBSTR(EXEC_SDATE,1,8) THEN 'N' ELSE 'Y' END) AS MODIFY_FLAG
				 , CDP_EXEC_TITLE
			  from t_mtp_exec
			 where company_num = ?
			   and open_flag = 'Y'
			   and use_flag = 'Y'
			   --and complete_flag  = 'N'
			order by to_number(exec_ssdate) asc) aa
			order by rownum desc
		]]>
    </sql-query>

	<sql-query name="SELECT_COMPANY_DIAG_ADMINLIST" comment="해당 회사가 계약한 진단정보 리스트(관리자)" >
		<![CDATA[
			select rownum, aa.*
			from
			(select exec_num
				 , a.company_num
				 , exec_title
				 , NVL2(exec_sdate, SUBSTR(exec_sdate,1,4) || '.' ||SUBSTR(exec_sdate,5,2) || '.' || SUBSTR(exec_sdate,7,2), '') ||' ~ '||
				   NVL2(exec_edate, SUBSTR(exec_edate,1,4) || '.' || SUBSTR(exec_edate,5,2) || '.' || SUBSTR(exec_edate,7,2), '') AS exec_date
				 , NVL2(exec_sdate, SUBSTR(exec_sdate,1,4) || '.' ||SUBSTR(exec_sdate,5,2) || '.' || SUBSTR(exec_sdate,7,2), '') exec_sdate
				 , NVL2(exec_edate, SUBSTR(exec_edate,1,4) || '.' || SUBSTR(exec_edate,5,2) || '.' || SUBSTR(exec_edate,7,2), '') exec_edate
				 , exec_sdate exec_ssdate
				 , exec_edate exec_eedate
				 , open_flag
				 , a.use_flag
				 , complete_flag
				 , up_diag_flag
				 , down_diag_flag
				 , col_diag_flag
				 , up_weight
				 , down_weight
				 , col_weight
				 , self_weight
				 , SCDP_SDATE SCDP_SSDATE
				 , SCDP_EDATE SCDP_EEDATE
				 , NVL2(SCDP_SDATE, SUBSTR(SCDP_SDATE,1,4) || '.' ||SUBSTR(SCDP_SDATE,5,2) || '.' || SUBSTR(SCDP_SDATE,7,2), '') ||' ~ '||
				   NVL2(SCDP_EDATE, SUBSTR(SCDP_EDATE,1,4) || '.' || SUBSTR(SCDP_EDATE,5,2) || '.' || SUBSTR(SCDP_EDATE,7,2), '') AS SCDP_DATE
				 , NVL2(SCDP_SDATE, SUBSTR(SCDP_SDATE,1,4) || '.' ||SUBSTR(SCDP_SDATE,5,2) || '.' || SUBSTR(SCDP_SDATE,7,2), '') SCDP_SDATE
				 , NVL2(SCDP_EDATE, SUBSTR(SCDP_EDATE,1,4) || '.' || SUBSTR(SCDP_EDATE,5,2) || '.' || SUBSTR(SCDP_EDATE,7,2), '') SCDP_EDATE
				 , (CASE WHEN TO_CHAR(SYSDATE,'YYYYMMDD') >= SUBSTR(EXEC_SDATE,1,8) THEN 'N' ELSE 'Y' END) AS MODIFY_FLAG
				 , b.company_name
			  from t_mtp_exec a, t_company_info b
			 where b.company_name like '%'||?||'%' and a.company_num = b.company_num
			   and open_flag = 'Y'
			   and a.use_flag = 'Y'
			   --and complete_flag  = 'N'
			order by to_number(exec_ssdate) asc) aa
			order by rownum desc
		]]>
    </sql-query>

    <sql-query name="SELECT_COMPANY_DIAG_MAXNUM" comment="해당 회사가 계약한 진단정보 중 가장 최신의 진단 번호 호출" >
		<![CDATA[
				SELECT MAX(TO_NUMBER(exec_num)) exec_num
				  FROM t_mtp_exec
				 WHERE company_num = ?
		]]>
    </sql-query>

	    <sql-query name="SELECT_COMPANY_DIAG_MAXNUM_USEY" comment="해당 회사가 계약한 진단정보 중 사용가능한 가장 최신의 진단 번호 호출" >
		<![CDATA[
				SELECT MAX(TO_NUMBER(exec_num)) exec_num
				  FROM t_mtp_exec
				 WHERE company_num = ? and use_flag = 'Y'
		]]>
    </sql-query>

    <sql-query name="SELECT_EXEC_STATE_INFO" comment="역량진단 기본정보 select" >
		<![CDATA[
				SELECT exec_num enum, exec_title etitle
                      ,SUBSTR(exec_sdate ,1,4)||'.'||SUBSTR(exec_sdate ,5,2)||'.'||SUBSTR(exec_sdate ,7,2)
                       ||' ~ '||
                       SUBSTR(exec_edate ,1,4)||'.'||SUBSTR(exec_edate ,5,2)||'.'||SUBSTR(exec_edate ,7,2)
                       eddate
                      , exec_sdate sdate
                      , exec_edate edate
                      --, contract_person_num pcount
					  , open_flag
                      , complete_flag comp_flag
					  ,SUBSTR(scdp_sdate ,1,4)||'.'||SUBSTR(scdp_sdate ,5,2)||'.'||SUBSTR(scdp_sdate ,7,2)
                       ||' ~ '||
                       SUBSTR(scdp_edate ,1,4)||'.'||SUBSTR(scdp_edate ,5,2)||'.'||SUBSTR(scdp_edate ,7,2) cdpdate
                      , cdp_exec_title
                  FROM t_mtp_exec
                 WHERE company_num = ?
                       AND exec_num = ?
		]]>
    </sql-query>

    <sql-query name="SELECT_DIAG_PERSON_LIST" comment="역량진단 현황정보 - 실시자 전체 기준" >
		<![CDATA[
			SELECT TARGET, NON, TEMP, COMP
            	, (SELECT COUNT(*) FROM (SELECT USER_NUM FROM T_MTP_CDP
                       WHERE COMPANY_NUM = ? AND EXEC_NUM = ? GROUP BY USER_NUM) A) CDPCNT
			FROM(
				SELECT COUNT(exec_user_num) target, SUM(non) non, SUM(temp) temp, SUM(comp) comp
				  FROM (
				        SELECT exec_user_num
				             , CASE WHEN total_cnt = non_cnt THEN 1
				                    ELSE 0
				               END non
				             , CASE WHEN temp_cnt > 0 OR total_cnt > comp_cnt AND comp_cnt > 0 THEN 1
				                    ELSE 0
				               END temp
				             , CASE WHEN total_cnt = comp_cnt THEN 1
				                    ELSE 0
				               END comp
				          FROM (
				                SELECT exec_user_num
				                     , COUNT(exec_user_num) total_cnt
				                     , SUM(non_diag) non_cnt
				                     , SUM(start_diag) temp_cnt
				                     , SUM(complete_flag) comp_cnt
				                  FROM (
				                        SELECT a.examinee_num
				                             , a.exec_user_num
				                             , CASE WHEN a.complete_flag = 1 THEN 0
				                                    WHEN b.non_diag is null THEN 1
				                                    WHEN b.non_diag = 1 THEN 1
				                                    ELSE 0
				                               END non_diag
				                             , CASE WHEN a.complete_flag = 1 THEN 0
				                                    WHEN b.start_diag is null THEN 0
				                                    ELSE b.start_diag
				                               END start_diag
				                             , a.complete_flag
				                          FROM (
				                                SELECT exec_user_num
				                                     , examinee_num
				                                     , DECODE(complete_flag, 'Y', COUNT(complete_flag), 'N', 0) complete_flag
				                                  FROM t_mtp_diag_val_person_set
				                                 WHERE company_num = ?
				                                       AND exec_num = ?
				                                 GROUP BY exec_user_num, examinee_num, complete_flag
				                               ) a,
				                               (
				                                SELECT exec_user_num
				                                     , user_num
				                                     , DECODE(aa.getting_score, 1, 1, 0, 0) start_diag
				                                     , DECODE(aa.getting_score, 1, 0, 0, 1) non_diag
				                                  FROM (
				                                        SELECT exec_user_num, user_num
				                                             , CASE WHEN COUNT(getting_score) is null THEN 0
				                                                      ELSE 1
				                                               END getting_score
				                                          FROM t_mtp_diag_val_result_comp_act
				                                         WHERE company_num = ?
				                                               AND exec_num = ?
				                                         GROUP BY exec_user_num, user_num
				                                       ) aa
				                                 GROUP BY exec_user_num, user_num, getting_score
				                               ) b
				                         WHERE a.exec_user_num = b.exec_user_num(+)
				                               AND a.examinee_num = b.user_num(+)
				                        ) v_data
				                 GROUP BY exec_user_num
				               ) a
				       )
				)
		]]>
    </sql-query>

	<sql-query name="SELECT_DIAG_PERSON_LIST_SE" comment="하위 부서 인원">
		<![CDATA[
			SELECT TARGET, NON, TEMP, COMP
                    , (SELECT COUNT(*) FROM (SELECT USER_NUM FROM T_MTP_CDP
                       WHERE COMPANY_NUM = ? AND EXEC_NUM = ? GROUP BY USER_NUM) A) CDPCNT
                FROM(
					SELECT COUNT(exec_user_num) target, SUM(non) non, SUM(temp) temp, SUM(comp) comp
					  FROM (
							SELECT exec_user_num
								 , CASE WHEN total_cnt = non_cnt THEN 1 ELSE 0 END non
								 , CASE WHEN temp_cnt > 0 OR total_cnt > comp_cnt AND comp_cnt > 0 THEN 1 ELSE 0 END temp
								 , CASE WHEN total_cnt = comp_cnt THEN 1 ELSE 0 END comp
							  FROM (
									SELECT exec_user_num, COUNT(exec_user_num) total_cnt, SUM(non_diag) non_cnt
										 , SUM(start_diag) temp_cnt, SUM(complete_flag) comp_cnt
									  FROM (
											SELECT a.examinee_num, a.exec_user_num
												 , CASE WHEN a.complete_flag = 1 THEN 0
														WHEN b.non_diag is null THEN 1
														WHEN b.non_diag = 1 THEN 1
														ELSE 0
												   END non_diag
												 , CASE WHEN a.complete_flag = 1 THEN 0
														WHEN b.start_diag is null THEN 0
														ELSE b.start_diag
												   END start_diag
												 , a.complete_flag
											  FROM (
													SELECT exec_user_num, examinee_num
														 , DECODE(complete_flag, 'Y', COUNT(complete_flag), 'N', 0) complete_flag
													  FROM (
															 SELECT EXEC_USER_NUM, EXAMINEE_NUM, COMPLETE_FLAG, TS.DEPT_NUM
															   FROM t_mtp_diag_val_person_set PS, T_MTP_DIAG_PLAN_TARGET_SET TS
															  WHERE TS.COMPANY_NUM = ? AND TS.EXEC_NUM = ?
																AND PS.COMPANY_NUM = ? AND PS.EXEC_NUM = ?
																AND PS.COMPANY_NUM=TS.COMPANY_NUM AND PS.EXEC_NUM=TS.EXEC_NUM AND PS.EXEC_USER_NUM = TS.USER_NUM
                                                                AND TS.DEPT_NUM in ( 
																					SELECT A.DEPT_NUM FROM T_MTP_DEPT A 
																					WHERE A.COMPANY_NUM = ?
																					CONNECT BY A.PARENT_DEPT_NUM = PRIOR A.DEPT_NUM
																					START WITH A.DEPT_NUM = ?
																					)
															) GROUP BY exec_user_num, examinee_num, complete_flag
												   ) a,
												   (
													SELECT exec_user_num, user_num, DECODE(aa.getting_score, 1, 1, 0, 0) start_diag
														 , DECODE(aa.getting_score, 1, 0, 0, 1) non_diag
													  FROM (
															SELECT exec_user_num, user_num
																 , CASE WHEN COUNT(getting_score) is null THEN 0
																		  ELSE 1
																   END getting_score
															  FROM t_mtp_diag_val_result_comp_act
															 WHERE company_num = ? AND exec_num = ? GROUP BY exec_user_num, user_num
														   ) aa
													 GROUP BY exec_user_num, user_num, getting_score
												   ) b
											 WHERE a.exec_user_num = b.exec_user_num(+)
												   AND a.examinee_num = b.user_num(+)
											) v_data
									 GROUP BY exec_user_num
								   ) a
						   )
					)
		]]>
	</sql-query>

    <sql-query name="SELECT_DIAG_EXEC_USER_LIST" comment="역량진단 현황정보 - 진단자별 기준" >
		<![CDATA[--SELECT_DIAG_EXEC_USER_LIST
				SELECT temp_user.user_num, temp_user.emp_num, temp_user.kor_name, temp_user.dept_num, temp_user.dept_name
					 , (SELECT JOB_NAME FROM T_JOB_PROFILE WHERE JOB_NUM = temp_user.JOB_NUM AND COMPANY_NUM = temp_user.COMPANY_NUM ) job_name
					 , (SELECT JOB_NAME FROM T_JOB_PROFILE WHERE JOB_NUM = temp_user.JOB_NUM2 AND COMPANY_NUM = temp_user.COMPANY_NUM ) job_name2
					 , temp_user.grade_name, temp_diag.total_cnt, temp_diag.non_cnt, temp_diag.temp_cnt
				     , temp_diag.comp_cnt
					 , CASE WHEN B.USER_NUM is not null THEN
                     '수립'
                     ELSE
                     '미수립'
                     END cdp_flag
				  FROM (
				        SELECT b.user_num, a.emp_num, a.kor_name, b.dept_num,
                             (select dept_name from t_mtp_dept where dept_num = b.dept_num and company_num = ?) dept_name
				             , b.grade_num, a.grade_name, B.job_num, B.job_num2, A.COMPANY_NUM
				          FROM t_mtp_user a
				             , t_mtp_diag_plan_target_set b
				         WHERE b.company_num = ?
				               AND b.exec_num = ?
				               AND a.user_num = b.user_num
				       ) temp_user,
				       (
				        SELECT exec_user_num
				        	 , COUNT(exec_user_num) total_cnt
				             , SUM(non_diag) non_cnt
				             , SUM(start_diag) temp_cnt
				             , SUM(complete_flag) comp_cnt
				          FROM (
				                SELECT a.examinee_num
				                     , a.exec_user_num
				                     , CASE WHEN a.complete_flag = 1 THEN 0
				                            WHEN b.non_diag is null THEN 1
				                            WHEN b.non_diag = 1 THEN 1
				                            ELSE 0
				                       END non_diag
				                     , CASE WHEN a.complete_flag = 1 THEN 0
				                            WHEN b.start_diag is null THEN 0
				                            ELSE b.start_diag
				                       END start_diag
				                     , a.complete_flag
				                  FROM (
				                        SELECT exec_user_num
				                             , examinee_num
				                             , DECODE(complete_flag, 'Y', COUNT(complete_flag), 'N', 0) complete_flag
				                          FROM t_mtp_diag_val_person_set
				                         WHERE company_num = ?
				                               AND exec_num = ?
				                         GROUP BY exec_user_num, examinee_num, complete_flag
				                       ) a,
				                       (
				                        SELECT exec_user_num
				                             , user_num
				                             , DECODE(aa.getting_score, 1, 1, 0, 0) start_diag
				                             , DECODE(aa.getting_score, 1, 0, 0, 1) non_diag
				                          FROM (
				                                SELECT exec_user_num, user_num
				                                     , CASE WHEN COUNT(getting_score) is null THEN 0
				                                              ELSE 1
				                                       END getting_score
				                                  FROM t_mtp_diag_val_result_comp_act
				                                 WHERE company_num = ?
				                                       AND exec_num = ?
				                                 GROUP BY exec_user_num, user_num
				                               ) aa
				                         GROUP BY exec_user_num, user_num, getting_score
				                       ) b
				                 WHERE a.exec_user_num = b.exec_user_num(+)
				                       AND a.examinee_num = b.user_num(+)
				                ) v_data
				         GROUP BY exec_user_num
				       ) temp_diag, (SELECT USER_NUM FROM T_MTP_CDP WHERE COMPANY_NUM = ? AND EXEC_NUM = ? GROUP BY USER_NUM) B
				 WHERE temp_user.user_num = temp_diag.exec_user_num
					   AND temp_user.user_num = B.USER_NUM(+)
				 	   #where#
				 ORDER BY temp_user.dept_name, temp_user.kor_name

		]]>
    </sql-query>

	<sql-query name="SELECT_DIAG_EXEC_USER_LIST_SE" comment="부서별 실시인원을 가져온다.">
		<![CDATA[
					SELECT temp_user.user_num, temp_user.emp_num,
						   temp_user.kor_name, temp_user.dept_num, temp_user.dept_name,
						   FUN_EXEC_USER_JOB_INFO(temp_user.company_num, temp_user.exec_num, temp_user.user_num ) job_name,
						   (SELECT JOB_NAME FROM T_JOB_PROFILE WHERE JOB_NUM = temp_user.JOB_NUM2 AND COMPANY_NUM = temp_user.COMPANY_NUM ) job_name2,
					 	   temp_user.grade_name, temp_diag.total_cnt, temp_diag.non_cnt,
						   temp_diag.temp_cnt, temp_diag.comp_cnt
						   --, CASE WHEN B.USER_NUM is not null THEN '�닔由�' ELSE '誘몄닔由�' END cdp_flag
					  FROM (
							SELECT b.user_num, a.emp_num, a.kor_name, A.dept_num, c.dept_name, b.exec_num
								 , b.grade_num, a.grade_name, b.job_num2, A.COMPANY_NUM
							  FROM t_mtp_user a, t_mtp_diag_plan_target_set b, t_mtp_dept c
							 WHERE b.company_num = ?
								   AND b.exec_num = ? AND c.company_num = ? AND a.user_num = b.user_num
								   AND b.dept_num = c.dept_num
								   AND a.DEPT_NUM in ( 
								   					SELECT A.DEPT_NUM FROM T_MTP_DEPT A 
													WHERE A.COMPANY_NUM = ?
													CONNECT BY A.PARENT_DEPT_NUM = PRIOR A.DEPT_NUM
													START WITH A.DEPT_NUM = ?
								   					 )
						   ) temp_user,
						   (
							SELECT exec_user_num, COUNT(exec_user_num) total_cnt, SUM(non_diag) non_cnt
								 , SUM(start_diag) temp_cnt, SUM(complete_flag) comp_cnt
							  FROM (
									SELECT a.examinee_num , a.exec_user_num
										 , CASE WHEN a.complete_flag = 1 THEN 0
												WHEN b.non_diag is null THEN 1
												WHEN b.non_diag = 1 THEN 1
												ELSE 0
										   END non_diag
										 , CASE WHEN a.complete_flag = 1 THEN 0
												WHEN b.start_diag is null THEN 0
												ELSE b.start_diag
										   END start_diag
										 , a.complete_flag
									  FROM (
											SELECT exec_user_num, examinee_num,
												   DECODE(complete_flag, 'Y', COUNT(complete_flag), 'N', 0) complete_flag
											  FROM t_mtp_diag_val_person_set
											 WHERE company_num = ? AND exec_num = ?
											 GROUP BY exec_user_num, examinee_num, complete_flag
										   ) a,
										   (
											SELECT exec_user_num, user_num
												 , DECODE(aa.getting_score, 1, 1, 0, 0) start_diag
												 , DECODE(aa.getting_score, 1, 0, 0, 1) non_diag
											  FROM (
													SELECT exec_user_num, user_num
														 , CASE WHEN COUNT(getting_score) is null THEN 0
																  ELSE 1
														   END getting_score
													  FROM t_mtp_diag_val_result_comp_act
													 WHERE company_num = ? AND exec_num = ?
													 GROUP BY exec_user_num, user_num
												   ) aa
											 GROUP BY exec_user_num, user_num, getting_score
										   ) b
									 WHERE a.exec_user_num = b.exec_user_num(+)
										   AND a.examinee_num = b.user_num(+)
									) v_data
							 GROUP BY exec_user_num
						   ) temp_diag 
						   --, (SELECT USER_NUM FROM T_MTP_CDP WHERE COMPANY_NUM = ? AND EXEC_NUM = ? GROUP BY USER_NUM) B
					 WHERE temp_user.user_num = temp_diag.exec_user_num
							--AND temp_user.user_num = B.USER_NUM(+)
							#where#
					 ORDER BY temp_user.dept_name, temp_user.kor_name
		]]>
	</sql-query>

    <sql-query name="SELECT_EDU_DIAG_EXEC_USER_LIST" comment="교육계획 현황정보 - 진단자별 기준" >
		<![CDATA[--SELECT_EDU_DIAG_EXEC_USER_LIST
				SELECT temp_user.user_num, temp_user.emp_num, temp_user.kor_name, temp_user.dept_num, temp_user.dept_name
					 , (SELECT JOB_NAME FROM T_JOB_PROFILE WHERE JOB_NUM = temp_user.JOB_NUM AND COMPANY_NUM = temp_user.COMPANY_NUM ) job_name
					 , (SELECT JOB_NAME FROM T_JOB_PROFILE WHERE JOB_NUM = temp_user.JOB_NUM2 AND COMPANY_NUM = temp_user.COMPANY_NUM ) job_name2
					 , temp_user.grade_name, temp_diag.total_cnt, temp_diag.non_cnt, temp_diag.temp_cnt
				     , temp_diag.comp_cnt
					 , CASE WHEN B.USER_NUM is not null THEN
                     '수립'
                     ELSE
                     '미수립'
                     END cdp_flag
				  FROM (
				        SELECT b.user_num, a.emp_num, a.kor_name, b.dept_num,
                             (select dept_name from t_mtp_dept where dept_num = b.dept_num and company_num = ?) dept_name
				             , b.grade_num, a.grade_name, B.job_num, B.job_num2, A.COMPANY_NUM
				          FROM t_mtp_user a
				             , t_mtp_diag_plan_target_set b
				         WHERE b.company_num = ?
				               AND b.exec_num = ?
				               AND a.user_num = b.user_num
				       ) temp_user,
				       (
				        SELECT exec_user_num
				        	 , COUNT(exec_user_num) total_cnt
				             , SUM(non_diag) non_cnt
				             , SUM(start_diag) temp_cnt
				             , SUM(complete_flag) comp_cnt
				          FROM (
				                SELECT a.examinee_num
				                     , a.exec_user_num
				                     , CASE WHEN a.complete_flag = 1 THEN 0
				                            WHEN b.non_diag is null THEN 1
				                            WHEN b.non_diag = 1 THEN 1
				                            ELSE 0
				                       END non_diag
				                     , CASE WHEN a.complete_flag = 1 THEN 0
				                            WHEN b.start_diag is null THEN 0
				                            ELSE b.start_diag
				                       END start_diag
				                     , a.complete_flag
				                  FROM (
				                        SELECT exec_user_num
				                             , examinee_num
				                             , DECODE(complete_flag, 'Y', COUNT(complete_flag), 'N', 0) complete_flag
				                          FROM t_mtp_diag_val_person_set
				                         WHERE company_num = ?
				                               AND exec_num = ?
				                         GROUP BY exec_user_num, examinee_num, complete_flag
				                       ) a,
				                       (
				                        SELECT exec_user_num
				                             , user_num
				                             , DECODE(aa.getting_score, 1, 1, 0, 0) start_diag
				                             , DECODE(aa.getting_score, 1, 0, 0, 1) non_diag
				                          FROM (
				                                SELECT exec_user_num, user_num
				                                     , CASE WHEN COUNT(getting_score) is null THEN 0
				                                              ELSE 1
				                                       END getting_score
				                                  FROM t_mtp_diag_val_result_comp_act
				                                 WHERE company_num = ?
				                                       AND exec_num = ?
				                                 GROUP BY exec_user_num, user_num
				                               ) aa
				                         GROUP BY exec_user_num, user_num, getting_score
				                       ) b
				                 WHERE a.exec_user_num = b.exec_user_num(+)
				                       AND a.examinee_num = b.user_num(+)
				                ) v_data
				         GROUP BY exec_user_num
				       ) temp_diag, (SELECT USER_NUM FROM T_CDP_PLAN WHERE COMPANY_NUM = ? AND EXEC_NUM = ? AND APPROVAL_NUM IS NOT NULL OR APPROVAL_NUM_CDP IS NOT NULL) B
				 WHERE temp_user.user_num = temp_diag.exec_user_num
					   AND temp_user.user_num = B.USER_NUM(+)
				 	   --AND temp_diag.total_cnt = temp_diag.comp_cnt
				 ORDER BY temp_user.dept_name, temp_user.kor_name

		]]>
    </sql-query>

	<sql-query name="SELECT_EDU_DIAG_EXEC_USER_LIST_SE" comment="교육계획 현황 - 부서별 실시인원을 가져온다.">
		<![CDATA[
					SELECT temp_user.user_num, temp_user.emp_num,
						   temp_user.kor_name, temp_user.dept_num, temp_user.dept_name,
						   FUN_EXEC_USER_JOB_INFO(temp_user.company_num, temp_user.exec_num, temp_user.user_num ) job_name,
						   (SELECT JOB_NAME FROM T_JOB_PROFILE WHERE JOB_NUM = temp_user.JOB_NUM2 AND COMPANY_NUM = temp_user.COMPANY_NUM ) job_name2,
					 	   temp_user.grade_name, temp_diag.total_cnt, temp_diag.non_cnt,
						   temp_diag.temp_cnt, temp_diag.comp_cnt
						   --, CASE WHEN B.USER_NUM is not null THEN '�닔由�' ELSE '誘몄닔由�' END cdp_flag
					  FROM (
							SELECT b.user_num, a.emp_num, a.kor_name, A.dept_num, c.dept_name, b.exec_num
								 , b.grade_num, a.grade_name, B.job_num2, A.COMPANY_NUM
							  FROM t_mtp_user a, t_mtp_diag_plan_target_set b, t_mtp_dept c
							 WHERE b.company_num = ?
								   AND b.exec_num = ? AND c.company_num = ? 
								   AND a.user_num = b.user_num and a.company_num = b.company_num
                                   AND b.dept_num = c.dept_num and b.company_num = c.company_num
								   AND b.DEPT_NUM in ( 
												   SELECT A.DEPT_NUM FROM T_MTP_DEPT A 
													WHERE A.COMPANY_NUM = ?
													CONNECT BY A.PARENT_DEPT_NUM = PRIOR A.DEPT_NUM
													START WITH A.DEPT_NUM = ?
								   					 )
						   ) temp_user,
						   (
							SELECT exec_user_num, COUNT(exec_user_num) total_cnt, SUM(non_diag) non_cnt
								 , SUM(start_diag) temp_cnt, SUM(complete_flag) comp_cnt
							  FROM (
									SELECT a.examinee_num , a.exec_user_num
										 , CASE WHEN a.complete_flag = 1 THEN 0
												WHEN b.non_diag is null THEN 1
												WHEN b.non_diag = 1 THEN 1
												ELSE 0
										   END non_diag
										 , CASE WHEN a.complete_flag = 1 THEN 0
												WHEN b.start_diag is null THEN 0
												ELSE b.start_diag
										   END start_diag
										 , a.complete_flag
									  FROM (
											SELECT exec_user_num, examinee_num,
												   DECODE(complete_flag, 'Y', COUNT(complete_flag), 'N', 0) complete_flag
											  FROM t_mtp_diag_val_person_set
											 WHERE company_num = ? AND exec_num = ?
											 GROUP BY exec_user_num, examinee_num, complete_flag
										   ) a,
										   (
											SELECT exec_user_num, user_num
												 , DECODE(aa.getting_score, 1, 1, 0, 0) start_diag
												 , DECODE(aa.getting_score, 1, 0, 0, 1) non_diag
											  FROM (
													SELECT exec_user_num, user_num
														 , CASE WHEN COUNT(getting_score) is null THEN 0
																  ELSE 1
														   END getting_score
													  FROM t_mtp_diag_val_result_comp_act
													 WHERE company_num = ? AND exec_num = ?
													 GROUP BY exec_user_num, user_num
												   ) aa
											 GROUP BY exec_user_num, user_num, getting_score
										   ) b
									 WHERE a.exec_user_num = b.exec_user_num(+)
										   AND a.examinee_num = b.user_num(+)
									) v_data
							 GROUP BY exec_user_num
						   ) temp_diag
						   --, (SELECT USER_NUM FROM T_CDP_PLAN WHERE COMPANY_NUM = ? AND EXEC_NUM = ? AND APPROVAL_NUM IS NOT NULL OR APPROVAL_NUM_CDP IS NOT NULL) B
					 WHERE temp_user.user_num = temp_diag.exec_user_num(+)
							--AND temp_user.user_num = B.USER_NUM(+)
							--AND temp_diag.total_cnt = temp_diag.comp_cnt
					 ORDER BY temp_user.dept_name, temp_user.kor_name
		]]>
	</sql-query>


    <sql-query name="SELECT_DIAG_EXEC_USER_DETAIL" comment="역량진단 현황정보 - 진단자별 상세" >
		<![CDATA[
				SELECT (SELECT JOB_NAME FROM T_JOB_PROFILE WHERE JOB_NUM = AA.JOB_NUM2 AND COMPANY_NUM = AA.COMPANY_NUM ) job_name2
					 , b.examinee_num, aa.emp_num, aa.kor_name, aa.dept_name, aa.grade_name, b.complete_flag, b.complete_dtime
				     , CASE WHEN b.val_direction_code = '001' THEN '상향'
				            WHEN b.val_direction_code = '002' THEN '동료'
				            WHEN b.val_direction_code = '003' THEN '하향'
				            WHEN b.val_direction_code = '004' THEN '자가'
				            ELSE ''
				       END val_direction
				  FROM (
				        SELECT b.user_num, a.emp_num, a.kor_name, c.dept_name, a.grade_name, B.JOB_NUM2, A.COMPANY_NUM--, d.job_name
				          FROM t_mtp_user a
				             , t_mtp_diag_plan_target_set b
				             , t_mtp_dept c
				             --, t_job_profile d
				         WHERE b.company_num = ?
				               AND b.exec_num = ?
				               AND c.company_num = ?
				               AND a.user_num = b.user_num
				               AND b.dept_num = c.dept_num
				               --AND a.job_num = d.job_num
				       ) aa,
				       (
				        SELECT examinee_num, exec_user_num, complete_flag, val_direction_code
				             , CASE WHEN updated_dtime is null THEN ''
				                    WHEN complete_flag = 'Y' THEN SUBSTR(updated_dtime ,1,4)||'.'||SUBSTR(updated_dtime ,5,2)||'.'||SUBSTR(updated_dtime ,7,2)||' '||SUBSTR(updated_dtime ,9,2)||':'||SUBSTR(updated_dtime ,11,2)
				                    ELSE ''
				               END complete_dtime
				          FROM t_mtp_diag_val_person_set
				         WHERE company_num = ?
				               AND exec_num = ?
				               AND exec_user_num = ?
				       ) b
				 WHERE aa.user_num = b.examinee_num
				 ORDER BY val_direction, aa.dept_name, aa.kor_name

		]]>
    </sql-query>


     <sql-query name="SELECT_DIAG_EXEC_USER_STATE_EXCEL_DOWN" comment="역량진단 현황정보 엑셀 다운로드 - 진단자별 기준" >
		<![CDATA[
				SELECT temp_user.emp_num, temp_user.kor_name, temp_user.dept_name, temp_user.grade_name, temp_diag.total_cnt
				     , temp_diag.non_cnt, temp_diag.temp_cnt, temp_diag.comp_cnt
				  FROM (
				        SELECT b.user_num, a.emp_num, a.kor_name, b.dept_num, c.dept_name
				             , b.grade_num, b.grade_name
				          FROM t_mtp_user a
				             , t_mtp_diag_plan_target_set b
				             , t_mtp_dept c
				         WHERE b.company_num = ?
				               AND b.exec_num = ?
				               AND c.company_num = ?
				               AND a.user_num = b.user_num
				               AND b.dept_num = c.dept_num
				       ) temp_user,
				       (
				        SELECT exec_user_num
				        	 , COUNT(exec_user_num) total_cnt
				             , SUM(non_diag) non_cnt
				             , SUM(start_diag) temp_cnt
				             , SUM(complete_flag) comp_cnt
				          FROM (
				                SELECT a.examinee_num
				                     , a.exec_user_num
				                     , CASE WHEN a.complete_flag = 1 THEN 0
				                            WHEN b.non_diag is null THEN 1
				                            WHEN b.non_diag = 1 THEN 1
				                            ELSE 0
				                       END non_diag
				                     , CASE WHEN a.complete_flag = 1 THEN 0
				                            WHEN b.start_diag is null THEN 0
				                            ELSE b.start_diag
				                       END start_diag
				                     , a.complete_flag
				                  FROM (
				                        SELECT exec_user_num
				                             , examinee_num
				                             , DECODE(complete_flag, 'Y', COUNT(complete_flag), 'N', 0) complete_flag
				                          FROM t_mtp_diag_val_person_set
				                         WHERE company_num = ?
				                               AND exec_num = ?
				                         GROUP BY exec_user_num, examinee_num, complete_flag
				                       ) a,
				                       (
				                        SELECT exec_user_num
				                             , user_num
				                             , DECODE(aa.getting_score, 1, 1, 0, 0) start_diag
				                             , DECODE(aa.getting_score, 1, 0, 0, 1) non_diag
				                          FROM (
				                                SELECT exec_user_num, user_num
				                                     , CASE WHEN COUNT(getting_score) = 0 THEN 0
				                                              ELSE 1
				                                       END getting_score
				                                  FROM t_mtp_diag_val_result_comp_act
				                                 WHERE company_num = ?
				                                       AND exec_num = ?
				                                 GROUP BY exec_user_num, user_num
				                               ) aa
				                         GROUP BY exec_user_num, user_num, getting_score
				                       ) b
				                 WHERE a.exec_user_num = b.exec_user_num(+)
				                       AND a.examinee_num = b.user_num(+)
				                ) v_data
				         GROUP BY exec_user_num
				       ) temp_diag
				 WHERE temp_user.user_num = temp_diag.exec_user_num
				 #where#
				 #where1#
				 ORDER BY temp_user.dept_name, temp_user.grade_name, temp_user.kor_name
		]]>
    </sql-query>

    <sql-query name="AUTO_DIAG_COMPLETE_RESULT_SET"
		comment="역량진단 완료 시 자동결과 셋팅 프로시져"
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
		<![CDATA[
			 call P_DIAG_COMPLET(?,?,?)
		]]>
	</sql-query>

	<sql-query name="DIAG_EXEC_COMP_SET" comment="역량진단 완료 플레그 변경 : Y:N " >
		<![CDATA[
			 UPDATE t_mtp_exec
			    SET complete_flag = ?
			  WHERE exec_num=? AND company_num=?
		]]>
	</sql-query>











	<sql-query name="SELECT_DEPT_COMP_LIST" comment="자기진단결과 - 현/희망 부서 상위 5개 역량"
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
		<![CDATA[
				SELECT rd.dept_num, rd.dept_name
				     , rd.comp1, (SELECT comp_name FROM t_mtp_comp_profile WHERE comp_num = rd.comp1 ) comp1_name, rd.user_level_1, rd.gap_1, rd.user_gap_1
				     , rd.comp2, (SELECT comp_name FROM t_mtp_comp_profile WHERE comp_num = rd.comp2 ) comp2_name, rd.user_level_2, rd.gap_2, rd.user_gap_2
				     , rd.comp3, (SELECT comp_name FROM t_mtp_comp_profile WHERE comp_num = rd.comp3 ) comp3_name, rd.user_level_3, rd.gap_3, rd.user_gap_3
				     , rd.comp4, (SELECT comp_name FROM t_mtp_comp_profile WHERE comp_num = rd.comp4 ) comp4_name, rd.user_level_4, rd.gap_4, rd.user_gap_4
				     , rd.comp5, (SELECT comp_name FROM t_mtp_comp_profile WHERE comp_num = rd.comp5 ) comp5_name, rd.user_level_5, rd.gap_5, rd.user_gap_5
				  FROM (
				        SELECT r.dept_num
				             , (SELECT md.dept_name FROM t_mtp_dept md WHERE md.company_num='1113' AND md.dept_num = r.dept_num) dept_name
				             , substr(max(r.comp1), 2) AS comp1
				             , substr(max(r.comp2), 2) AS comp2
				             , substr(max(r.comp3), 2) AS comp3
				             , substr(max(r.comp4), 2) AS comp4
				             , substr(max(r.comp5), 2) AS comp5
				             , substr(max(r.user_level_1), 2) AS user_level_1
				             , substr(max(r.user_level_2), 2) AS user_level_2
				             , substr(max(r.user_level_3), 2) AS user_level_3
				             , substr(max(r.user_level_4), 2) AS user_level_4
				             , substr(max(r.user_level_5), 2) AS user_level_5
				             , substr(max(r.gap_1), 2) AS gap_1
				             , substr(max(r.gap_2), 2) AS gap_2
				             , substr(max(r.gap_3), 2) AS gap_3
				             , substr(max(r.gap_4), 2) AS gap_4
				             , substr(max(r.gap_5), 2) AS gap_5
				             , substr(max(r.user_gap_1), 2) AS user_gap_1
				             , substr(max(r.user_gap_2), 2) AS user_gap_2
				             , substr(max(r.user_gap_3), 2) AS user_gap_3
				             , substr(max(r.user_gap_4), 2) AS user_gap_4
				             , substr(max(r.user_gap_5), 2) AS user_gap_5
				          FROM (
				                SELECT dept_num, user_num
				                     , decode(MOD(rnum,6),1,'9','0') || comp_num AS comp1
				                     , decode(MOD(rnum,6),2,'9','0') || comp_num AS comp2
				                     , decode(MOD(rnum,6),3,'9','0') || comp_num AS comp3
				                     , decode(MOD(rnum,6),4,'9','0') || comp_num AS comp4
				                     , decode(MOD(rnum,6),5,'9','0') || comp_num AS comp5
				                     , decode(MOD(rnum,6),1,'9','0') || ulevel AS user_level_1
				                     , decode(MOD(rnum,6),2,'9','0') || ulevel AS user_level_2
				                     , decode(MOD(rnum,6),3,'9','0') || ulevel AS user_level_3
				                     , decode(MOD(rnum,6),4,'9','0') || ulevel AS user_level_4
				                     , decode(MOD(rnum,6),5,'9','0') || ulevel AS user_level_5
				                     , decode(MOD(rnum,6),1,'9','0') || dgap AS gap_1
				                     , decode(MOD(rnum,6),2,'9','0') || dgap AS gap_2
				                     , decode(MOD(rnum,6),3,'9','0') || dgap AS gap_3
				                     , decode(MOD(rnum,6),4,'9','0') || dgap AS gap_4
				                     , decode(MOD(rnum,6),5,'9','0') || dgap AS gap_5
				                     , decode(MOD(rnum,6),1,'9','0') || to_char(ugap) AS user_gap_1
				                     , decode(MOD(rnum,6),2,'9','0') || to_char(ugap) AS user_gap_2
				                     , decode(MOD(rnum,6),3,'9','0') || to_char(ugap) AS user_gap_3
				                     , decode(MOD(rnum,6),4,'9','0') || to_char(ugap) AS user_gap_4
				                     , decode(MOD(rnum,6),5,'9','0') || to_char(ugap) AS user_gap_5
				                  FROM (
				                        SELECT rownum rnum, dr.dept_num, ur.user_num, dr.comp_num, dr.impt_score, ur.getting_score
				                             , CASE WHEN ur.getting_score >= 4 THEN '상'
				                                    WHEN ur.getting_score < 4 AND ur.getting_score >= 3 THEN '중'
				                                    WHEN ur.getting_score < 3 THEN '하'
				                               END ulevel
				                             , CASE WHEN (NVL(ur.getting_score, 0)-NVL(dr.impt_score, 0))>0 THEN 'P'
				                                    WHEN (NVL(ur.getting_score, 0)-NVL(dr.impt_score, 0))=0 THEN 'E'
				                                    WHEN (NVL(ur.getting_score, 0)-NVL(dr.impt_score, 0))<0 THEN 'M'
				                                END dgap
				                             , ABS(NVL(ur.getting_score, 0)-NVL(dr.impt_score, 0)) ugap
				                          FROM (
				                                SELECT tdr1.dept_num, tdr1.comp_num, tdr1.impt_score
				                                  FROM (
				                                        SELECT tdr.dept_num, tdr.comp_num, tdr.impt_score
				                                             , ROW_NUMBER () OVER (PARTITION BY tdr.dept_num ORDER BY tdr.impt_score DESC, tdr.comp_num) rnum
				                                          FROM (
				                                                SELECT dept_num, comp_num, impt_score
				                                                  FROM t_mtp_diag_dept_result
				                                                 WHERE company_num = ?
				                                                       AND exec_num = ?
				                                               ) tdr
				                                        ) tdr1
				                                  WHERE rnum < 6
				                               ) dr,
				                               (
				                                SELECT pts.user_num, pts.dept_num, pts.want_dept_num, lrc.comp_num, lrc.getting_score
				                                  FROM (
				                                        SELECT exec_num, company_num, user_num, grade_name, dept_num, want_dept_num
				                                          FROM t_mtp_diag_plan_target_set
				                                         WHERE company_num = ?
				                                               AND exec_num = ?
				                                               AND user_num = ?
				                                       ) pts, t_mtp_diag_val_last_result_com lrc
				                                 WHERE pts.company_num = lrc.company_num
				                                       AND pts.exec_num = lrc.exec_num
				                                       AND pts.user_num = lrc.user_num
				                               ) ur
				                         WHERE dr.comp_num = ur.comp_num
				                              #where#
				                      )
				               ) r
				         GROUP BY dept_num
				      ) rd
		]]>
    </sql-query>

    <sql-query name="SELECT_DEPT_COMP_EDU_LIST" comment="자기진단결과 - 각 역량 별 과목리스트"
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
		<![CDATA[
				SELECT *
				  FROM (
				        SELECT ci.comp_num
				             , (SELECT comp_name FROM t_mtp_comp_profile WHERE comp_num = ci.comp_num) comp_name
				             , ci.ulevel, sm.common_dist_num, sm.content_num
				             , uci.channel_num, uci.content_name, uci.open_seq
				             , ROW_NUMBER () OVER (PARTITION BY ci.comp_num ORDER BY uci.content_name, dbms_random.value) rnum
				          FROM (
				                SELECT dr.comp_num, ur.ulevel
				                  FROM (
				                        SELECT tdr1.dept_num, tdr1.comp_num
				                          FROM (
				                                SELECT tdr.dept_num, tdr.comp_num, tdr.impt_score
				                                     , ROW_NUMBER () OVER (PARTITION BY tdr.dept_num ORDER BY tdr.impt_score DESC, tdr.comp_num) rnum
				                                  FROM (
				                                        SELECT dept_num, comp_num, impt_score
				                                          FROM t_mtp_diag_dept_result
				                                         WHERE company_num = ?
				                                               AND exec_num = ?
				                                       ) tdr
				                                ) tdr1
				                          WHERE rnum < 6
				                       ) dr,
				                       (
				                        SELECT pts.user_num, pts.dept_num, pts.want_dept_num, lrc.comp_num
				                             , CASE WHEN lrc.getting_score >= 4 THEN '1'
				                                WHEN lrc.getting_score < 4 AND lrc.getting_score >= 3 THEN '2'
				                                WHEN lrc.getting_score < 3 THEN '3'
				                             END ulevel
				                          FROM (
				                                SELECT exec_num, company_num, user_num, grade_name, dept_num, want_dept_num
				                                  FROM t_mtp_diag_plan_target_set
				                                 WHERE company_num = ?
				                                       AND exec_num = ?
				                                       AND user_num = ?
				                               ) pts, t_mtp_diag_val_last_result_com lrc
				                         WHERE pts.company_num = lrc.company_num
				                               AND pts.exec_num = lrc.exec_num
				                               AND pts.user_num = lrc.user_num
				                       ) ur
				                 WHERE dr.comp_num = ur.comp_num
				                      -- AND dr.dept_num = ur.dept_num
				                      -- AND dr.dept_num = ur.want_dept_num
				                      #where#
				               ) ci
				             , (
				                 SELECT sm.sys_dist_num, sm.common_dist_num, cm.content_num
				                   FROM u_c2s.t_comdis_sysdis_map sm, u_c2s.t_cont_comm_map cm
				                  WHERE sm.company_num = '999999'
				                        AND cm.subj_map_flag = 'Y'
				                        AND sm.common_dist_num = cm.common_dist_num
				               ) sm
				             , (
				                 SELECT ci.content_num, ci.edu_level, ci.channel_num, ci.content_name, co.open_seq
				                   FROM u_c2s.t_contents_info ci, u_c2s.t_contents_oe co
				                  WHERE co.open_year = TO_CHAR(sysdate,'YYYY')
				                        AND co.edu_sdtime > TO_CHAR(sysdate,'YYYYMMDDHH24MISS')
				                        AND ci.admission_flag = 'Y'
				                        AND ci.content_num = co.content_num
				               ) uci
				         WHERE ci.comp_num = sm.sys_dist_num
				               AND sm.content_num = uci.content_num
				               AND uci.edu_level = ci.ulevel
				       ) csm
				 WHERE rnum < 7
		]]>
    </sql-query>

	<sql-query name="GET_SELF_DIAG_DEPT_TOP5_COMP" comment="자기진단결과 > 현부서와 희망부서의 상위 5개 역량 도출 " >
		<![CDATA[
			SELECT SREM.DEPT_NUM, (SELECT DEPT_NAME FROM T_MTP_DEPT WHERE DEPT_NUM = SREM.DEPT_NUM) DEPT_NAME
			     , decode(SREM.DEPT_NUM, ?, 'MD', 'OD') AS DEPT_TYPE
			     , SREM.USER_NUM
			     , SUBSTR(MAX(COL1), 2) AS COL1
			     , SUBSTR(MAX(COL2), 2) AS COL2
			     , SUBSTR(MAX(COL3), 2) AS COL3
			     , SUBSTR(MAX(COL4), 2) AS COL4
			     , SUBSTR(MAX(COL5), 2) AS COL5
			     , SUBSTR(MAX(COL1_NUM), 2) AS COL1_NUM
			     , SUBSTR(MAX(COL2_NUM), 2) AS COL2_NUM
			     , SUBSTR(MAX(COL3_NUM), 2) AS COL3_NUM
			     , SUBSTR(MAX(COL4_NUM), 2) AS COL4_NUM
			     , SUBSTR(MAX(COL5_NUM), 2) AS COL5_NUM
			     , SUBSTR(MAX(COL1_IMPT), 2) AS COL1_IMPT
			     , SUBSTR(MAX(COL2_IMPT), 2) AS COL2_IMPT
			     , SUBSTR(MAX(COL3_IMPT), 2) AS COL3_IMPT
			     , SUBSTR(MAX(COL4_IMPT), 2) AS COL4_IMPT
			     , SUBSTR(MAX(COL5_IMPT), 2) AS COL5_IMPT
			     , SUBSTR(MAX(COL1_GETTING), 2) AS COL1_GETTING
			     , SUBSTR(MAX(COL2_GETTING), 2) AS COL2_GETTING
			     , SUBSTR(MAX(COL3_GETTING), 2) AS COL3_GETTING
			     , SUBSTR(MAX(COL4_GETTING), 2) AS COL4_GETTING
			     , SUBSTR(MAX(COL5_GETTING), 2) AS COL5_GETTING
			  FROM(
			        SELECT MD.DEPT_NUM, DUS.USER_NUM
			            , decode(MOD(MD.RNUM,6),1,'9','0') || MD.COMP_NUM AS COL1
			            , decode(MOD(MD.RNUM,6),2,'9','0') || MD.COMP_NUM AS COL2
			            , decode(MOD(MD.RNUM,6),3,'9','0') || MD.COMP_NUM AS COL3
			            , decode(MOD(MD.RNUM,6),4,'9','0') || MD.COMP_NUM AS COL4
			            , decode(MOD(MD.RNUM,6),5,'9','0') || MD.COMP_NUM AS COL5
			            , decode(MOD(MD.RNUM,6),1,'9','0') || MD.COMP_NAME AS COL1_NUM
			            , decode(MOD(MD.RNUM,6),2,'9','0') || MD.COMP_NAME AS COL2_NUM
			            , decode(MOD(MD.RNUM,6),3,'9','0') || MD.COMP_NAME AS COL3_NUM
			            , decode(MOD(MD.RNUM,6),4,'9','0') || MD.COMP_NAME AS COL4_NUM
			            , decode(MOD(MD.RNUM,6),5,'9','0') || MD.COMP_NAME AS COL5_NUM
			            , decode(MOD(MD.RNUM,6),1,'9','0') || MD.IMPT_SCORE AS COL1_IMPT
			            , decode(MOD(MD.RNUM,6),2,'9','0') || MD.IMPT_SCORE AS COL2_IMPT
			            , decode(MOD(MD.RNUM,6),3,'9','0') || MD.IMPT_SCORE AS COL3_IMPT
			            , decode(MOD(MD.RNUM,6),4,'9','0') || MD.IMPT_SCORE AS COL4_IMPT
			            , decode(MOD(MD.RNUM,6),5,'9','0') || MD.IMPT_SCORE AS COL5_IMPT
			            , decode(MOD(MD.RNUM,6),1,'9','0') || DUS.GETTING_SCORE AS COL1_GETTING
			            , decode(MOD(MD.RNUM,6),2,'9','0') || DUS.GETTING_SCORE AS COL2_GETTING
			            , decode(MOD(MD.RNUM,6),3,'9','0') || DUS.GETTING_SCORE AS COL3_GETTING
			            , decode(MOD(MD.RNUM,6),4,'9','0') || DUS.GETTING_SCORE AS COL4_GETTING
			            , decode(MOD(MD.RNUM,6),5,'9','0') || DUS.GETTING_SCORE AS COL5_GETTING
			        FROM(
			            SELECT *
			              FROM(
			                SELECT MDDR.DEPT_NUM, MDDR.COMP_NUM, MDDR.IMPT_SCORE
			                    , (SELECT COMP_NAME FROM T_MTP_COMP_PROFILE WHERE COMP_NUM = MDDR.COMP_NUM) COMP_NAME
			                    , ROW_NUMBER () OVER (PARTITION BY MDDR.dept_num ORDER BY MDDR.impt_score DESC, MDDR.comp_num) rnum
			                  FROM T_MTP_DIAG_DEPT_RESULT MDDR
			                 WHERE MDDR.COMPANY_NUM = ?
			                       AND MDDR.EXEC_NUM = ?
			                       AND MDDR.DEPT_NUM IN ( ?, ? )
			                )
			            WHERE RNUM < 6
			            ) MD,
			            (
			             SELECT USER_NUM, COMP_NUM, GETTING_SCORE
			               FROM T_MTP_DIAG_VAL_LAST_RESULT_COM
			              WHERE COMPANY_NUM = ?
			                    AND EXEC_NUM = ?
			                    AND USER_NUM = ?
			            ) DUS
			       WHERE MD.COMP_NUM = DUS.COMP_NUM
			     ) SREM
			 GROUP BY DEPT_NUM, USER_NUM
		]]>
	</sql-query>

	<sql-query name="GET_SELF_DIAG_DEPT_TOP5_COMP_EDUMAPPING" comment="자가진단결과 > 현부서와 희망부서의 상위 5개 역량과 맞는 과정 매핑 " >
		<![CDATA[

		]]>
	</sql-query>

	<sql-query name="GET_DEPT_TOP5_COMP" comment="조직진단결과 > 부서별 상위 5개 역량 도출 " >
		<![CDATA[
			SELECT *
			  FROM (
			        SELECT rownum COMP_RNUM, a.*
			          FROM (
			            SELECT MD.*, CP.COMP_NAME, CP.COMP_DESC
			             FROM(
			                 SELECT MDDR.DEPT_NUM, MDDR.COMP_NUM, MDDR.IMPT_SCORE
			                   FROM T_MTP_DIAG_DEPT_RESULT MDDR
			                  WHERE MDDR.COMPANY_NUM = ?
			                        AND MDDR.EXEC_NUM = ?
			                        AND MDDR.DEPT_NUM = ?
			               ) MD, T_MTP_COMP_PROFILE CP
			            WHERE MD.COMP_NUM = CP.COMP_NUM
			            ORDER BY MD.IMPT_SCORE DESC, md.comp_num
			          ) a
			        )
			 WHERE COMP_RNUM < 6
		]]>
	</sql-query>

	<sql-query name="GET_DEPT_TOP5_DIAG_USER" comment="조직진단결과 > 부서별 상위 5개 역량에 속한 유저 도출 " >
		<![CDATA[
				SELECT rownum rnum, a.*
  				  FROM (
				        SELECT pts.dept_num, dvr.comp_num, pts.user_name, dvr.getting_score
				          FROM (
				                SELECT lrc.comp_num, lrc.user_num, lrc.getting_score
				                  FROM t_mtp_diag_val_last_result_com lrc, t_mtp_diag_plan_target_set mpts
				                 WHERE lrc.company_num = ?
				                       AND lrc.exec_num = ?
				                       AND lrc.comp_num = ?
				                 	   #where#
				                       AND mpts.company_num = ?
				                       AND mpts.exec_num = ?
				                       AND mpts.dept_num = ?
				                       AND mpts.user_num = lrc.user_num
				               ) dvr,
				               (
				                SELECT mpts.user_num, mpts.grade_name || ' ' || mu.kor_name user_name, mpts.dept_num, md.dept_name
				                  FROM t_mtp_diag_plan_target_set mpts, t_mtp_user mu, t_mtp_dept md
				                 WHERE mpts.company_num = ?
				                       AND mpts.exec_num = ?
				                       AND mpts.dept_num = ?
				                       AND mpts.user_num = mu.user_num
				                       AND md.company_num = mpts.company_num
				                       AND mpts.dept_num = md.dept_num
				               ) pts
				         WHERE dvr.user_num = pts.user_num
				         ORDER BY dvr.getting_score DESC, dvr.comp_num
				       ) a
		]]>
	</sql-query>

	<sql-query name="GET_TOTAL_COMP_ACT" comment="종합진단결과 > 역량군과 이에 해당하는 역량 정보 " >
		<![CDATA[
				SELECT cc.code, cc.code_name, cp.comp_num, cp.comp_name label, cp.comp_desc
				  FROM t_mtp_comp_profile cp, t_common_code cc, t_mtp_diag_val_last_result_com rc
				 WHERE cc.code_category_num = 'CD041'
				       AND rc.company_num = ?
				       AND rc.exec_num = ?
				       AND rc.user_num = ?
				       AND rc.comp_num = cp.comp_num
				       AND cc.code = cp.comp_grp_code
				 ORDER BY code, TO_NUMBER(comp_num)
		]]>
	</sql-query>

	<sql-query name="GET_TOTAL_COMP_ACT_LIST" comment="종합진단결과 > 해당역량 취득점수 분류 리스트 " >
		<![CDATA[
				SELECT rownum rnum, a.*
				  FROM (
				        SELECT rc.comp_num, rc.user_num, ui.user_info user_name
				             , CASE WHEN rc.getting_score >= 4 THEN 'H'
				                    WHEN rc.getting_score < 4 AND rc.getting_score >= 3 THEN 'M'
				                    WHEN rc.getting_score < 3 THEN 'L'
				               END comp_level
				          FROM t_mtp_diag_val_last_result_com rc,
				               (
				                SELECT ts.user_num, md.dept_name || ' / ' || mu.kor_name || ' ' || ts.grade_name user_info
				                  FROM t_mtp_diag_plan_target_set ts, t_mtp_user mu, t_mtp_dept md
				                 WHERE ts.company_num = ?
				                       AND ts.exec_num = ?
				                       AND md.company_num = ?
				                       AND ts.user_num = mu.user_num
				                       AND md.dept_num = ts.dept_num
				               ) ui
				         WHERE company_num = ?
				               AND exec_num = ?
				               AND comp_num = ?
				               AND rc.user_num = ui.user_num
				         ORDER BY getting_score desc
				       ) a
				 WHERE comp_level = ?
		]]>
	</sql-query>



	<sql-query name="GET_EDU_CONTENT_CNT" comment="팝업 > 교육정보 마스터 검색목록 총 갯수" >
		<![CDATA[
                SELECT common_dist_num, cdm.content_num, content_name
                  FROM (
                        SELECT sm.common_dist_num, cm.content_num
                          FROM u_c2s.t_comdis_sysdis_map sm, u_c2s.t_cont_comm_map cm
                         WHERE sm.sys_dist_num = ?
                               AND cm.subj_map_flag = 'Y'
                               AND sm.common_dist_num = cm.common_dist_num
                       ) cdm,
                       (
                        SELECT ci.content_num, ci.content_name
                          FROM u_c2s.t_contents_info ci, u_c2s.t_contents_oe co
                         WHERE admission_flag = 'Y'
                               AND ci.channel_num = ?
                               AND ci.edu_level = ? -- 1:상 2:중, 3:하
                               AND co.open_year = TO_CHAR(sysdate,'YYYY')
                               AND co.edu_sdtime > TO_CHAR(sysdate,'YYYYMMDDHH24MISS')
                               AND ci.content_num = co.content_num
                        ) ci
                 WHERE cdm.content_num = ci.content_num
                        AND content_name like '%'||?||'%'
		]]>
	</sql-query>

	<sql-query name="GET_EDU_CONTENT" comment="팝업 > 교육정보 마스터 검색목록 불러오기" >
		<![CDATA[
				SELECT ec.*
				  FROM (
				        SELECT rownum rnum, a.*
				          FROM (
				                SELECT common_dist_num, cdm.content_num, content_name, url_info, summary_info
				                     , DECODE(open_seq, '001', '온라인', '002', '오프라인') open_type
				                     , lecture_name, edu_goal, edu_contents, edu_target, edu_cate
				                     , edu_institute, edu_loc_name, edu_location, is_unemp_insur, edu_times
				                     , book_subj, capacity, reg_dtime, edu_dtime
				                  FROM (
				                        SELECT sm.common_dist_num, cm.content_num
				                          FROM u_c2s.t_comdis_sysdis_map sm, u_c2s.t_cont_comm_map cm
				                         WHERE sm.sys_dist_num = ?
				                               AND cm.subj_map_flag = 'Y'
				                               AND sm.common_dist_num = cm.common_dist_num
				                       ) cdm,
				                       (
				                        SELECT ci.content_num, ci.content_name, ci.url_info, ci.summary_info, co.open_seq
				                             , co.lecture_name, co.edu_goal, co.edu_contents, co.edu_target, co.edu_cate
				                             , co.edu_institute, co.edu_loc_name, co.edu_location, co.is_unemp_insur
				                             , co.edu_days || '(' || co.edu_time || ')' edu_times
				                             , co.book_subj, co.capacity
				                             , co.reg_sdtime || '~' || co.reg_edtime reg_dtime
				                             , co.edu_sdtime || '~' || co.edu_edtime edu_dtime
				                          FROM u_c2s.t_contents_info ci, u_c2s.t_contents_oe co
				                         WHERE admission_flag = 'Y'
				                               AND ci.channel_num = ?
				                               AND ci.edu_level = ? -- 1:상 2:중, 3:하
				                               AND co.open_year = TO_CHAR(sysdate,'YYYY')
				                               AND co.edu_sdtime > TO_CHAR(sysdate,'YYYYMMDDHH24MISS')
				                               AND ci.content_num = co.content_num
				                        ) ci
				                 WHERE cdm.content_num = ci.content_num
				                 	   AND content_name like '%'||?||'%'
				                 ORDER BY content_name, open_seq
				             ) a
				       ) ec
				 WHERE rnum <= ? AND rnum <= ?
		]]>
	</sql-query>

	<sql-query name="GET_EDU_CONTENT1_CNT" comment="팝업 > 교육정보 마스터 목록 총 갯수" >
		<![CDATA[
                SELECT common_dist_num, cdm.content_num, content_name
                  FROM (
                        SELECT sm.common_dist_num, cm.content_num
                          FROM u_c2s.t_comdis_sysdis_map sm, u_c2s.t_cont_comm_map cm
                         WHERE sm.sys_dist_num = ?
                               AND cm.subj_map_flag = 'Y'
                               AND sm.common_dist_num = cm.common_dist_num
                       ) cdm,
                       (
                        SELECT ci.content_num, ci.content_name
                          FROM u_c2s.t_contents_info ci, u_c2s.t_contents_oe co
                         WHERE admission_flag = 'Y'
                               AND ci.channel_num = ?
                               AND ci.edu_level = ? -- 1:상 2:중, 3:하
                               AND co.open_year = TO_CHAR(sysdate,'YYYY')
                               AND co.edu_sdtime > TO_CHAR(sysdate,'YYYYMMDDHH24MISS')
                               AND ci.content_num = co.content_num
                        ) ci
                 WHERE cdm.content_num = ci.content_num
		]]>
	</sql-query>

	<sql-query name="GET_EDU_CONTENT1" comment="팝업 > 교육정보 마스터 목록 불러오기" >
		<![CDATA[
				SELECT ec.*
                  FROM (
                        SELECT rownum rnum, a.*
                          FROM (
                                SELECT common_dist_num, cdm.content_num, content_name, url_info, summary_info
                                     , DECODE(edu_cate, '001', '온라인', '002', '오프라인') open_type, open_seq
                                     , lecture_name, edu_goal, edu_contents, edu_target
                                     , edu_institute, edu_loc_name, edu_location
                                     , DECODE(is_unemp_insur, 'Y', '환급', 'N', '미환급') is_unemp_insur
                                     , edu_time, edu_days
                                     , book_subj, capacity, reg_dtime, edu_dtime
                                     , staff_name, staff_phone, staff_email
                                  FROM (
                                        SELECT sm.common_dist_num, cm.content_num
                                          FROM u_c2s.t_comdis_sysdis_map sm, u_c2s.t_cont_comm_map cm
                                         WHERE sm.company_num = '999999'
                                               AND sm.sys_dist_num = ?
                                               AND cm.subj_map_flag = 'Y'
                                               AND sm.common_dist_num = cm.common_dist_num
                                       ) cdm,
                                       (
                                        SELECT ci.content_num, ci.content_name, ci.url_info, ci.summary_info, co.open_seq
                                             , co.lecture_name, co.edu_goal, co.edu_contents, co.edu_target, co.edu_cate
                                             , co.edu_institute, co.edu_loc_name, co.edu_location, co.is_unemp_insur
                                             , co.edu_days, co.edu_time, staff_name, staff_phone, staff_email
                                             , co.book_subj, co.capacity
                                             , substr(co.reg_sdtime, 1, 8) || '~' || substr(co.reg_edtime, 1, 8) reg_dtime
                                             , substr(co.edu_sdtime, 1, 8) || '~' || substr(co.edu_edtime, 1, 8) edu_dtime
                                          FROM u_c2s.t_contents_info ci, u_c2s.t_contents_oe co
                                         WHERE admission_flag = 'Y'
											   -- online : C9999-2008-0001 , offline : C9999-2007-0001
                                               AND ci.channel_num = ?
                                               AND ci.edu_level = ? -- 1:상 2:중, 3:하
                                               AND co.open_year = TO_CHAR(sysdate,'YYYY')
                                               AND co.edu_sdtime > TO_CHAR(sysdate,'YYYYMMDDHH24MISS')
                                               AND ci.content_num = co.content_num
                                        ) ci
                                 WHERE cdm.content_num = ci.content_num
                                 ORDER BY content_name, open_seq
                             ) a
                       ) ec
                 WHERE rnum >= ? AND rnum <= ?
		]]>
	</sql-query>

	<sql-query name="SELECT_EXEC_LIST_SIMUL" comment="진단 시뮬레이션 리스트를 가져옴" >
		<![CDATA[
			SELECT a.SIMUL_SEQ
				 , a.SIMUL_NAME
				 , A.JOB_NUM
				 , (SELECT JOB_NAME FROM T_JOB_PROFILE WHERE COMPANY_NUM = ? AND JOB_NUM = A.JOB_NUM) JOB_NAME
				 , NVL2(a.DIAGNO_DTIME, SUBSTR(DIAGNO_DTIME,1,4) || '.' ||SUBSTR(DIAGNO_DTIME,5,2) || '.' || SUBSTR(DIAGNO_DTIME,7,2)|| ' '||
						SUBSTR(DIAGNO_DTIME,9,2)||':'||SUBSTR(DIAGNO_DTIME,11,2)||':'||SUBSTR(DIAGNO_DTIME,13,2), '') DIAGNO_DTIME
				 , a.complete_flag
			  FROM t_mtp_simul_exec a
			 WHERE a.company_num = ?
				   AND a.use_flag = 'Y'
				   AND A.USER_NUM = ?
			order by to_number(SIMUL_SEQ) desc
		]]>
	</sql-query>

    <sql-query name="SELECT_EXEC_INFO_YN_SIMUL" comment="진단 대상자 유무 판단 및 실시정보 select" >
		<![CDATA[
                SELECT simul_seq enum
				     , simul_name etitle
                     , JOB_NUM JOBNUM
                     , (SELECT JOB_NAME FROM T_JOB_PROFILE WHERE COMPANY_NUM = ? AND JOB_NUM = A.JOB_NUM) JOBNAME
                  FROM t_mtp_simul_exec a
				 WHERE simul_seq = ?
                       AND USER_NUM = ?
				 	   AND company_num = ?
		]]>
    </sql-query>

	<sql-query name="SELECT_USER_INFO_SIMUL" comment="사용자정보 select" >
		<![CDATA[
			SELECT A.USER_NUM, A.KOR_NAME, A.COMPANY_NUM, (select company_name from t_company_info where company_num = a.company_num) COMPANY_NAME, A.EMP_NUM, A.DEPT_NUM
				, (SELECT DEPT_NAME FROM T_MTP_DEPT WHERE COMPANY_NUM = A.COMPANY_NUM AND DEPT_NUM = A.DEPT_NUM) DEPT_NAME
				, (SELECT SIMPLE_DEPT_NAME FROM T_MTP_DEPT WHERE COMPANY_NUM = A.COMPANY_NUM AND DEPT_NUM = A.DEPT_NUM) SIMPLE_DEPT_NAME
				, A.EMAIL, A.ADMIN_FLAG, A.DEPT_MANAGER_FLAG, A.SEX_CODE, A.GRADE_NAME, A.JOB_NUM, A.JOB_NUM2
				, (select job_name from t_job_profile where company_num=? and job_num=a.job_num) job_name
				, (select job_name from t_job_profile where company_num=A.COMPANY_NUM and job_num=a.job_num2) job_name2
			FROM T_MTP_USER A
			WHERE A.USER_NUM = ?
		]]>
    </sql-query>

	<sql-query name="SELECT_MAX_SIMULSEQ_NUM" comment="시뮬레이션 진단 최대번호" >
		<![CDATA[
			SELECT NVL(MAX(TO_NUMBER(SIMUL_SEQ)),0)+1 SEQ
			FROM T_MTP_SIMUL_EXEC
			WHERE COMPANY_NUM = ? AND USER_NUM = ?
		]]>
    </sql-query>

	<sql-query name="INSERT_SIMUL_INFO" comment="시뮬레이션 진단번호 입력" >
		<![CDATA[
			INSERT INTO T_MTP_SIMUL_EXEC(USER_NUM, COMPANY_NUM, SIMUL_SEQ, JOB_NUM, COMPLETE_FLAG, SIMUL_NAME, USE_FLAG, CREATED_DTIME, CREATED_BY)
			VALUES ( ? , ?, ?, ?, 'N', ?, 'Y', to_char(sysdate, 'YYYYMMDDHH24MISS'), ? )
		]]>
    </sql-query>

	<sql-query name="UPDATE_SIMUL_COMPLETE_INFO" comment="시뮬레이션 진단 완료 플래그 변경" >
		<![CDATA[
			UPDATE T_MTP_SIMUL_EXEC SET COMPLETE_FLAG = ?,
			UPDATED_DTIME = TO_CHAR(sysdate,'YYYYMMDDHH24MISS'), updated_by = ?
			WHERE COMPANY_NUM = ? AND USER_NUM = ? AND SIMUL_SEQ = ?
		]]>
    </sql-query>

	<sql-query name="SELECT_VAL_PERSON_INFO_SIMUL" comment="시뮬레이션 평가대상자설정정보" >
		<![CDATA[
			SELECT USER_NUM EXEC_USER_NUM, USER_NUM EXAMINEE_NUM, KOR_NAME EXAMINEE_NAME, 'N' COMPLETE_FLAG, '004' VAL_DIRECTION_CODE, DEPT_NUM, NULL GRADE_NUM, EMP_NUM, GRADE_NAME
				, (SELECT DEPT_NAME FROM T_MTP_DEPT WHERE COMPANY_NUM = A.COMPANY_NUM AND DEPT_NUM = A.DEPT_NUM) dept_name, NULL ACHIEVE_CODE, SEX_CODE, 1 RNUM
			FROM T_MTP_USER A
			WHERE USER_NUM = ?
		]]>
    </sql-query>

    <sql-query name="SELECT_POSSESSION_EXAM_YN_SIMUL" comment="행동지표별 보유도 문제 기등록 유무판단" >
		<![CDATA[
			SELECT COUNT(ACT_NUM) YN
			FROM T_MTP_SIMUL_ACT_RESULT
			WHERE SIMUL_SEQ = ?
				AND USER_NUM = ?
				AND COMPANY_NUM = ?
		]]>
    </sql-query>

    <sql-query name="INSERT_POSSESSION_EXAM_SIMUL" comment="행동지표별 역량다면진단 문제 insert : 처음한번만" >
		<![CDATA[
            INSERT INTO T_MTP_SIMUL_ACT_RESULT(USER_NUM, SIMUL_SEQ, ACT_NUM, COMPANY_NUM, CREATED_DTIME, CREATED_BY)
			SELECT ?, ?, ACT_NUM, COMPANY_NUM, TO_CHAR(sysdate,'YYYYMMDDHH24MISS'), ?
			FROM(
				SELECT MCA.ACT_NUM, MCA.COMP_NUM, MCA.ACT_CONTENTS, MCA.COMPANY_NUM
				FROM T_MTP_COMP_ACT MCA,
					(
					SELECT distinct A.COMP_NUM, A.COMPANY_NUM
					FROM T_MTP_COMP_PROFILE A, T_JOB_COMP_MAP B, T_JOB_PROFILE C
					WHERE A.COMP_NUM=B.COMP_NUM AND A.COMPANY_NUM=B.COMPANY_NUM
						AND B.COMPANY_NUM=C.COMPANY_NUM AND B.JOB_NUM=C.JOB_NUM
						AND A.COMPANY_NUM = ? AND A.USE_FLAG = 'Y'
						AND C.JOB_NUM = ?
                	) CMP
				WHERE MCA.COMP_NUM = CMP.COMP_NUM AND MCA.COMPANY_NUM = CMP.COMPANY_NUM
					AND MCA.USE_FLAG = 'Y'
				ORDER BY 2
				) AA
		]]>
    </sql-query>

    <sql-query name="SELECT_POSSESSION_EXAM_RE_SIMUL" comment="행동지표별 역량다면진단 문제 select : 두번째부터" >
		<![CDATA[
       			SELECT *
           	  	  FROM (
		       			SELECT ROW_NUMBER () OVER (PARTITION BY dvrc.act_num ORDER BY dpts.val_direction_code DESC, dvrc.user_num) rnum
						      , dvrc.act_num exam_num
						      , dpts.val_direction_code
						      , dpts.grade_name
						      , dvrc.user_num
						      , dpts.kor_name user_name
						      , dvrc.getting_score score
						      , dpts.sex_code
						  FROM (
						        SELECT act_num, user_num, getting_score
						          FROM t_mtp_simul_act_result
						         WHERE company_num = ?
						               AND simul_seq = ?
						               AND user_num = ?
						        ) dvrc,
						       (
                                SELECT a.grade_name, user_num examinee_num, '004' val_direction_code, a.sex_code, a.kor_name
                                FROM t_mtp_user a
                                WHERE a.user_num = ?
            			       ) dpts
						 WHERE dpts.examinee_num = dvrc.user_num
						 )
		           ORDER BY TO_NUMBER(exam_num), rnum
		]]>
    </sql-query>

    <sql-query name="SELECT_POSSESSION_EXAM_LIST_SIMUL" comment="행동지표별 역량다면진단 문제목록 가져오기" >
		<![CDATA[
			SELECT ROWNUM RNUM, CO.*
			FROM(
				SELECT B.comp_num, B.comp_name, B.comp_desc, A.act_num exam_num, A.act_contents
					, CASE WHEN COUNT(c.getting_score) = COUNT(C.act_num )THEN 'Y'
						   ELSE 'N'
					  END flag
				FROM t_mtp_comp_act a, t_mtp_comp_profile b, t_mtp_simul_act_result c
				WHERE a.comp_num = b.comp_num AND A.COMPANY_NUM = B.COMPANY_NUM
					AND A.act_num = C.act_num AND A.COMPANY_NUM = C.COMPANY_NUM
					AND c.company_num = ?
					AND c.simul_seq = ?
					AND c.user_num = ?
				GROUP BY B.comp_num, B.comp_name, B.comp_desc, A.act_num, A.act_contents
				ORDER BY B.comp_num, A.act_num
				) CO
		]]>
    </sql-query>

    <sql-query name="UPDATE_POSSESSION_SCORE_SIMUL" comment="행동지표별 역량다면진단 문제 점수 등록" >
		<![CDATA[
			UPDATE T_MTP_SIMUL_ACT_RESULT
			SET GETTING_SCORE = ?, UPDATED_DTIME = TO_CHAR(sysdate,'YYYYMMDDHH24MISS'), updated_by = ?
			WHERE COMPANY_NUM = ? AND SIMUL_SEQ = ? AND USER_NUM = ? AND ACT_NUM = ?
		]]>
    </sql-query>

	<sql-query name="AUTO_DIAG_COMPLETE_RESULT_SET_SIMUL"
		comment="진단 시뮬레이션 완료 시 자동결과 셋팅 프로시져"
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
		<![CDATA[
			 call P_DIAG_COMPLET_SIMUL(?,?,?,?,?)
		]]>
	</sql-query>


	<!-- START : 자격증 프로파일 -->
	<sql-query
		name="SELECT_T_CERT_PROFILE_LIST"
		comment="자격증 프로파일 리스트"
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
	<![CDATA[
		-- SELECT_T_CERT_PROFILE_LIST
		SELECT
		   CERT_NUM, CERT_TCODE,
		   FUN_COMMON_CODE( A.COMPANY_NUM, 'CD027',A.CERT_TCODE  ) CERT_TCODE_NAME,		   
		   CERT_NAME,
		   REQUIRE_DESC, JOB_DESC, PROSPECT_DESC,
		   CERT_AUTHORITY_NAME, REF_URL, WTEST_PROC_DESC,
		   WTEST_SUBJ_DESC, WTEST_DOC_DESC, PTEST_PROC_DESC,
		   PTEST_SUBJ_DESC, PTEST_DOC_DESC, USE_FLAG
		FROM T_CERT_PROFILE A
	   WHERE COMPANY_NUM = ?
	     AND USE_FLAG='Y'
    ]]>
	</sql-query>
	<sql-query
		name="SELECT_T_CERT_PROFILE_DETAIL"
		comment="자격증 프로파일 상세정보"
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
	<![CDATA[
		-- SELECT_T_CERT_PROFILE_DETAIL
		SELECT
		   A.CERT_NUM, CERT_TCODE,
		   FUN_COMMON_CODE( A.COMPANY_NUM, 'CD027',A.CERT_TCODE  ) CERT_TCODE_NAME,		 
		   CERT_NAME,
		   REQUIRE_DESC, JOB_DESC, PROSPECT_DESC,
		   CERT_AUTHORITY_NAME, REF_URL, WTEST_PROC_DESC,
		   WTEST_SUBJ_DESC, WTEST_DOC_DESC, PTEST_PROC_DESC,
		   PTEST_SUBJ_DESC, PTEST_DOC_DESC, USE_FLAG
		FROM T_CERT_PROFILE A
		WHERE A.COMPANY_NUM = ?
		  AND A.CERT_NUM = ?
    ]]>
	</sql-query>
	<sql-query
		name="SELECT_MAX_T_CERT_PROFILE"
		comment="자격증 프로파일 MAX+1"
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
	<![CDATA[		
		SELECT nvl(MAX(TO_NUMBER(nvl(CERT_NUM,1)))+1,1) AS MAX_NUM FROM T_CERT_PROFILE
 		 WHERE company_num = ?  
    ]]>
	</sql-query>
	<sql-query
		name="INSERT_T_CERT_PROFILE"
		comment="자격증 프로파일 입력"
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
	<![CDATA[
		-- INSERT_T_CERT_PROFILE
		INSERT INTO T_CERT_PROFILE (
		   CERT_NUM, COMPANY_NUM, CERT_TCODE, CERT_NAME,
		   REQUIRE_DESC, JOB_DESC, PROSPECT_DESC,
		   CERT_AUTHORITY_NAME, REF_URL, WTEST_PROC_DESC,
		   WTEST_SUBJ_DESC, WTEST_DOC_DESC, PTEST_PROC_DESC,
		   PTEST_SUBJ_DESC, PTEST_DOC_DESC, USE_FLAG,
		   CREATED_DTIME, CREATED_BY)
		VALUES ( ?, ?, ?, ?,
		    ?, ?, ?,
		    ?, ?, ?,
		    ?, ?, ?,
		    ?, ?, 'Y',
		    to_char(sysdate,'YYYYMMDDHH24MISS'), ?)
    ]]>
	</sql-query>
	<sql-query
		name="UPDATE_T_CERT_PROFILE"
		comment="자격증 프로파일 수정"
		cacheable="true"
		callable="true"
		fetch-size="10"
		flush-mode="always"
		timeout="1000">
	<![CDATA[
		-- UPDATE_T_CERT_PROFILE
		UPDATE T_CERT_PROFILE
		SET    CERT_TCODE          = ?,
		       CERT_NAME           = ?,
		       REQUIRE_DESC        = ?,
		       JOB_DESC            = ?,
		       PROSPECT_DESC       = ?,
		       CERT_AUTHORITY_NAME = ?,
		       REF_URL             = ?,
		       WTEST_PROC_DESC     = ?,
		       WTEST_SUBJ_DESC     = ?,
		       WTEST_DOC_DESC      = ?,
		       PTEST_PROC_DESC     = ?,
		       PTEST_SUBJ_DESC     = ?,
		       PTEST_DOC_DESC      = ?,
		       USE_FLAG            = ?,
		       UPDATED_DTIME       = to_char(sysdate, 'YYYYMMDDHH24MISS'),
		       UPDATED_BY          = ?
		WHERE  CERT_NUM            = ? AND COMPANY_NUM = ?
    ]]>
	</sql-query>
	<!-- END : 자격증 프로파일 -->
	
	<sql-query name="SELECT_DIAG_EXAM_LIST_QUESTION_PAGING" comment="행동지표별 문제의 보기문항 가져오기 페이징">
	<![CDATA[
	-- QUERYSET : DIAGNOSIS, QUERY : SELECT_DIAG_EXAM_LIST_QUESTION
	SELECT distinct A.act_num exam_num, que_num, question, grade                   
      FROM t_mtp_comp_act a, 
           t_mtp_comp_profile b, 
           t_mtp_diag_val_result_comp_act c, 
           t_mtp_comp_act_question d
      WHERE a.comp_num = b.comp_num and a.company_num = b.company_num
        AND A.act_num = C.act_num and a.company_num = c.company_num
        AND A.act_num = d.act_num and a.company_num = d.company_num
        AND c.company_num = ?
        AND c.exec_num = ?
        AND c.exec_user_num = ?
        #where_act_num#
      order by  A.act_num, que_num
	     
	]]>
    </sql-query>
    
    <sql-query name="CHANGE_DIAGNOSIS_STATE" comment="진단 상태 임시저장상태로 변경">
	<![CDATA[
		-- QUERYSET : DIAGNOSIS, QUERY : CHANGE_DIAGNOSIS_STATE
		UPDATE T_MTP_DIAG_VAL_PERSON_SET
		SET COMPLETE_FLAG = 'N' 
		WHERE COMPANY_NUM = ? 
		    AND EXEC_NUM = ?
		    AND EXEC_USER_NUM = ?
	]]>
    </sql-query>
    
</sql-queryset>