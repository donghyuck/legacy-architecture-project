architecture.ee.bootstrap.Bootstrap -> architecture.ee.bootstrap.Bootstrap:
    java.lang.String BOOTSTRAP_CONTEXT_KEY -> BOOTSTRAP_CONTEXT_KEY
    20:20:architecture.ee.component.AdminService getAdminService() -> getAdminService
    26:27:org.springframework.context.ConfigurableApplicationContext getBootstrapApplicationContext() -> getBootstrapApplicationContext
    31:33:void boot(javax.servlet.ServletContext) -> boot
    36:38:void shutdown(javax.servlet.ServletContext) -> shutdown
architecture.ee.component.Admin -> architecture.ee.component.Admin:
    void executeTask(java.lang.Runnable) -> executeTask
    architecture.common.lifecycle.State getState() -> getState
    architecture.common.lifecycle.ConfigRoot getConfigRoot() -> getConfigRoot
    java.lang.String getEffectiveRootPath() -> getEffectiveRootPath
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
    java.lang.String getCharacterEncoding() -> getCharacterEncoding
    void setCharacterEncoding(java.lang.String) -> setCharacterEncoding
    java.util.TimeZone getTimeZone() -> getTimeZone
    void setTimeZone(java.util.TimeZone) -> setTimeZone
    boolean isReady() -> isReady
    java.util.ResourceBundle getResourceBundle(java.lang.String) -> getResourceBundle
architecture.ee.component.AdminService -> architecture.ee.component.AdminService:
    java.lang.String DEFAULT_STARTUP_FILENAME -> DEFAULT_STARTUP_FILENAME
    org.springframework.web.context.ContextLoader getContextLoader() -> getContextLoader
    void setServletContext(javax.servlet.ServletContext) -> setServletContext
    org.springframework.context.ConfigurableApplicationContext getApplicationContext() -> getApplicationContext
    java.lang.Object getComponent(java.lang.Class) -> getComponent
    void refresh() -> refresh
    boolean isSetContextLoader() -> isSetContextLoader
    boolean isSetServletContext() -> isSetServletContext
    boolean isSetApplicationContext() -> isSetApplicationContext
    java.lang.String getEffectiveRootPath() -> getEffectiveRootPath
    architecture.common.lifecycle.ConfigRoot getConfigRoot() -> getConfigRoot
architecture.ee.component.DirectoryScanner -> architecture.ee.component.DirectoryScanner:
    void addScanURI(java.net.URI) -> addScanURI
    void addScanURL(java.net.URL) -> addScanURL
    void addScanDir(java.lang.String) -> addScanDir
    void removeScanURL(java.net.URL) -> removeScanURL
    void removeScanURI(java.net.URI) -> removeScanURI
    void addDirectoryListener(architecture.common.scanner.DirectoryListener) -> addDirectoryListener
    void removeDirectoryListener(architecture.common.scanner.DirectoryListener) -> removeDirectoryListener
    architecture.common.scanner.DirectoryListener[] getDirectoryListeners() -> getDirectoryListeners
architecture.ee.component.GlobalizationService -> architecture.ee.component.GlobalizationService:
    java.util.ResourceBundle getResourceBundle(java.lang.String,java.util.Locale) -> getResourceBundle
    java.util.List getCountries() -> getCountries
    java.util.List getCountries(boolean) -> getCountries
    architecture.ee.g11n.Country getCountryByA2(java.lang.String) -> getCountryByA2
    architecture.ee.g11n.Country getCountryByA3(java.lang.String) -> getCountryByA3
    java.util.List getTexts() -> getTexts
    java.util.List getTexts(int,java.lang.String) -> getTexts
    java.util.List getTexts(int,long) -> getTexts
    architecture.ee.g11n.I18nText getText(long) -> getText
    void deleteTexts(java.util.List) -> deleteTexts
    void saveTexts(java.util.List) -> saveTexts
    void saveTexts(java.util.List,int,long) -> saveTexts
    java.util.List getAvailableLocales() -> getAvailableLocales
    architecture.ee.g11n.I18nLocale getLocaleById(long) -> getLocaleById
    architecture.ee.g11n.I18nLocale getLocale(java.util.Locale,boolean) -> getLocale
    architecture.ee.g11n.I18nLocale getLocale(java.util.Locale) -> getLocale
    void deleteLocale(architecture.ee.g11n.I18nLocale) -> deleteLocale
    architecture.ee.g11n.I18nLocale updateLocale(architecture.ee.g11n.I18nLocale) -> updateLocale
architecture.ee.component.SqlQueryClient -> architecture.ee.component.SqlQueryClient:
    architecture.ee.jdbc.query.SqlQuery getSqlQuery() -> getSqlQuery
    architecture.ee.jdbc.query.SqlQuery getSqlQuery(java.lang.String) -> getSqlQuery
    architecture.ee.spring.jdbc.ExtendedJdbcTemplate getExtendedJdbcTemplate() -> getExtendedJdbcTemplate
    org.springframework.jdbc.support.lob.LobHandler getLobHandler() -> getLobHandler
    java.lang.String getSql(java.lang.String) -> getSql
    architecture.ee.jdbc.schema.Database getDatabase(java.lang.String,java.lang.String,java.lang.String) -> getDatabase
    void exportToExcel(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> exportToExcel
    void importFromExcel(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> importFromExcel
architecture.ee.component.internal.GlobalizationServiceImpl -> architecture.ee.component.internal.GlobalizationServiceImpl:
    org.apache.commons.logging.Log log -> a
    architecture.ee.g11n.dao.CountryDao countryDao -> a
    architecture.ee.g11n.dao.I18nTextDao i18nTextDao -> a
    architecture.ee.g11n.dao.I18nLocaleDao i18nLocaleDao -> a
    architecture.ee.g11n.dao.I18nResourceBundleDao i18nResourceBundleDao -> a
    java.util.Map resourceBundles -> a
    44:45:void initialize() -> initialize
    49:50:void setI18nResourceBundleDao(architecture.ee.g11n.dao.I18nResourceBundleDao) -> setI18nResourceBundleDao
    53:54:void setCountryDao(architecture.ee.g11n.dao.CountryDao) -> setCountryDao
    57:58:void setI18nTextDao(architecture.ee.g11n.dao.I18nTextDao) -> setI18nTextDao
    61:62:void setI18nLocaleDao(architecture.ee.g11n.dao.I18nLocaleDao) -> setI18nLocaleDao
    65:65:java.util.List getCountries() -> getCountries
    70:70:java.util.List getCountries(boolean) -> getCountries
    74:74:architecture.ee.g11n.Country getCountryByA2(java.lang.String) -> getCountryByA2
    78:78:architecture.ee.g11n.Country getCountryByA3(java.lang.String) -> getCountryByA3
    82:82:java.util.List getTexts(int,java.lang.String) -> getTexts
    86:86:java.util.List getTexts(int,long) -> getTexts
    90:90:java.util.List getTexts(int) -> getTexts
    94:94:java.util.List getTexts() -> getTexts
    98:98:architecture.ee.g11n.I18nText getText(long) -> getText
    102:103:void deleteTexts(java.util.List) -> deleteTexts
    106:126:void saveTexts(java.util.List) -> saveTexts
    129:133:void saveTexts(java.util.List,int,long) -> saveTexts
    136:137:void reloadResourceBundes() -> reloadResourceBundes
    140:153:void loadResourceBundles() -> loadResourceBundles
    156:156:java.util.List getAvailableLocales() -> getAvailableLocales
    160:160:architecture.ee.g11n.I18nLocale getLocaleById(long) -> getLocaleById
    164:164:architecture.ee.g11n.I18nLocale getLocale(java.util.Locale,boolean) -> getLocale
    168:168:architecture.ee.g11n.I18nLocale getLocale(java.util.Locale) -> getLocale
    172:173:void deleteLocale(architecture.ee.g11n.I18nLocale) -> deleteLocale
    176:176:architecture.ee.g11n.I18nLocale updateLocale(architecture.ee.g11n.I18nLocale) -> updateLocale
    180:185:java.util.ResourceBundle getResourceBundle(java.lang.String,java.util.Locale) -> getResourceBundle
architecture.ee.component.internal.SqlQueryClientImpl -> architecture.ee.component.internal.SqlQueryClientImpl:
    28:28:java.lang.String getSql(java.lang.String) -> getSql
    33:40:architecture.ee.jdbc.schema.Database getDatabase(java.lang.String,java.lang.String,java.lang.String) -> getDatabase
    48:49:void initDao() -> initDao
    55:100:void importFromExcel(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> importFromExcel
    104:137:void exportToExcel(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> exportToExcel
architecture.ee.component.task.CancellableTask -> architecture.ee.component.task.CancellableTask:
    boolean shouldCancel() -> shouldCancel
architecture.ee.data.impexp.excel.ExcelReader -> architecture.ee.data.impexp.excel.ExcelReader:
    org.apache.commons.logging.Log log -> a
    org.apache.poi.ss.usermodel.Workbook workbook -> a
    int sheetIndex -> a
    47:47:boolean getBooleanCellValue(org.apache.poi.ss.usermodel.Cell) -> getBooleanCellValue
    51:71:java.util.List getDataAsList() -> getDataAsList
    75:85:java.util.Map getDataAsMapFromRow(int) -> getDataAsMapFromRow
    89:96:java.util.List getDataFromRow(int) -> getDataFromRow
    100:100:int getFirstRowNum() -> getFirstRowNum
    104:111:java.util.List getHeaderFromFirstRow() -> getHeaderFromFirstRow
    116:116:int getLastRowNum() -> getLastRowNum
    120:120:int getNumberOfSheets() -> getNumberOfSheets
    124:124:double getNumericCellValue(org.apache.poi.ss.usermodel.Cell) -> getNumericCellValue
    128:128:int getPhysicalNumberOfCells(int) -> getPhysicalNumberOfCells
    132:132:int getPhysicalNumberOfRows() -> getPhysicalNumberOfRows
    136:136:org.apache.poi.ss.usermodel.Row getRow(int) -> getRow
    140:140:org.apache.poi.ss.usermodel.Sheet getSheetAt(int) -> getSheetAt
    144:144:int getSheetIndex() -> getSheetIndex
    148:148:java.lang.String getSheetName() -> getSheetName
    152:152:java.lang.String getStringCellValue(org.apache.poi.ss.usermodel.Cell) -> getStringCellValue
    156:158:boolean isBooleanCell(org.apache.poi.ss.usermodel.Cell) -> isBooleanCell
    162:164:boolean isEmptyCell(org.apache.poi.ss.usermodel.Cell) -> isEmptyCell
    168:170:boolean isNumericCell(org.apache.poi.ss.usermodel.Cell) -> isNumericCell
    174:176:boolean isStringCell(org.apache.poi.ss.usermodel.Cell) -> isStringCell
    180:189:org.apache.poi.ss.usermodel.Workbook read(java.io.InputStream) -> a
    193:194:void setSheetIndex(int) -> setSheetIndex
architecture.ee.data.impexp.excel.ExcelWriter -> architecture.ee.data.impexp.excel.ExcelWriter:
    org.apache.poi.ss.usermodel.Workbook workbook -> a
    int sheetIndex -> a
    org.apache.poi.ss.usermodel.CellStyle style -> a
    36:38:org.apache.poi.ss.usermodel.Cell addCell(int,int) -> addCell
    42:43:org.apache.poi.ss.usermodel.Row addRow(int) -> addRow
    47:49:void addSheet(java.lang.String) -> addSheet
    52:64:org.apache.poi.ss.usermodel.CellStyle createCellStyle() -> a
    73:73:int getFirstRowNum() -> getFirstRowNum
    77:77:int getLastRowNum() -> getLastRowNum
    81:81:int getNumberOfSheets() -> getNumberOfSheets
    85:85:int getPhysicalNumberOfCells(int) -> getPhysicalNumberOfCells
    89:89:int getPhysicalNumberOfRows() -> getPhysicalNumberOfRows
    93:93:org.apache.poi.ss.usermodel.Row getRow(int) -> getRow
    97:97:org.apache.poi.ss.usermodel.Sheet getSheetAt(int) -> getSheetAt
    101:101:int getSheetIndex() -> getSheetIndex
    105:105:org.apache.poi.ss.usermodel.CellStyle getStyle() -> getStyle
    109:109:org.apache.poi.ss.usermodel.Workbook getWorkbook() -> getWorkbook
    113:141:void setDataToRow(java.util.Map,architecture.ee.jdbc.schema.Table) -> setDataToRow
    145:164:void setHeaderToFirstRow(architecture.ee.jdbc.schema.Table) -> setHeaderToFirstRow
    167:168:void setSheetIndex(int) -> setSheetIndex
    171:172:void setStyle(org.apache.poi.ss.usermodel.CellStyle) -> setStyle
    175:176:void setWorkbook(org.apache.poi.ss.usermodel.Workbook) -> setWorkbook
    179:191:void write(java.io.File) -> write
    195:204:void write(java.io.OutputStream) -> write
architecture.ee.exception.ApplicationException -> architecture.ee.exception.ApplicationException:
architecture.ee.exception.RuntimeSqlException -> architecture.ee.exception.RuntimeSqlException:
architecture.ee.exception.SystemException -> architecture.ee.exception.SystemException:
architecture.ee.g11n.Country -> architecture.ee.g11n.Country:
architecture.ee.g11n.I18nLocale -> architecture.ee.g11n.I18nLocale:
architecture.ee.g11n.I18nText -> architecture.ee.g11n.I18nText:
architecture.ee.g11n.I18nTextResourceBundle -> architecture.ee.g11n.I18nTextResourceBundle:
    java.lang.Object[][] contents -> a
    java.util.Locale locale -> a
    java.util.Set keySet -> keySet
    50:50:java.lang.Object[][] getContents() -> getContents
    54:54:java.util.Locale getLocale() -> getLocale
architecture.ee.g11n.dao.CountryDao -> architecture.ee.g11n.dao.CountryDao:
    architecture.ee.g11n.Country getCountryById(long) -> getCountryById
    architecture.ee.g11n.Country findByName(java.lang.String) -> findByName
    architecture.ee.g11n.Country findByA2(java.lang.String) -> findByA2
    architecture.ee.g11n.Country findByA3(java.lang.String) -> findByA3
    java.util.List findByEnabled(boolean) -> findByEnabled
    java.util.List findAll() -> findAll
    java.util.List findAll(int,int) -> findAll
    void deleteCountryById(long) -> deleteCountryById
    void updateCountry(architecture.ee.g11n.Country) -> updateCountry
    int allCountryCount() -> allCountryCount
    int enabledCountryCount() -> enabledCountryCount
architecture.ee.g11n.dao.I18nLocaleDao -> architecture.ee.g11n.dao.I18nLocaleDao:
    int getAvailableLocaleCount() -> getAvailableLocaleCount
    java.util.List getAvailableLocales() -> getAvailableLocales
    architecture.ee.g11n.I18nLocale getLocaleById(long) -> getLocaleById
    architecture.ee.g11n.I18nLocale getLocale(java.util.Locale,boolean) -> getLocale
    architecture.ee.g11n.I18nLocale getLocale(java.util.Locale) -> getLocale
    architecture.ee.g11n.I18nLocale addLocale(java.util.Locale) -> addLocale
    void deleteLocale(architecture.ee.g11n.I18nLocale) -> deleteLocale
    architecture.ee.g11n.I18nLocale updateLocale(architecture.ee.g11n.I18nLocale) -> updateLocale
architecture.ee.g11n.dao.I18nResourceBundleDao -> architecture.ee.g11n.dao.I18nResourceBundleDao:
    architecture.ee.g11n.I18nTextResourceBundle getResourceBundle(java.lang.String,java.util.Locale) -> getResourceBundle
architecture.ee.g11n.dao.I18nTextDao -> architecture.ee.g11n.dao.I18nTextDao:
    void createTexts(java.util.List) -> createTexts
    void updateTexts(java.util.List) -> updateTexts
    void deleteTexts(java.util.List) -> deleteTexts
    architecture.ee.g11n.I18nText getText(long) -> getText
    java.util.List getTexts() -> getTexts
    java.util.List getTexts(java.util.Locale) -> getTexts
    java.util.List getTexts(int) -> getTexts
    java.util.List getTexts(int,long) -> getTexts
    java.util.List getTexts(int,java.lang.String) -> getTexts
architecture.ee.g11n.dao.impl.JdbcCountryDao -> architecture.ee.g11n.dao.impl.JdbcCountryDao:
    35:35:void setSequenceDao(architecture.ee.jdbc.sequencer.dao.SequenceDao) -> setSequenceDao
    43:43:architecture.ee.g11n.Country getCountryById(long) -> getCountryById
    47:47:architecture.ee.g11n.Country findByName(java.lang.String) -> findByName
    51:51:architecture.ee.g11n.Country findByA2(java.lang.String) -> findByA2
    55:55:architecture.ee.g11n.Country findByA3(java.lang.String) -> findByA3
    59:60:java.util.List findByEnabled(boolean) -> findByEnabled
    64:64:java.util.List findAll() -> findAll
    68:68:java.util.List findAll(int,int) -> findAll
    72:73:void deleteCountryById(long) -> deleteCountryById
    76:79:void updateCountry(architecture.ee.g11n.Country) -> updateCountry
    82:82:int allCountryCount() -> allCountryCount
    86:86:int enabledCountryCount() -> enabledCountryCount
architecture.ee.g11n.dao.impl.JdbcCountryDao$CountryRowMapper -> architecture.ee.g11n.dao.impl.JdbcCountryDao$a:
    18:18:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.g11n.dao.impl.JdbcI18nLocaleDao -> architecture.ee.g11n.dao.impl.JdbcI18nLocaleDao:
    architecture.ee.jdbc.sequencer.dao.SequenceDao sequenceDao -> a
    39:40:void setSequenceDao(architecture.ee.jdbc.sequencer.dao.SequenceDao) -> setSequenceDao
    44:45:void initDao() -> initDao
    48:48:int getAvailableLocaleCount() -> getAvailableLocaleCount
    52:52:java.util.List getAvailableLocales() -> getAvailableLocales
    56:56:architecture.ee.g11n.I18nLocale getLocaleById(long) -> getLocaleById
    61:66:architecture.ee.g11n.I18nLocale getLocale(java.util.Locale,boolean) -> getLocale
    71:71:architecture.ee.g11n.I18nLocale getLocale(java.util.Locale) -> getLocale
    77:98:architecture.ee.g11n.I18nLocale addLocale(java.util.Locale) -> addLocale
    102:103:void deleteLocale(architecture.ee.g11n.I18nLocale) -> deleteLocale
    106:111:architecture.ee.g11n.I18nLocale updateLocale(architecture.ee.g11n.I18nLocale) -> updateLocale
architecture.ee.g11n.dao.impl.JdbcI18nLocaleDao$I18nLocaleRowMapper -> architecture.ee.g11n.dao.impl.JdbcI18nLocaleDao$a:
    21:21:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.g11n.dao.impl.JdbcI18nResourceBundleDao -> architecture.ee.g11n.dao.impl.JdbcI18nResourceBundleDao:
    38:38:void setSequenceDao(architecture.ee.jdbc.sequencer.dao.SequenceDao) -> setSequenceDao
    43:51:architecture.ee.g11n.I18nTextResourceBundle getResourceBundle(java.lang.String,java.util.Locale) -> getResourceBundle
    55:55:java.util.List getText(java.lang.String,java.util.Locale) -> getText
architecture.ee.g11n.dao.impl.JdbcI18nResourceBundleDao$I18nTextRowMapper -> architecture.ee.g11n.dao.impl.JdbcI18nResourceBundleDao$a:
    23:23:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.g11n.dao.impl.JdbcI18nTextDao -> architecture.ee.g11n.dao.impl.JdbcI18nTextDao:
    architecture.ee.jdbc.sequencer.dao.SequenceDao sequenceDao -> a
    40:41:void setSequenceDao(architecture.ee.jdbc.sequencer.dao.SequenceDao) -> setSequenceDao
    45:63:void createTexts(java.util.List) -> createTexts
    66:79:void updateTexts(java.util.List) -> updateTexts
    82:93:void deleteTexts(java.util.List) -> deleteTexts
    96:96:architecture.ee.g11n.I18nText getText(long) -> getText
    104:104:java.util.List getTexts() -> getTexts
    110:110:java.util.List getTexts(java.util.Locale) -> getTexts
    118:118:java.util.List getTexts(int) -> getTexts
    126:126:java.util.List getTexts(int,long) -> getTexts
    134:134:java.util.List getTexts(int,java.lang.String) -> getTexts
architecture.ee.g11n.dao.impl.JdbcI18nTextDao$1 -> architecture.ee.g11n.dao.impl.JdbcI18nTextDao$b:
    java.util.List val$list -> a
    architecture.ee.g11n.dao.impl.JdbcI18nTextDao this$0 -> a
    48:59:void setValues(java.sql.PreparedStatement,int) -> setValues
    61:61:int getBatchSize() -> getBatchSize
architecture.ee.g11n.dao.impl.JdbcI18nTextDao$2 -> architecture.ee.g11n.dao.impl.JdbcI18nTextDao$c:
    java.util.List val$list -> a
    69:75:void setValues(java.sql.PreparedStatement,int) -> setValues
    77:77:int getBatchSize() -> getBatchSize
architecture.ee.g11n.dao.impl.JdbcI18nTextDao$3 -> architecture.ee.g11n.dao.impl.JdbcI18nTextDao$d:
    java.util.List val$list -> a
    86:89:void setValues(java.sql.PreparedStatement,int) -> setValues
    91:91:int getBatchSize() -> getBatchSize
architecture.ee.g11n.dao.impl.JdbcI18nTextDao$I18nTextRowMapper -> architecture.ee.g11n.dao.impl.JdbcI18nTextDao$a:
    22:22:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.jdbc.datasource.DataSourceProvider -> architecture.ee.jdbc.datasource.DataSourceProvider:
    javax.sql.DataSource getDataSource() -> getDataSource
architecture.ee.jdbc.datasource.DriverManagerDataSourceProvider -> architecture.ee.jdbc.datasource.DriverManagerDataSourceProvider:
    8:8:javax.sql.DataSource getDataSource() -> getDataSource
architecture.ee.jdbc.property.dao.ExtendedPropertyDao -> architecture.ee.jdbc.property.dao.ExtendedPropertyDao:
    java.util.Map getProperties(java.lang.String,java.lang.String,long) -> getProperties
    void deleteProperties(java.lang.String,java.lang.String,long) -> deleteProperties
    void updateProperties(java.lang.String,java.lang.String,long,java.util.Map) -> updateProperties
architecture.ee.jdbc.property.dao.impl.JdbcExtendedPropertyDao -> architecture.ee.jdbc.property.dao.impl.JdbcExtendedPropertyDao:
    java.lang.String PROPERTY_NAME_COLUMN_NAME -> a
    java.lang.String PROPERTY_VALUE_COLUMN_NAME -> b
    27:28:void setPropertyNameColumnName(java.lang.String) -> setPropertyNameColumnName
    31:32:void setPropertyValueColumnName(java.lang.String) -> setPropertyValueColumnName
    36:40:java.util.Map getProperties(java.lang.String,java.lang.String,long) -> getProperties
    53:55:void deleteProperties(java.lang.String,java.lang.String,long) -> deleteProperties
    58:86:void updateProperties(java.lang.String,java.lang.String,long,java.util.Map) -> updateProperties
architecture.ee.jdbc.property.dao.impl.JdbcExtendedPropertyDao$1 -> architecture.ee.jdbc.property.dao.impl.JdbcExtendedPropertyDao$a:
    40:40:java.lang.Object extractData(java.sql.ResultSet) -> extractData
architecture.ee.jdbc.query.NamedSqlQuery -> architecture.ee.jdbc.query.NamedSqlQuery:
architecture.ee.jdbc.query.SqlNotFoundException -> architecture.ee.jdbc.query.SqlNotFoundException:
architecture.ee.jdbc.query.SqlQuery -> architecture.ee.jdbc.query.SqlQuery:
    java.lang.Class DEFAULT_RETURN_TYPE -> DEFAULT_RETURN_TYPE
    architecture.ee.jdbc.query.SqlQuery setDataSource(javax.sql.DataSource) -> setDataSource
    architecture.ee.jdbc.query.SqlQuery reset() -> reset
    architecture.ee.jdbc.query.SqlQuery setStatement(java.lang.String,java.lang.String) -> setStatement
    architecture.ee.jdbc.query.SqlQuery setStatement(java.lang.String) -> setStatement
    architecture.ee.jdbc.query.SqlQuery setString(java.lang.String) -> setString
    architecture.ee.jdbc.query.SqlQuery setParameters(java.lang.Object[],int[]) -> setParameters
    architecture.ee.jdbc.query.SqlQuery setReturnType(java.lang.Class) -> setReturnType
    architecture.ee.jdbc.query.SqlQuery setAdditionalParameter(java.lang.String,java.lang.Object) -> setAdditionalParameter
    architecture.ee.jdbc.query.SqlQuery setStartIndex(int) -> setStartIndex
    architecture.ee.jdbc.query.SqlQuery setMaxResults(int) -> setMaxResults
    java.util.List queryForList(java.lang.String) -> queryForList
    java.util.List queryForList(java.lang.String,java.lang.Class) -> queryForList
    java.util.List queryForList(java.lang.String,java.lang.Object[],int[]) -> queryForList
    java.util.List queryForList(java.lang.String,java.lang.Object[],int[],java.lang.Class) -> queryForList
    java.util.Map queryForMap(java.lang.String) -> queryForMap
    java.util.Map queryForMap(java.lang.String,java.lang.Object[],int[]) -> queryForMap
    java.lang.Object queryForObject(java.lang.String,java.lang.Class) -> queryForObject
    java.lang.Object queryForObject(java.lang.String,java.lang.Object[],int[],org.springframework.jdbc.core.RowMapper) -> queryForObject
    java.lang.Object queryForObject(java.lang.String,java.lang.Object[],int[],org.springframework.jdbc.core.ResultSetExtractor) -> queryForObject
    java.lang.Object queryForObject(java.lang.String,java.lang.Object[],int[],java.lang.Class) -> queryForObject
    java.lang.Object uniqueResult() -> uniqueResult
    java.lang.Object uniqueResult(java.lang.Class) -> uniqueResult
    java.lang.Object uniqueResult(org.springframework.jdbc.core.RowMapper) -> uniqueResult
    java.util.List list() -> list
    java.lang.Object executeScript() -> executeScript
    architecture.ee.jdbc.query.SqlQuery addToBatch() -> addToBatch
    int executeUpdate() -> executeUpdate
    int[] executeBatchUpdate() -> executeBatchUpdate
    int executeUpdate(java.lang.String,architecture.ee.jdbc.recordset.Recordset,java.lang.String[]) -> executeUpdate
    int[] executeBatchUpdate(java.lang.String,architecture.ee.jdbc.recordset.Recordset,java.lang.String[]) -> executeBatchUpdate
architecture.ee.jdbc.query.SqlQueryException -> architecture.ee.jdbc.query.SqlQueryException:
architecture.ee.jdbc.query.builder.AbstractBuilder -> architecture.ee.jdbc.query.builder.AbstractBuilder:
    architecture.ee.jdbc.query.factory.Configuration configuration -> configuration
architecture.ee.jdbc.query.builder.BuilderException -> architecture.ee.jdbc.query.builder.BuilderException:
architecture.ee.jdbc.query.builder.SqlBuilderAssistant -> architecture.ee.jdbc.query.builder.SqlBuilderAssistant:
    java.lang.String currentNamespace -> a
    java.lang.String resource -> b
    org.apache.commons.logging.Log log -> a
    55:64:architecture.ee.jdbc.query.mapping.MappedStatement addMappedStatement(java.lang.String,architecture.ee.jdbc.query.sql.SqlSource,architecture.ee.jdbc.query.mapping.StatementType,java.lang.Integer,java.lang.Integer) -> addMappedStatement
    68:68:java.lang.String getCurrentNamespace() -> getCurrentNamespace
    72:81:void setCurrentNamespace(java.lang.String) -> setCurrentNamespace
    84:88:java.lang.String applyCurrentNamespace(java.lang.String) -> applyCurrentNamespace
architecture.ee.jdbc.query.builder.xml.XmlSqlBuilder -> architecture.ee.jdbc.query.builder.xml.XmlSqlBuilder:
    architecture.ee.jdbc.query.builder.SqlBuilderAssistant builderAssistant -> a
    architecture.ee.jdbc.query.parser.XPathParser parser -> a
    org.apache.commons.logging.Log log -> a
    65:75:void build() -> build
architecture.ee.jdbc.query.builder.xml.XmlStatementBuilder -> architecture.ee.jdbc.query.builder.xml.XmlStatementBuilder:
    java.lang.String XML_NODE_DESCRIPTION_TAG -> XML_NODE_DESCRIPTION_TAG
    java.lang.String XML_ATTR_STATEMENT_TYPE_TAG -> XML_ATTR_STATEMENT_TYPE_TAG
    java.lang.String XML_ATTR_FETCH_SIZE_TAG -> XML_ATTR_FETCH_SIZE_TAG
    java.lang.String XML_ATTR_TIMEOUT_TAG -> XML_ATTR_TIMEOUT_TAG
    java.lang.String XML_ATTR_DYNAMIC_TAG -> XML_ATTR_DYNAMIC_TAG
    java.lang.String XML_ATTR_ID_TAG -> XML_ATTR_ID_TAG
    java.lang.String XML_ATTR_NAME_TAG -> XML_ATTR_NAME_TAG
    java.lang.String XML_ATTR_CALLABLE_TAG -> XML_ATTR_CALLABLE_TAG
    java.lang.String XML_ATTR_FUNCTION_TAG -> XML_ATTR_FUNCTION_TAG
    java.lang.String XML_ATTR_SCRIPT_TAG -> XML_ATTR_SCRIPT_TAG
    java.lang.String XML_ATTR_COMMENT_TAG -> XML_ATTR_COMMENT_TAG
    architecture.ee.jdbc.query.builder.SqlBuilderAssistant builderAssistant -> a
    73:95:void parseStatementNode(architecture.ee.jdbc.query.parser.XNode) -> parseStatementNode
architecture.ee.jdbc.query.builder.xml.dynamic.DynamicContext -> architecture.ee.jdbc.query.builder.xml.dynamic.DynamicContext:
    java.lang.String ADDITIONAL_PARAMETER_OBJECT_KEY -> ADDITIONAL_PARAMETER_OBJECT_KEY
    java.lang.String PARAMETER_OBJECT_KEY -> PARAMETER_OBJECT_KEY
    java.util.Map bindings -> a
    java.lang.StringBuilder sqlBuilder -> a
    48:48:java.util.Map getBindings() -> getBindings
    52:53:void bind(java.lang.String,java.lang.Object) -> bind
    56:58:void appendSql(java.lang.String) -> appendSql
    61:61:java.lang.String getSql() -> getSql
architecture.ee.jdbc.query.builder.xml.dynamic.DynamicSqlNode -> architecture.ee.jdbc.query.builder.xml.dynamic.DynamicSqlNode:
    java.lang.String text -> a
    org.apache.commons.logging.Log log -> log
    freemarker.ext.beans.BeansWrapper wrapper -> a
    52:81:boolean apply(architecture.ee.jdbc.query.builder.xml.dynamic.DynamicContext) -> apply
    87:87:java.lang.String toString() -> toString
    95:110:java.lang.String processTemplate(java.util.Map) -> processTemplate
    115:139:void populateStatics(java.util.Map) -> populateStatics
architecture.ee.jdbc.query.builder.xml.dynamic.DynamicSqlNode$Language -> architecture.ee.jdbc.query.builder.xml.dynamic.DynamicSqlNode$Language:
    architecture.ee.jdbc.query.builder.xml.dynamic.DynamicSqlNode$Language VELOCITY -> VELOCITY
    architecture.ee.jdbc.query.builder.xml.dynamic.DynamicSqlNode$Language FREEMARKER -> FREEMARKER
    architecture.ee.jdbc.query.builder.xml.dynamic.DynamicSqlNode$Language[] $VALUES -> a
    90:90:architecture.ee.jdbc.query.builder.xml.dynamic.DynamicSqlNode$Language[] values() -> values
    90:90:architecture.ee.jdbc.query.builder.xml.dynamic.DynamicSqlNode$Language valueOf(java.lang.String) -> valueOf
architecture.ee.jdbc.query.builder.xml.dynamic.DynamicSqlSource -> architecture.ee.jdbc.query.builder.xml.dynamic.DynamicSqlSource:
    architecture.ee.jdbc.query.builder.xml.dynamic.SqlNode rootSqlNode -> a
    36:38:architecture.ee.jdbc.query.mapping.BoundSql getBoundSql(java.lang.Object) -> getBoundSql
    42:44:architecture.ee.jdbc.query.mapping.BoundSql getBoundSql(java.lang.Object,java.util.Map) -> getBoundSql
architecture.ee.jdbc.query.builder.xml.dynamic.MixedSqlNode -> architecture.ee.jdbc.query.builder.xml.dynamic.MixedSqlNode:
    java.util.List contents -> a
    29:32:boolean apply(architecture.ee.jdbc.query.builder.xml.dynamic.DynamicContext) -> apply
    37:42:java.lang.String toString() -> toString
architecture.ee.jdbc.query.builder.xml.dynamic.SqlNode -> architecture.ee.jdbc.query.builder.xml.dynamic.SqlNode:
    boolean apply(architecture.ee.jdbc.query.builder.xml.dynamic.DynamicContext) -> apply
architecture.ee.jdbc.query.builder.xml.dynamic.TextSqlNode -> architecture.ee.jdbc.query.builder.xml.dynamic.TextSqlNode:
    java.lang.String text -> a
    27:28:boolean apply(architecture.ee.jdbc.query.builder.xml.dynamic.DynamicContext) -> apply
    34:34:java.lang.String toString() -> toString
architecture.ee.jdbc.query.factory.Configuration -> architecture.ee.jdbc.query.factory.Configuration:
    java.lang.Integer defaultStatementTimeout -> defaultStatementTimeout
    java.util.Properties variables -> variables
    java.util.Set loadedResources -> loadedResources
    java.util.Map mappedStatements -> mappedStatements
    java.util.Map uriNamespace -> uriNamespace
    java.util.concurrent.ConcurrentMap statementNodesToParse -> statementNodesToParse
    53:53:java.lang.String getUriNamespace(java.lang.String) -> getUriNamespace
    57:58:void addUriNamespace(java.lang.String,java.lang.String) -> addUriNamespace
    61:75:void removeUriNamespace(java.lang.String,boolean) -> removeUriNamespace
    81:82:void addStatementNodes(java.lang.String,java.util.List) -> addStatementNodes
    85:87:void addLoadedResource(java.lang.String) -> addLoadedResource
    90:91:boolean isResourceLoaded(java.lang.String) -> isResourceLoaded
    95:96:void removeLoadedResource(java.lang.String) -> removeLoadedResource
    99:99:java.util.Properties getVariables() -> getVariables
    103:104:void setVariables(java.util.Properties) -> setVariables
    113:114:java.lang.String extractNamespace(java.lang.String) -> extractNamespace
    118:119:void setDefaultStatementTimeout(java.lang.Integer) -> setDefaultStatementTimeout
    127:133:void buildAllStatements() -> buildAllStatements
    136:137:void addMappedStatement(architecture.ee.jdbc.query.mapping.MappedStatement) -> addMappedStatement
    146:157:void buildStatementsForNamespace(java.lang.String) -> buildStatementsForNamespace
    161:166:void parseStatementNodes(architecture.ee.jdbc.query.builder.SqlBuilderAssistant,java.util.List) -> parseStatementNodes
    169:169:java.lang.Integer getDefaultStatementTimeout() -> getDefaultStatementTimeout
    173:174:java.util.Collection getMappedStatementNames() -> getMappedStatementNames
    178:179:java.util.Collection getMappedStatements() -> getMappedStatements
    183:190:architecture.ee.jdbc.query.mapping.MappedStatement getMappedStatement(java.lang.String) -> getMappedStatement
    194:196:void buildStatementsFromId(java.lang.String) -> buildStatementsFromId
architecture.ee.jdbc.query.factory.ConfigurationFactory -> architecture.ee.jdbc.query.factory.ConfigurationFactory:
    architecture.ee.jdbc.query.factory.ConfigurationFactory$Implementation impl -> a
    35:35:architecture.ee.jdbc.query.factory.Configuration getConfiguration() -> getConfiguration
architecture.ee.jdbc.query.factory.ConfigurationFactory$Implementation -> architecture.ee.jdbc.query.factory.ConfigurationFactory$Implementation:
    architecture.ee.jdbc.query.factory.Configuration getConfiguration() -> getConfiguration
architecture.ee.jdbc.query.factory.SqlQueryFactory -> architecture.ee.jdbc.query.factory.SqlQueryFactory:
    java.lang.String[] getQueryNames() -> getQueryNames
    architecture.ee.jdbc.query.SqlQuery createSqlQuery() -> createSqlQuery
    architecture.ee.jdbc.query.SqlQuery createSqlQuery(java.lang.String,java.lang.String) -> createSqlQuery
    architecture.ee.jdbc.query.SqlQuery createSqlQuery(java.lang.String,java.lang.String,javax.sql.DataSource) -> createSqlQuery
    architecture.ee.jdbc.query.SqlQuery createSqlQuery(javax.sql.DataSource) -> createSqlQuery
    architecture.ee.jdbc.query.SqlQuery createSqlQuery(architecture.ee.spring.jdbc.ExtendedJdbcTemplate) -> createSqlQuery
    void setDataSource(javax.sql.DataSource) -> setDataSource
architecture.ee.jdbc.query.factory.impl.ConfigurationFactoryImpl -> architecture.ee.jdbc.query.factory.impl.ConfigurationFactoryImpl:
    architecture.ee.jdbc.query.factory.Configuration configuration -> a
    26:26:architecture.ee.jdbc.query.factory.Configuration getConfiguration() -> getConfiguration
architecture.ee.jdbc.query.factory.impl.SqlQueryFactoryImpl -> architecture.ee.jdbc.query.factory.impl.SqlQueryFactoryImpl:
    architecture.ee.jdbc.query.factory.Configuration configuration -> a
    javax.sql.DataSource dataSource -> a
    41:41:architecture.ee.jdbc.query.factory.Configuration getConfiguration() -> getConfiguration
    45:46:void setDataSource(javax.sql.DataSource) -> setDataSource
    49:55:java.lang.String[] getQueryNames(java.lang.String) -> getQueryNames
    59:59:java.lang.String[] getQueryNames() -> getQueryNames
    63:63:architecture.ee.jdbc.query.SqlQuery createSqlQuery() -> createSqlQuery
    67:67:architecture.ee.jdbc.query.SqlQuery createSqlQuery(javax.sql.DataSource) -> createSqlQuery
    71:71:architecture.ee.jdbc.query.SqlQuery createSqlQuery(architecture.ee.spring.jdbc.ExtendedJdbcTemplate) -> createSqlQuery
    75:77:architecture.ee.jdbc.query.SqlQuery createSqlQuery(java.lang.String,java.lang.String) -> createSqlQuery
    81:83:architecture.ee.jdbc.query.SqlQuery createSqlQuery(java.lang.String,java.lang.String,javax.sql.DataSource) -> createSqlQuery
architecture.ee.jdbc.query.factory.impl.SqlQueryImpl -> architecture.ee.jdbc.query.factory.impl.SqlQueryImpl:
    int startIndex -> a
    int maxResults -> b
    architecture.ee.spring.jdbc.ExtendedJdbcTemplate jdbcTemplate -> a
    architecture.ee.jdbc.query.factory.Configuration configuration -> a
    java.util.Map additionalParameters -> a
    java.util.List values -> a
    java.lang.Class returnType -> a
    org.apache.commons.collections.primitives.IntList types -> a
    java.util.LinkedList parameterQueue -> a
    java.lang.String statement -> a
    org.apache.commons.logging.Log log -> a
    boolean stopOnError -> a
    82:83:void setStopOnError(boolean) -> setStopOnError
    86:94:architecture.ee.jdbc.query.SqlQuery reset() -> reset
    98:98:int getStartIndex() -> getStartIndex
    102:102:int getMaxResults() -> getMaxResults
    106:107:architecture.ee.jdbc.query.SqlQuery setStartIndex(int) -> setStartIndex
    111:112:architecture.ee.jdbc.query.SqlQuery setMaxResults(int) -> setMaxResults
    116:118:architecture.ee.jdbc.query.SqlQuery setDataSource(javax.sql.DataSource) -> setDataSource
    122:123:architecture.ee.jdbc.query.SqlQuery setAdditionalParameter(java.lang.String,java.lang.Object) -> setAdditionalParameter
    127:127:java.lang.Object getAdditionalParameter(java.lang.String) -> getAdditionalParameter
    131:131:java.lang.String getStatement() -> getStatement
    135:136:architecture.ee.jdbc.query.SqlQuery setStatement(java.lang.String) -> setStatement
    140:141:architecture.ee.jdbc.query.SqlQuery setStatement(java.lang.String,java.lang.String) -> setStatement
    145:145:java.lang.Class getReturnType() -> getReturnType
    149:150:architecture.ee.jdbc.query.SqlQuery setReturnType(java.lang.Class) -> setReturnType
    159:159:architecture.ee.jdbc.query.SqlQuery setString(java.lang.String) -> setString
    169:174:architecture.ee.jdbc.query.SqlQuery setParameter(java.lang.Object,int) -> setParameter
    184:195:architecture.ee.jdbc.query.SqlQuery setParameters(java.lang.Object[]) -> setParameters
    206:219:architecture.ee.jdbc.query.SqlQuery setParameters(java.lang.Object[],int[]) -> setParameters
    227:227:java.util.List queryForList(java.lang.String) -> queryForList
    240:244:java.util.List queryForList(java.lang.String,java.lang.Object[],int[]) -> queryForList
    254:254:java.util.List queryForList(java.lang.String,java.lang.Class) -> queryForList
    266:270:java.util.List queryForList(java.lang.String,java.lang.Object[],int[],java.lang.Class) -> queryForList
    282:283:java.lang.Object queryForObject(java.lang.String,java.lang.Class) -> queryForObject
    292:293:java.util.Map queryForMap(java.lang.String) -> queryForMap
    303:304:java.util.Map queryForMap(java.lang.String,java.lang.Object[],int[]) -> queryForMap
    315:316:java.lang.Object queryForObject(java.lang.String,java.lang.Object[],int[],java.lang.Class) -> queryForObject
    329:330:java.lang.Object queryForObject(java.lang.String,java.lang.Object[],int[],org.springframework.jdbc.core.RowMapper) -> queryForObject
    335:336:java.lang.Object queryForObject(java.lang.String,java.lang.Object[],int[],org.springframework.jdbc.core.ResultSetExtractor) -> queryForObject
    340:340:java.lang.Object uniqueResult(org.springframework.jdbc.core.RowMapper) -> uniqueResult
    344:354:java.lang.Object uniqueResult() -> uniqueResult
    359:368:java.lang.Object uniqueResult(java.lang.Class) -> uniqueResult
    373:384:java.util.List list() -> list
    392:394:java.lang.Object executeScript() -> executeScript
    398:403:architecture.ee.jdbc.query.SqlQuery addToBatch() -> addToBatch
    408:419:int executeUpdate() -> executeUpdate
    431:435:int executeUpdate(java.lang.String,architecture.ee.jdbc.recordset.Recordset,java.lang.String[]) -> executeUpdate
    440:448:int[] executeBatchUpdate() -> executeBatchUpdate
    471:520:int[] executeBatchUpdate(java.lang.String,architecture.ee.jdbc.recordset.Recordset,java.lang.String[]) -> executeBatchUpdate
    556:562:architecture.ee.jdbc.query.mapping.BoundSql getBoundSql(java.lang.String,java.lang.Object) -> getBoundSql
architecture.ee.jdbc.query.factory.impl.SqlQueryImpl$1 -> architecture.ee.jdbc.query.factory.impl.SqlQueryImpl$a:
    architecture.ee.jdbc.query.factory.impl.SqlQueryImpl this$0 -> a
    452:452:int getBatchSize() -> getBatchSize
    457:464:void setValues(java.sql.PreparedStatement,int) -> setValues
architecture.ee.jdbc.query.factory.impl.SqlQueryImpl$1RecordsetBatchPreparedStatementSetter -> architecture.ee.jdbc.query.factory.impl.SqlQueryImpl$b:
    architecture.ee.jdbc.recordset.Recordset recordset -> a
    java.lang.String[] params -> a
    488:513:void setValues(java.sql.PreparedStatement,int) -> setValues
    516:516:int getBatchSize() -> getBatchSize
architecture.ee.jdbc.query.mapping.BoundSql -> architecture.ee.jdbc.query.mapping.BoundSql:
    java.lang.String sql -> a
    28:28:java.lang.String getSql() -> getSql
architecture.ee.jdbc.query.mapping.MappedStatement -> architecture.ee.jdbc.query.mapping.MappedStatement:
    java.lang.String resource -> a
    architecture.ee.jdbc.query.factory.Configuration configuration -> a
    java.lang.String ID -> b
    java.lang.Integer fetchSize -> a
    java.lang.Integer timeout -> b
    architecture.ee.jdbc.query.sql.SqlSource sqlSource -> a
    architecture.ee.jdbc.query.mapping.StatementType statementType -> a
    81:81:java.lang.String getID() -> getID
    85:85:java.lang.String getResource() -> getResource
    89:89:architecture.ee.jdbc.query.factory.Configuration getConfiguration() -> getConfiguration
    93:93:java.lang.Integer getFetchSize() -> getFetchSize
    97:97:java.lang.Integer getTimeout() -> getTimeout
    101:101:architecture.ee.jdbc.query.sql.SqlSource getSqlSource() -> getSqlSource
    105:105:architecture.ee.jdbc.query.mapping.StatementType getStatementType() -> getStatementType
    110:111:architecture.ee.jdbc.query.mapping.BoundSql getBoundSql(java.lang.Object) -> getBoundSql
    115:121:architecture.ee.jdbc.query.mapping.BoundSql getBoundSql(java.lang.Object,java.lang.Object) -> getBoundSql
architecture.ee.jdbc.query.mapping.MappedStatement$Builder -> architecture.ee.jdbc.query.mapping.MappedStatement$Builder:
    architecture.ee.jdbc.query.mapping.MappedStatement mappedStatement -> a
    boolean $assertionsDisabled -> a
    48:49:architecture.ee.jdbc.query.mapping.MappedStatement$Builder resource(java.lang.String) -> resource
    53:53:java.lang.String id() -> id
    57:58:architecture.ee.jdbc.query.mapping.MappedStatement$Builder fetchSize(java.lang.Integer) -> fetchSize
    62:63:architecture.ee.jdbc.query.mapping.MappedStatement$Builder timeout(java.lang.Integer) -> timeout
    67:68:architecture.ee.jdbc.query.mapping.MappedStatement$Builder statementType(architecture.ee.jdbc.query.mapping.StatementType) -> statementType
    72:75:architecture.ee.jdbc.query.mapping.MappedStatement build() -> build
architecture.ee.jdbc.query.mapping.StatementType -> architecture.ee.jdbc.query.mapping.StatementType:
    architecture.ee.jdbc.query.mapping.StatementType STATEMENT -> STATEMENT
    architecture.ee.jdbc.query.mapping.StatementType PREPARED -> PREPARED
    architecture.ee.jdbc.query.mapping.StatementType FUNCTION -> FUNCTION
    architecture.ee.jdbc.query.mapping.StatementType CALLABLE -> CALLABLE
    architecture.ee.jdbc.query.mapping.StatementType[] $VALUES -> a
    18:18:architecture.ee.jdbc.query.mapping.StatementType[] values() -> values
    18:18:architecture.ee.jdbc.query.mapping.StatementType valueOf(java.lang.String) -> valueOf
architecture.ee.jdbc.query.parser.GenericTokenParser -> architecture.ee.jdbc.query.parser.GenericTokenParser:
    java.lang.String openToken -> a
    java.lang.String closeToken -> b
    architecture.ee.jdbc.query.parser.TokenHandler handler -> a
    32:59:java.lang.String parse(java.lang.String) -> parse
architecture.ee.jdbc.query.parser.PropertyParser -> architecture.ee.jdbc.query.parser.PropertyParser:
    23:25:java.lang.String parse(java.lang.String,java.util.Properties) -> parse
architecture.ee.jdbc.query.parser.PropertyParser$VariableTokenHandler -> architecture.ee.jdbc.query.parser.PropertyParser$a:
    java.util.Properties variables -> a
    36:40:java.lang.String handleToken(java.lang.String) -> handleToken
architecture.ee.jdbc.query.parser.TokenHandler -> architecture.ee.jdbc.query.parser.TokenHandler:
    java.lang.String handleToken(java.lang.String) -> handleToken
architecture.ee.jdbc.query.parser.XNode -> architecture.ee.jdbc.query.parser.XNode:
    org.w3c.dom.Node node -> a
    java.lang.String name -> a
    java.lang.String body -> b
    java.util.Properties attributes -> a
    java.util.Properties variables -> b
    architecture.ee.jdbc.query.parser.XPathParser xpathParser -> a
    48:48:architecture.ee.jdbc.query.parser.XNode newXNode(org.w3c.dom.Node) -> newXNode
    52:56:architecture.ee.jdbc.query.parser.XNode getParent() -> getParent
    61:70:java.lang.String getPath() -> getPath
    74:92:java.lang.String getValueBasedIdentifier() -> getValueBasedIdentifier
    96:96:java.lang.String evalString(java.lang.String) -> evalString
    100:100:java.lang.Boolean evalBoolean(java.lang.String) -> evalBoolean
    104:104:java.lang.Double evalDouble(java.lang.String) -> evalDouble
    108:108:java.util.List evalNodes(java.lang.String) -> evalNodes
    112:112:architecture.ee.jdbc.query.parser.XNode evalNode(java.lang.String) -> evalNode
    116:116:org.w3c.dom.Node getNode() -> getNode
    120:120:java.lang.String getName() -> getName
    124:124:java.lang.String getStringBody() -> getStringBody
    128:131:java.lang.String getStringBody(java.lang.String) -> getStringBody
    136:136:java.lang.Boolean getBooleanBody() -> getBooleanBody
    140:143:java.lang.Boolean getBooleanBody(java.lang.Boolean) -> getBooleanBody
    148:148:java.lang.Integer getIntBody() -> getIntBody
    152:155:java.lang.Integer getIntBody(java.lang.Integer) -> getIntBody
    160:160:java.lang.Long getLongBody() -> getLongBody
    164:167:java.lang.Long getLongBody(java.lang.Long) -> getLongBody
    172:172:java.lang.Double getDoubleBody() -> getDoubleBody
    176:179:java.lang.Double getDoubleBody(java.lang.Double) -> getDoubleBody
    184:184:java.lang.Float getFloatBody() -> getFloatBody
    188:191:java.lang.Float getFloatBody(java.lang.Float) -> getFloatBody
    196:196:java.lang.String getStringAttribute(java.lang.String) -> getStringAttribute
    200:204:java.lang.String getStringAttribute(java.lang.String,java.lang.String) -> getStringAttribute
    209:209:java.lang.Boolean getBooleanAttribute(java.lang.String) -> getBooleanAttribute
    213:217:java.lang.Boolean getBooleanAttribute(java.lang.String,java.lang.Boolean) -> getBooleanAttribute
    222:222:java.lang.Integer getIntAttribute(java.lang.String) -> getIntAttribute
    226:230:java.lang.Integer getIntAttribute(java.lang.String,java.lang.Integer) -> getIntAttribute
    235:235:java.lang.Long getLongAttribute(java.lang.String) -> getLongAttribute
    239:243:java.lang.Long getLongAttribute(java.lang.String,java.lang.Long) -> getLongAttribute
    248:248:java.lang.Double getDoubleAttribute(java.lang.String) -> getDoubleAttribute
    252:256:java.lang.Double getDoubleAttribute(java.lang.String,java.lang.Double) -> getDoubleAttribute
    261:261:java.lang.Float getFloatAttribute(java.lang.String) -> getFloatAttribute
    265:269:java.lang.Float getFloatAttribute(java.lang.String,java.lang.Float) -> getFloatAttribute
    274:284:java.util.List getChildren() -> getChildren
    288:296:java.util.Properties getChildrenAsProperties() -> getChildrenAsProperties
    300:329:java.lang.String toString() -> toString
    333:343:java.util.Properties parseAttributes(org.w3c.dom.Node) -> a
    347:357:java.lang.String parseBody(org.w3c.dom.Node) -> a
    361:367:java.lang.String getBodyData(org.w3c.dom.Node) -> b
architecture.ee.jdbc.query.parser.XPathParser -> architecture.ee.jdbc.query.parser.XPathParser:
    org.w3c.dom.Document document -> a
    boolean validation -> a
    org.xml.sax.EntityResolver entityResolver -> a
    java.util.Properties variables -> a
    javax.xml.xpath.XPath xpath -> a
    121:122:void setVariables(java.util.Properties) -> setVariables
    125:125:java.lang.String evalString(java.lang.String) -> evalString
    129:132:java.lang.String evalString(java.lang.Object,java.lang.String) -> evalString
    136:136:java.lang.Boolean evalBoolean(java.lang.String) -> evalBoolean
    140:140:java.lang.Boolean evalBoolean(java.lang.Object,java.lang.String) -> evalBoolean
    144:144:java.lang.Short evalShort(java.lang.String) -> evalShort
    148:148:java.lang.Short evalShort(java.lang.Object,java.lang.String) -> evalShort
    152:152:java.lang.Integer evalInteger(java.lang.String) -> evalInteger
    156:156:java.lang.Integer evalInteger(java.lang.Object,java.lang.String) -> evalInteger
    160:160:java.lang.Long evalLong(java.lang.String) -> evalLong
    164:164:java.lang.Long evalLong(java.lang.Object,java.lang.String) -> evalLong
    168:168:java.lang.Float evalFloat(java.lang.String) -> evalFloat
    172:172:java.lang.Float evalFloat(java.lang.Object,java.lang.String) -> evalFloat
    176:176:java.lang.Double evalDouble(java.lang.String) -> evalDouble
    180:180:java.lang.Double evalDouble(java.lang.Object,java.lang.String) -> evalDouble
    184:184:java.util.List evalNodes(java.lang.String) -> evalNodes
    188:194:java.util.List evalNodes(java.lang.Object,java.lang.String) -> evalNodes
    198:198:architecture.ee.jdbc.query.parser.XNode evalNode(java.lang.String) -> evalNode
    202:206:architecture.ee.jdbc.query.parser.XNode evalNode(java.lang.Object,java.lang.String) -> evalNode
    211:213:java.lang.Object evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName) -> a
    221:250:org.w3c.dom.Document createDocument(java.io.Reader) -> a
    257:262:void commonConstructor(boolean,java.util.Properties,org.xml.sax.EntityResolver) -> a
architecture.ee.jdbc.query.parser.XPathParser$1 -> architecture.ee.jdbc.query.parser.XPathParser$a:
    236:236:void error(org.xml.sax.SAXParseException) -> error
    241:241:void fatalError(org.xml.sax.SAXParseException) -> fatalError
    246:246:void warning(org.xml.sax.SAXParseException) -> warning
architecture.ee.jdbc.query.sql.MappedSql -> architecture.ee.jdbc.query.sql.MappedSql:
architecture.ee.jdbc.query.sql.Sql -> architecture.ee.jdbc.query.sql.Sql:
architecture.ee.jdbc.query.sql.Sql$SqlType -> architecture.ee.jdbc.query.sql.Sql$SqlType:
    architecture.ee.jdbc.query.sql.Sql$SqlType UNKNOWN -> UNKNOWN
    architecture.ee.jdbc.query.sql.Sql$SqlType SCRIPT -> SCRIPT
    architecture.ee.jdbc.query.sql.Sql$SqlType PROCEDURE -> PROCEDURE
    architecture.ee.jdbc.query.sql.Sql$SqlType FUNCTION -> FUNCTION
    architecture.ee.jdbc.query.sql.Sql$SqlType STATEMENT -> STATEMENT
    architecture.ee.jdbc.query.sql.Sql$SqlType BATCH -> BATCH
    architecture.ee.jdbc.query.sql.Sql$SqlType[] $VALUES -> a
    20:20:architecture.ee.jdbc.query.sql.Sql$SqlType[] values() -> values
    20:20:architecture.ee.jdbc.query.sql.Sql$SqlType valueOf(java.lang.String) -> valueOf
architecture.ee.jdbc.query.sql.SqlSource -> architecture.ee.jdbc.query.sql.SqlSource:
    architecture.ee.jdbc.query.mapping.BoundSql getBoundSql(java.lang.Object) -> getBoundSql
    architecture.ee.jdbc.query.mapping.BoundSql getBoundSql(java.lang.Object,java.util.Map) -> getBoundSql
architecture.ee.jdbc.recordset.Record -> architecture.ee.jdbc.recordset.Record:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _record -> a
    architecture.ee.jdbc.recordset.Recordset _children -> a
    53:67:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    83:101:void setValue(java.lang.String,java.lang.Object) -> setValue
    110:111:void setChildren(architecture.ee.jdbc.recordset.Recordset) -> setChildren
    120:120:architecture.ee.jdbc.recordset.Recordset getChildren() -> getChildren
architecture.ee.jdbc.recordset.Recordset -> architecture.ee.jdbc.recordset.Recordset:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _fields -> a
    java.util.ArrayList _data -> a
    int _recordNumber -> a
    int _pageCount -> b
    int _pageSize -> c
    int _currentPage -> d
    java.lang.String _ID -> a
    java.lang.String _lastSortColName -> b
    java.lang.String _lastSortMode -> c
    78:78:int getPageSize() -> getPageSize
    90:102:architecture.ee.jdbc.recordset.Recordset getRecordsetInfo() -> getRecordsetInfo
    112:113:void setID(java.lang.String) -> setID
    121:121:java.lang.String getID() -> getID
    129:129:int getPageCount() -> getPageCount
    137:137:int getPageNumber() -> getPageNumber
    146:163:void setPageSize(int) -> setPageSize
    171:203:architecture.ee.jdbc.recordset.Recordset getPage(int) -> getPage
    214:215:void setFields(java.util.HashMap) -> setFields
    224:225:void setData(java.util.ArrayList) -> setData
    233:233:int getRecordNumber() -> getRecordNumber
    242:242:int getRecordCount() -> getRecordCount
    251:251:int getFieldCount() -> getFieldCount
    261:261:java.util.HashMap getFields() -> getFields
    270:270:java.util.ArrayList getData() -> getData
    285:287:void append(java.lang.String,java.lang.String,int) -> a
    303:342:void append(java.lang.String,int) -> append
    351:364:void addNew() -> addNew
    375:378:void setRecordNumber(int) -> setRecordNumber
    392:432:void setValue(java.lang.String,java.lang.Object) -> setValue
    446:466:java.lang.Object getValue(java.lang.String) -> getValue
    484:500:void loadRecords(java.sql.ResultSet) -> a
    584:588:boolean next() -> next
    597:615:java.lang.String toString() -> toString
    623:624:void top() -> top
    632:633:void first() -> first
    641:642:void last() -> last
    651:654:void delete(int) -> delete
    666:669:architecture.ee.jdbc.recordset.RecordsetField getField(java.lang.String) -> getField
    685:696:void copyValues(architecture.ee.jdbc.recordset.Recordset) -> copyValues
    707:711:java.lang.String getString(java.lang.String) -> getString
    723:725:java.util.Date getDate(java.lang.String) -> getDate
    737:738:double getDouble(java.lang.String) -> getDouble
    750:751:int getInt(java.lang.String) -> getInt
    763:764:java.lang.Integer getInteger(java.lang.String) -> getInteger
    778:781:boolean isNull(java.lang.String) -> isNull
    792:795:boolean containsField(java.lang.String) -> containsField
    809:823:void checkRecordPosition(int) -> a
    834:835:void checkRecordPosition() -> a
    846:849:void setChildrenRecordset(architecture.ee.jdbc.recordset.Recordset) -> setChildrenRecordset
    860:862:architecture.ee.jdbc.recordset.Recordset getChildrenRecordset() -> getChildrenRecordset
    876:890:void sort(java.lang.String) -> sort
    957:975:architecture.ee.jdbc.recordset.Recordset getMetaData() -> getMetaData
    988:1002:architecture.ee.jdbc.recordset.Recordset copyStructure() -> copyStructure
    1010:1016:void clear() -> clear
    1029:1035:int findRecord(java.lang.String,int) -> findRecord
    1053:1059:int findRecord(java.lang.String,java.lang.String) -> findRecord
    1078:1084:int findRecord(java.lang.String,java.util.Date) -> findRecord
    1101:1108:double getSUM(java.lang.String) -> getSUM
architecture.ee.jdbc.recordset.Recordset$Comp -> architecture.ee.jdbc.recordset.Recordset$a:
    long serialVersionUID -> serialVersionUID
    java.lang.String _sortCol -> a
    java.lang.String _sortMode -> b
    915:940:int compare(architecture.ee.jdbc.recordset.Record,architecture.ee.jdbc.recordset.Record) -> a
    895:895:int compare(java.lang.Object,java.lang.Object) -> compare
architecture.ee.jdbc.recordset.RecordsetException -> architecture.ee.jdbc.recordset.RecordsetException:
    long serialVersionUID -> serialVersionUID
architecture.ee.jdbc.recordset.RecordsetFactory -> architecture.ee.jdbc.recordset.RecordsetFactory:
    architecture.ee.jdbc.recordset.RecordsetFactory$Implementation impl -> a
    23:23:architecture.ee.jdbc.recordset.Recordset createRecordset(java.sql.ResultSet) -> createRecordset
    27:27:architecture.ee.jdbc.recordset.Recordset createRecordset() -> createRecordset
architecture.ee.jdbc.recordset.RecordsetFactory$Implementation -> architecture.ee.jdbc.recordset.RecordsetFactory$Implementation:
    architecture.ee.jdbc.recordset.Recordset createRecordset(java.sql.ResultSet) -> createRecordset
    architecture.ee.jdbc.recordset.Recordset createRecordset() -> createRecordset
architecture.ee.jdbc.recordset.RecordsetFactoryImpl -> architecture.ee.jdbc.recordset.RecordsetFactoryImpl:
    11:11:architecture.ee.jdbc.recordset.Recordset createRecordset(java.sql.ResultSet) -> createRecordset
    15:15:architecture.ee.jdbc.recordset.Recordset createRecordset() -> createRecordset
architecture.ee.jdbc.recordset.RecordsetField -> architecture.ee.jdbc.recordset.RecordsetField:
    long serialVersionUID -> serialVersionUID
    java.lang.String _name -> a
    java.lang.String _sqlTypeName -> b
    int _type -> a
    65:65:java.lang.String getName() -> getName
    72:72:java.lang.String getSqlTypeName() -> getSqlTypeName
    79:79:int getType() -> getType
architecture.ee.jdbc.schema.Column -> architecture.ee.jdbc.schema.Column:
    java.lang.String name -> a
    int type -> a
    14:14:java.lang.String getName() -> getName
    18:18:int getType() -> getType
    22:30:boolean equals(java.lang.Object) -> equals
    35:37:int hashCode() -> hashCode
architecture.ee.jdbc.schema.Database -> architecture.ee.jdbc.schema.Database:
    java.lang.String catalog -> a
    java.lang.String schema -> b
    java.util.Map tables -> a
    19:19:java.lang.String getCatalog() -> getCatalog
    23:23:java.lang.String getSchema() -> getSchema
    27:28:void addTable(architecture.ee.jdbc.schema.Table) -> addTable
    31:31:architecture.ee.jdbc.schema.Table getTable(java.lang.String) -> getTable
    35:35:java.lang.String[] getTableNames() -> getTableNames
    39:47:boolean equals(java.lang.Object) -> equals
    52:54:int hashCode() -> hashCode
architecture.ee.jdbc.schema.DatabaseFactory -> architecture.ee.jdbc.schema.DatabaseFactory:
    21:21:architecture.ee.jdbc.schema.Database newDatabase(java.sql.Connection,java.lang.String,java.lang.String) -> newDatabase
    27:77:architecture.ee.jdbc.schema.Database newDatabase(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String) -> newDatabase
architecture.ee.jdbc.schema.Table -> architecture.ee.jdbc.schema.Table:
    java.lang.String name -> a
    java.lang.String catalog -> b
    java.lang.String schema -> c
    java.util.Map columns -> a
    architecture.ee.jdbc.schema.Column primaryKey -> a
    18:18:java.lang.String getName() -> getName
    22:22:java.lang.String getCatalog() -> getCatalog
    26:27:void setCatalog(java.lang.String) -> setCatalog
    30:30:java.lang.String getSchema() -> getSchema
    34:35:void setSchema(java.lang.String) -> setSchema
    38:39:void addColumn(architecture.ee.jdbc.schema.Column) -> addColumn
    42:42:architecture.ee.jdbc.schema.Column getColumn(java.lang.String) -> getColumn
    46:46:java.lang.String[] getColumnNames() -> getColumnNames
    50:51:void setPrimaryKey(architecture.ee.jdbc.schema.Column) -> setPrimaryKey
    54:54:architecture.ee.jdbc.schema.Column getPrimaryKey() -> getPrimaryKey
    58:65:boolean equals(java.lang.Object) -> equals
    69:69:int hashCode() -> hashCode
architecture.ee.jdbc.sequencer.JdbcSequencerFactory -> architecture.ee.jdbc.sequencer.JdbcSequencerFactory:
    architecture.ee.jdbc.query.factory.Configuration configuration -> a
    javax.sql.DataSource dataSource -> a
    36:36:architecture.ee.jdbc.query.factory.Configuration getConfiguration() -> getConfiguration
    40:41:void setConfiguration(architecture.ee.jdbc.query.factory.Configuration) -> setConfiguration
    44:47:boolean isSetDataSource() -> isSetDataSource
    51:52:void setDataSource(javax.sql.DataSource) -> setDataSource
    55:60:architecture.ee.jdbc.sequencer.internal.JdbcSequencer createJdbcSequencer(int,java.lang.String,int) -> createJdbcSequencer
    66:92:java.util.Map getAllSequencer() -> getAllSequencer
architecture.ee.jdbc.sequencer.JdbcSequencerFactory$1 -> architecture.ee.jdbc.sequencer.JdbcSequencerFactory$a:
    70:70:java.lang.Object extractData(java.sql.ResultSet) -> extractData
architecture.ee.jdbc.sequencer.Sequencer -> architecture.ee.jdbc.sequencer.Sequencer:
    java.lang.String getName() -> getName
    long getNext() -> getNext
    int getBlockSize() -> getBlockSize
    void setBlockSize(int) -> setBlockSize
architecture.ee.jdbc.sequencer.dao.JdbcSequenceDao -> architecture.ee.jdbc.sequencer.dao.JdbcSequenceDao:
    architecture.ee.jdbc.sequencer.JdbcSequencerFactory factory -> a
    java.util.Map sequencers -> a
    19:20:void initialize() -> initialize
    23:23:long nextID(int) -> nextID
    27:34:long nextID(java.lang.String) -> nextID
    38:38:long currentID(java.lang.String) -> currentID
architecture.ee.jdbc.sequencer.dao.SequenceDao -> architecture.ee.jdbc.sequencer.dao.SequenceDao:
    long nextID(int) -> nextID
    long nextID(java.lang.String) -> nextID
    long currentID(java.lang.String) -> currentID
architecture.ee.jdbc.sequencer.internal.JdbcSequencer -> architecture.ee.jdbc.sequencer.internal.JdbcSequencer:
    int type -> a
    java.lang.String name -> a
    long currentID -> a
    long maxID -> b
    int blockSize -> b
    39:39:int getSequencerId() -> getSequencerId
    44:44:java.lang.String getName() -> getName
    48:49:void setName(java.lang.String) -> setName
    52:52:int getBlockSize() -> getBlockSize
    56:57:void setBlockSize(int) -> setBlockSize
    64:69:long getNext() -> getNext
    134:135:boolean equals(java.lang.Object) -> equals
architecture.ee.jdbc.util.JdbcHelper -> architecture.ee.jdbc.util.JdbcHelper:
    boolean isBatchUpdatesSupported() -> isBatchUpdatesSupported
    java.lang.String getDatabaseProductName() -> getDatabaseProductName
    java.lang.String getDatabaseProductVersion() -> getDatabaseProductVersion
    architecture.ee.jdbc.util.JdbcHelper$DatabaseType getDatabaseType() -> getDatabaseType
    boolean isDeleteSubqueriesSupported() -> isDeleteSubqueriesSupported
    boolean isFetchSizeSupported() -> isFetchSizeSupported
    java.lang.String getJdbcDriverName() -> getJdbcDriverName
    java.lang.String getJdbcDriverVersion() -> getJdbcDriverVersion
    boolean isMaxRowsSupported() -> isMaxRowsSupported
    boolean isScrollResultsSupported() -> isScrollResultsSupported
    boolean isStreamBlobRequired() -> isStreamBlobRequired
    boolean isStreamTextRequired() -> isStreamTextRequired
    boolean isSubqueriesSupported() -> isSubqueriesSupported
    int getTransactionIsolation() -> getTransactionIsolation
    boolean isTransactionsSupported() -> isTransactionsSupported
    java.sql.PreparedStatement createScrollablePreparedStatement(java.sql.Connection,java.lang.String) -> createScrollablePreparedStatement
    void setFetchSize(java.sql.ResultSet,int) -> setFetchSize
    void scrollResultSet(java.sql.ResultSet,int) -> scrollResultSet
architecture.ee.jdbc.util.JdbcHelper$DatabaseType -> architecture.ee.jdbc.util.JdbcHelper$DatabaseType:
    architecture.ee.jdbc.util.JdbcHelper$DatabaseType oracle -> oracle
    architecture.ee.jdbc.util.JdbcHelper$DatabaseType postgresql -> postgresql
    architecture.ee.jdbc.util.JdbcHelper$DatabaseType mysql -> mysql
    architecture.ee.jdbc.util.JdbcHelper$DatabaseType hsqldb -> hsqldb
    architecture.ee.jdbc.util.JdbcHelper$DatabaseType db2 -> db2
    architecture.ee.jdbc.util.JdbcHelper$DatabaseType sqlserver -> sqlserver
    architecture.ee.jdbc.util.JdbcHelper$DatabaseType interbase -> interbase
    architecture.ee.jdbc.util.JdbcHelper$DatabaseType derby -> derby
    architecture.ee.jdbc.util.JdbcHelper$DatabaseType unknown -> unknown
    architecture.ee.jdbc.util.JdbcHelper$DatabaseType[] $VALUES -> a
    25:25:architecture.ee.jdbc.util.JdbcHelper$DatabaseType[] values() -> values
    25:25:architecture.ee.jdbc.util.JdbcHelper$DatabaseType valueOf(java.lang.String) -> valueOf
architecture.ee.jdbc.util.JdbcHelperFactory -> architecture.ee.jdbc.util.JdbcHelperFactory:
    architecture.ee.jdbc.util.JdbcHelperFactory$Implementation impl -> a
    39:39:architecture.ee.jdbc.util.JdbcHelper getJdbcHelper() -> getJdbcHelper
    48:48:architecture.ee.jdbc.util.JdbcHelper getJdbcHelper(javax.sql.DataSource) -> getJdbcHelper
architecture.ee.jdbc.util.JdbcHelperFactory$Implementation -> architecture.ee.jdbc.util.JdbcHelperFactory$Implementation:
    architecture.ee.jdbc.util.JdbcHelper getJdbcHelper(javax.sql.DataSource) -> getJdbcHelper
    architecture.ee.jdbc.util.JdbcHelper getJdbcHelper() -> getJdbcHelper
architecture.ee.jdbc.util.ScriptRunner -> architecture.ee.jdbc.util.ScriptRunner:
    java.lang.String LINE_SEPARATOR -> a
    java.sql.Connection connection -> a
    boolean stopOnError -> a
    boolean autoCommit -> b
    boolean sendFullScript -> c
    java.io.PrintWriter logWriter -> a
    java.io.PrintWriter errorLogWriter -> b
    java.lang.String delimiter -> b
    boolean fullLineDelimiter -> d
    java.lang.String characterSetName -> c
    55:56:void setCharacterSetName(java.lang.String) -> setCharacterSetName
    59:60:void setStopOnError(boolean) -> setStopOnError
    63:64:void setAutoCommit(boolean) -> setAutoCommit
    67:68:void setSendFullScript(boolean) -> setSendFullScript
    71:72:void setLogWriter(java.io.PrintWriter) -> setLogWriter
    75:76:void setErrorLogWriter(java.io.PrintWriter) -> setErrorLogWriter
    79:80:void setDelimiter(java.lang.String) -> setDelimiter
    83:84:void setFullLineDelimiter(boolean) -> setFullLineDelimiter
    87:96:void runScript(java.io.Reader) -> runScript
    101:114:void executeFullScript(java.io.Reader) -> a
    119:131:void executeLineByLine(java.io.Reader) -> b
    137:141:void closeConnection() -> closeConnection
    156:160:void commitConnection() -> a
    167:173:void rollbackConnection() -> b
    212:234:void executeStatement(java.lang.String) -> a
    238:260:void printResults(java.sql.Statement,boolean) -> a
    263:267:void print(java.lang.Object) -> a
    270:274:void println(java.lang.Object) -> b
    277:281:void printlnError(java.lang.Object) -> c
architecture.ee.model.BaseModel -> architecture.ee.model.BaseModel:
    long getPrimaryKey() -> getPrimaryKey
    java.lang.Object clone() -> clone
    java.lang.String toXmlString() -> toXmlString
architecture.ee.model.CountryModel -> architecture.ee.model.CountryModel:
    java.lang.String getName() -> getName
    void setCountryId(long) -> setCountryId
    long getCountryId() -> getCountryId
    void setName(java.lang.String) -> setName
    java.lang.String getA2() -> getA2
    void setA2(java.lang.String) -> setA2
    java.lang.String getA3() -> getA3
    void setA3(java.lang.String) -> setA3
    java.lang.String getNumber() -> getNumber
    void setNumber(java.lang.String) -> setNumber
    java.lang.String getIdd() -> getIdd
    void setIdd(java.lang.String) -> setIdd
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
architecture.ee.model.GroupModel -> architecture.ee.model.GroupModel:
    long getGroupId() -> getGroupId
    void setGroupId(long) -> setGroupId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.util.Date getCreationDate() -> getCreationDate
    void setCreationDate(java.util.Date) -> setCreationDate
    java.util.Date getModifiedDate() -> getModifiedDate
    void setModifiedDate(java.util.Date) -> setModifiedDate
    java.util.Map getProperties() -> getProperties
    void setProperties(java.util.Map) -> setProperties
    java.util.List getAdministratorIds() -> getAdministratorIds
    void setAdministratorIds(java.util.List) -> setAdministratorIds
    java.util.List getMemberIds() -> getMemberIds
    void setMemberIds(java.util.List) -> setMemberIds
    boolean isMember(architecture.ee.user.User) -> isMember
    boolean isAdministrator(architecture.ee.user.User) -> isAdministrator
architecture.ee.model.I18nLocaleModel -> architecture.ee.model.I18nLocaleModel:
    long getLocaleId() -> getLocaleId
    void setLocaleId(long) -> setLocaleId
    java.lang.String getLanguage() -> getLanguage
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String getCountry() -> getCountry
    void setCountry(java.lang.String) -> setCountry
    java.lang.String getEncoding() -> getEncoding
    void setEncoding(java.lang.String) -> setEncoding
    java.util.Date getCreationDate() -> getCreationDate
    void setCreationDate(java.util.Date) -> setCreationDate
    java.util.Date getModifiedDate() -> getModifiedDate
    void setModifiedDate(java.util.Date) -> setModifiedDate
    java.lang.String getVariant() -> getVariant
    void setVariant(java.lang.String) -> setVariant
    java.util.Locale toJavaLocale() -> toJavaLocale
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
architecture.ee.model.I18nTextModel -> architecture.ee.model.I18nTextModel:
    long getTextId() -> getTextId
    void setTextId(long) -> setTextId
    int getObjectType() -> getObjectType
    void setObjectType(int) -> setObjectType
    long getObjectId() -> getObjectId
    void setObjectId(long) -> setObjectId
    int getObjectAttribute() -> getObjectAttribute
    void setObjectAttribute(int) -> setObjectAttribute
    java.lang.String getTextKey() -> getTextKey
    void setTextKey(java.lang.String) -> setTextKey
    java.lang.String getLocaleCode() -> getLocaleCode
    void setLocaleCode(java.lang.String) -> setLocaleCode
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    java.util.Date getCreationDate() -> getCreationDate
    void setCreationDate(java.util.Date) -> setCreationDate
    java.util.Date getModifiedDate() -> getModifiedDate
    void setModifiedDate(java.util.Date) -> setModifiedDate
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String getResourceBundleKey() -> getResourceBundleKey
architecture.ee.model.PermissionMaskModel -> architecture.ee.model.PermissionMaskModel:
    java.lang.String getName() -> getName
    int getMask() -> getMask
    void setName(java.lang.String) -> setName
    void setMask(int) -> setMask
architecture.ee.model.PermissionModel -> architecture.ee.model.PermissionModel:
    int getObjectType() -> getObjectType
    long getObjectId() -> getObjectId
    int getPermission() -> getPermission
    void setObjectType(int) -> setObjectType
    void setObjectId(long) -> setObjectId
    void setPermission(int) -> setPermission
architecture.ee.model.ProfileFieldModel -> architecture.ee.model.ProfileFieldModel:
    java.lang.String getDisplayNameKey() -> getDisplayNameKey
    void setDisplayNameKey(java.lang.String) -> setDisplayNameKey
    java.lang.String getDescriptionKey() -> getDescriptionKey
    void setDescriptionKey(java.lang.String) -> setDescriptionKey
    java.lang.String getDisplayName(java.lang.String) -> getDisplayName
    void setDisplayName(java.lang.String,java.lang.String) -> setDisplayName
    java.lang.String getDescription(java.lang.String) -> getDescription
    void setDescription(java.lang.String,java.lang.String) -> setDescription
    long getFieldId() -> getFieldId
    void setFieldId(long) -> setFieldId
    int getFieldTypeId() -> getFieldTypeId
    void setFieldTypeId(int) -> setFieldTypeId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getIndex() -> getIndex
    void setIndex(int) -> setIndex
    int getRegistrationIndex() -> getRegistrationIndex
    void setRegistrationIndex(int) -> setRegistrationIndex
    boolean isDefaultField() -> isDefaultField
    void setDefaultField(boolean) -> setDefaultField
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    boolean isEditable() -> isEditable
    void setEditable(boolean) -> setEditable
    boolean isRequired() -> isRequired
    void setRequired(boolean) -> setRequired
    boolean isFilterable() -> isFilterable
    void setFilterable(boolean) -> setFilterable
    boolean isSearchable() -> isSearchable
    void setSearchable(boolean) -> setSearchable
    java.lang.String getExternalMappingString() -> getExternalMappingString
    void setExternalMappingString(java.lang.String) -> setExternalMappingString
    java.util.Map getExternalMapping() -> getExternalMapping
    java.util.List getExternalMappings() -> getExternalMappings
    void setExternalMapping(java.util.Map) -> setExternalMapping
    void setExternalMappings(java.util.List) -> setExternalMappings
    void setSingleExternalMapping(java.lang.String) -> setSingleExternalMapping
    void setSingleExternalMappings(java.util.List) -> setSingleExternalMappings
    java.lang.String getSingleExternalMapping() -> getSingleExternalMapping
    java.util.List getSingleExternalMappings() -> getSingleExternalMappings
    boolean hasExternalMapping() -> hasExternalMapping
    boolean hasSingleExternalMapping() -> hasSingleExternalMapping
    boolean isExternallyManaged() -> isExternallyManaged
    void setExternallyManaged(boolean) -> setExternallyManaged
    boolean isListValues() -> isListValues
    void setListValues(boolean) -> setListValues
    java.util.List getOptions() -> getOptions
    void setOptions(java.util.List) -> setOptions
    java.util.List getProfileFieldText() -> getProfileFieldText
    void setProfileFieldText(java.util.List) -> setProfileFieldText
architecture.ee.model.ProfileFieldOptionModel -> architecture.ee.model.ProfileFieldOptionModel:
    long getFieldId() -> getFieldId
    void setFieldId(long) -> setFieldId
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    int getIndex() -> getIndex
    void setIndex(int) -> setIndex
    boolean isDefaultOption() -> isDefaultOption
    void setDefaultOption(boolean) -> setDefaultOption
architecture.ee.model.ProfileFieldValueModel -> architecture.ee.model.ProfileFieldValueModel:
    long getFieldId() -> getFieldId
    void setFieldId(long) -> setFieldId
    int getFieldTypeId() -> getFieldTypeId
    void setFieldTypeId(int) -> setFieldTypeId
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    boolean isPrimaryValue() -> isPrimaryValue
    boolean isList() -> isList
    void setList(boolean) -> setList
    java.util.List getValues() -> getValues
    void setObjectValues(java.util.List) -> setObjectValues
    java.util.List getObjectValues() -> getObjectValues
    void setValues(java.util.List) -> setValues
    void setValues(java.util.List,int) -> setValues
    java.lang.String getSimpleValue() -> getSimpleValue
    java.lang.Object getObjectValue() -> getObjectValue
    void setObjectValue(java.lang.Object) -> setObjectValue
    int getPrimaryIndex() -> getPrimaryIndex
    void setPrimaryIndex(int) -> setPrimaryIndex
    boolean isValueEqual(architecture.ee.user.profile.ProfileFieldValue) -> isValueEqual
architecture.ee.model.RoleModel -> architecture.ee.model.RoleModel:
    long getRoleId() -> getRoleId
    void setRoleId(long) -> setRoleId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.util.Date getCreationDate() -> getCreationDate
    java.util.Date getModifiedDate() -> getModifiedDate
    void setCreationDate(java.util.Date) -> setCreationDate
    void setModifiedDate(java.util.Date) -> setModifiedDate
architecture.ee.model.UserModel -> architecture.ee.model.UserModel:
    java.lang.String EMAIL_VISIBILITY_DEFAULT -> EMAIL_VISIBILITY_DEFAULT
    java.lang.String EMAIL_VISIBILITY_ALLOW_TOGGLE -> EMAIL_VISIBILITY_ALLOW_TOGGLE
    java.lang.String NAME_VISIBILITY_ALLOW_TOGGLE -> NAME_VISIBILITY_ALLOW_TOGGLE
    long getUserId() -> getUserId
    java.lang.String getUsername() -> getUsername
    java.lang.String getName() -> getName
    java.lang.String getFirstName() -> getFirstName
    java.lang.String getLastName() -> getLastName
    boolean isNameVisible() -> isNameVisible
    java.lang.String getPasswordHash() -> getPasswordHash
    java.lang.String getPassword() -> getPassword
    java.lang.String getEmail() -> getEmail
    boolean isEmailVisible() -> isEmailVisible
    java.util.Date getCreationDate() -> getCreationDate
    java.util.Date getModifiedDate() -> getModifiedDate
    java.util.Map getProperties() -> getProperties
    java.util.Date getLastLoggedIn() -> getLastLoggedIn
    java.util.Date getLastProfileUpdate() -> getLastProfileUpdate
    boolean isEnabled() -> isEnabled
    boolean isFederated() -> isFederated
    boolean isExternal() -> isExternal
    boolean isSetPasswordSupported() -> isSetPasswordSupported
    boolean isGetPasswordHashSupported() -> isGetPasswordHashSupported
    boolean isSetPasswordHashSupported() -> isSetPasswordHashSupported
    boolean isSetNameSupported() -> isSetNameSupported
    boolean isSetUsernameSupported() -> isSetUsernameSupported
    boolean isSetEmailSupported() -> isSetEmailSupported
    boolean isSetNameVisibleSupported() -> isSetNameVisibleSupported
    boolean isSetEmailVisibleSupported() -> isSetEmailVisibleSupported
    boolean isPropertyEditSupported() -> isPropertyEditSupported
    architecture.ee.model.UserModel$Status getStatus() -> getStatus
    boolean isAnonymous() -> isAnonymous
architecture.ee.model.UserModel$Status -> architecture.ee.model.UserModel$Status:
    architecture.ee.model.UserModel$Status none -> none
    architecture.ee.model.UserModel$Status approved -> approved
    architecture.ee.model.UserModel$Status rejected -> rejected
    architecture.ee.model.UserModel$Status validated -> validated
    architecture.ee.model.UserModel$Status registered -> registered
    int id -> a
    architecture.ee.model.UserModel$Status[] $VALUES -> a
    11:11:architecture.ee.model.UserModel$Status[] values() -> values
    11:11:architecture.ee.model.UserModel$Status valueOf(java.lang.String) -> valueOf
    22:22:int getId() -> getId
    31:35:architecture.ee.model.UserModel$Status getById(int) -> getById
architecture.ee.model.UserProfileModel -> architecture.ee.model.UserProfileModel:
    long getFieldId() -> getFieldId
    int getFieldType() -> getFieldType
    java.lang.String getValueString() -> getValueString
architecture.ee.model.internal.BaseModelImpl -> architecture.ee.model.internal.BaseModelImpl:
    java.lang.Object clone() -> clone
    void setPrimaryKey(long) -> setPrimaryKey
architecture.ee.model.internal.CountryModelImpl -> architecture.ee.model.internal.CountryModelImpl:
    long countryId -> a
    java.lang.String name -> a
    java.lang.String a2 -> b
    java.lang.String a3 -> c
    java.lang.String number -> d
    java.lang.String idd -> e
    boolean enabled -> a
    16:16:long getPrimaryKey() -> getPrimaryKey
    20:21:void setPrimaryKey(long) -> setPrimaryKey
    24:24:long getCountryId() -> getCountryId
    27:28:void setCountryId(long) -> setCountryId
    30:30:java.lang.String getName() -> getName
    33:34:void setName(java.lang.String) -> setName
    36:36:java.lang.String getA2() -> getA2
    39:40:void setA2(java.lang.String) -> setA2
    42:42:java.lang.String getA3() -> getA3
    45:46:void setA3(java.lang.String) -> setA3
    48:48:java.lang.String getNumber() -> getNumber
    51:52:void setNumber(java.lang.String) -> setNumber
    54:54:java.lang.String getIdd() -> getIdd
    57:58:void setIdd(java.lang.String) -> setIdd
    60:60:boolean isEnabled() -> isEnabled
    63:64:void setEnabled(boolean) -> setEnabled
    67:76:int compareTo(architecture.ee.g11n.Country) -> compareTo
    82:82:int hashCode() -> hashCode
    86:87:java.lang.Object clone() -> clone
    91:105:java.lang.String toString() -> toString
    109:109:java.lang.String toXmlString() -> toXmlString
    5:5:int compareTo(java.lang.Object) -> compareTo
architecture.ee.model.internal.GroupModelImpl -> architecture.ee.model.internal.GroupModelImpl:
    long groupId -> a
    java.lang.String name -> a
    java.lang.String description -> b
    java.util.Map properties -> a
    java.util.Date creationDate -> a
    java.util.Date modifiedDate -> b
    java.util.List administrators -> a
    java.util.List members -> b
    41:41:java.util.List getAdministratorIds() -> getAdministratorIds
    45:46:void setAdministratorIds(java.util.List) -> setAdministratorIds
    49:49:java.util.List getMemberIds() -> getMemberIds
    53:54:void setMemberIds(java.util.List) -> setMemberIds
    57:58:void setGroupId(long) -> setGroupId
    61:62:void setProperties(java.util.Map) -> setProperties
    65:65:long getGroupId() -> getGroupId
    69:69:java.lang.String getName() -> getName
    73:78:void setName(java.lang.String) -> setName
    81:81:java.lang.String getDescription() -> getDescription
    85:90:void setDescription(java.lang.String) -> setDescription
    93:93:java.util.Date getCreationDate() -> getCreationDate
    97:98:void setCreationDate(java.util.Date) -> setCreationDate
    102:102:java.util.Date getModifiedDate() -> getModifiedDate
    106:107:void setModifiedDate(java.util.Date) -> setModifiedDate
    110:116:java.util.Map getProperties() -> getProperties
    120:120:long getPrimaryKey() -> getPrimaryKey
    124:124:java.lang.String toXmlString() -> toXmlString
    128:128:int compareTo(architecture.ee.user.Group) -> compareTo
    132:137:boolean equals(java.lang.Object) -> equals
    142:142:java.lang.Object clone() -> clone
    147:148:void setPrimaryKey(long) -> setPrimaryKey
    152:152:int hashCode() -> hashCode
    160:160:boolean isMember(architecture.ee.user.User) -> isMember
    164:164:boolean isAdministrator(architecture.ee.user.User) -> isAdministrator
    14:14:int compareTo(java.lang.Object) -> compareTo
architecture.ee.model.internal.I18nLocaleModelImpl -> architecture.ee.model.internal.I18nLocaleModelImpl:
    long localeId -> a
    java.lang.String language -> a
    java.lang.String country -> b
    java.lang.String encoding -> c
    java.lang.String variant -> d
    java.util.Date creationDate -> a
    java.util.Date modifiedDate -> b
    19:19:long getPrimaryKey() -> getPrimaryKey
    23:24:void setPrimaryKey(long) -> setPrimaryKey
    27:27:long getLocaleId() -> getLocaleId
    30:31:void setLocaleId(long) -> setLocaleId
    33:33:java.lang.String getLanguage() -> getLanguage
    36:37:void setLanguage(java.lang.String) -> setLanguage
    39:39:java.lang.String getCountry() -> getCountry
    42:43:void setCountry(java.lang.String) -> setCountry
    45:45:java.lang.String getEncoding() -> getEncoding
    48:49:void setEncoding(java.lang.String) -> setEncoding
    51:51:java.lang.String getVariant() -> getVariant
    54:55:void setVariant(java.lang.String) -> setVariant
    57:57:java.util.Date getCreationDate() -> getCreationDate
    60:61:void setCreationDate(java.util.Date) -> setCreationDate
    63:63:java.util.Date getModifiedDate() -> getModifiedDate
    66:67:void setModifiedDate(java.util.Date) -> setModifiedDate
    70:79:int compareTo(architecture.ee.g11n.I18nLocale) -> compareTo
    84:84:java.util.Locale toJavaLocale() -> toJavaLocale
    88:88:int hashCode() -> hashCode
    92:100:java.lang.Object clone() -> clone
    104:118:java.lang.String toString() -> toString
    122:122:java.lang.String toXmlString() -> toXmlString
    8:8:int compareTo(java.lang.Object) -> compareTo
architecture.ee.model.internal.I18nTextModelImpl -> architecture.ee.model.internal.I18nTextModelImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String localeCode -> a
    int objectAttribute -> a
    int objectType -> b
    long objectId -> a
    long textId -> b
    java.lang.String textKey -> b
    java.lang.String textValue -> c
    java.util.Date creationDate -> a
    java.util.Date modifiedDate -> b
    27:27:long getObjectId() -> getObjectId
    31:32:void setObjectId(long) -> setObjectId
    35:35:int getObjectAttribute() -> getObjectAttribute
    39:40:void setObjectAttribute(int) -> setObjectAttribute
    43:43:int getObjectType() -> getObjectType
    47:48:void setObjectType(int) -> setObjectType
    51:51:long getPrimaryKey() -> getPrimaryKey
    55:56:void setPrimaryKey(long) -> setPrimaryKey
    59:59:java.lang.String getLocaleCode() -> getLocaleCode
    62:63:void setLocaleCode(java.lang.String) -> setLocaleCode
    65:65:long getTextId() -> getTextId
    68:69:void setTextId(long) -> setTextId
    71:71:java.lang.String getTextKey() -> getTextKey
    74:75:void setTextKey(java.lang.String) -> setTextKey
    77:77:java.lang.String getText() -> getText
    80:81:void setText(java.lang.String) -> setText
    83:83:java.util.Date getCreationDate() -> getCreationDate
    86:87:void setCreationDate(java.util.Date) -> setCreationDate
    89:89:java.util.Date getModifiedDate() -> getModifiedDate
    92:93:void setModifiedDate(java.util.Date) -> setModifiedDate
    96:105:int compareTo(architecture.ee.g11n.I18nText) -> compareTo
    110:120:java.lang.Object clone() -> clone
    124:124:java.lang.String toXmlString() -> toXmlString
    128:128:java.lang.String getResourceBundleKey() -> getResourceBundleKey
    8:8:int compareTo(java.lang.Object) -> compareTo
architecture.ee.model.internal.PermissionMaskModelImpl -> architecture.ee.model.internal.PermissionMaskModelImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> a
    int mask -> a
    15:15:java.lang.String getName() -> getName
    18:19:void setName(java.lang.String) -> setName
    21:21:int getMask() -> getMask
    24:25:void setMask(int) -> setMask
    27:27:long getPrimaryKey() -> getPrimaryKey
    30:30:java.lang.String toXmlString() -> toXmlString
    35:35:java.lang.Object clone() -> clone
    39:39:void setPrimaryKey(long) -> setPrimaryKey
    41:41:int compareTo(architecture.ee.security.PermissionMask) -> compareTo
    5:5:int compareTo(java.lang.Object) -> compareTo
architecture.ee.model.internal.PermissionModelImpl -> architecture.ee.model.internal.PermissionModelImpl:
    long serialVersionUID -> serialVersionUID
    long objectId -> a
    int objectType -> a
    int permission -> b
    16:16:long getObjectId() -> getObjectId
    19:20:void setObjectId(long) -> setObjectId
    22:22:int getObjectType() -> getObjectType
    25:26:void setObjectType(int) -> setObjectType
    28:28:int getPermission() -> getPermission
    31:32:void setPermission(int) -> setPermission
    34:34:long getPrimaryKey() -> getPrimaryKey
    37:37:java.lang.String toXmlString() -> toXmlString
    40:40:int compareTo(architecture.ee.security.Permission) -> compareTo
    44:44:java.lang.Object clone() -> clone
    48:48:void setPrimaryKey(long) -> setPrimaryKey
    5:5:int compareTo(java.lang.Object) -> compareTo
architecture.ee.model.internal.ProfileFieldModelImpl -> architecture.ee.model.internal.ProfileFieldModelImpl:
    java.lang.String displayNameKey -> a
    java.lang.String descriptionKey -> b
    long fieldId -> a
    int fieldTypeId -> a
    java.lang.String name -> c
    int index -> b
    int registrationIndex -> c
    boolean defaultField -> a
    boolean visible -> b
    boolean editable -> c
    boolean required -> d
    boolean filterable -> e
    boolean searchable -> f
    java.lang.String externalMapping -> d
    boolean externallyManaged -> g
    boolean listValues -> h
    java.util.List options -> a
    java.util.List profileFieldText -> b
    45:47:void initKeys() -> initKeys
    51:51:java.util.List getProfileFieldText() -> getProfileFieldText
    56:57:void setProfileFieldText(java.util.List) -> setProfileFieldText
    61:62:void setOptions(java.util.List) -> setOptions
    66:68:java.util.List getOptions() -> getOptions
    73:73:java.lang.String getDisplayNameKey() -> getDisplayNameKey
    78:79:void setDisplayNameKey(java.lang.String) -> setDisplayNameKey
    83:83:java.lang.String getDescriptionKey() -> getDescriptionKey
    88:89:void setDescriptionKey(java.lang.String) -> setDescriptionKey
    93:93:long getFieldId() -> getFieldId
    98:100:void setFieldId(long) -> setFieldId
    104:104:int getFieldTypeId() -> getFieldTypeId
    109:110:void setFieldTypeId(int) -> setFieldTypeId
    114:114:java.lang.String getName() -> getName
    119:120:void setName(java.lang.String) -> setName
    124:124:int getIndex() -> getIndex
    129:130:void setIndex(int) -> setIndex
    134:134:int getRegistrationIndex() -> getRegistrationIndex
    139:140:void setRegistrationIndex(int) -> setRegistrationIndex
    144:144:boolean isDefaultField() -> isDefaultField
    149:150:void setDefaultField(boolean) -> setDefaultField
    154:154:boolean isVisible() -> isVisible
    159:160:void setVisible(boolean) -> setVisible
    164:164:boolean isEditable() -> isEditable
    169:170:void setEditable(boolean) -> setEditable
    174:174:boolean isRequired() -> isRequired
    179:180:void setRequired(boolean) -> setRequired
    184:184:boolean isFilterable() -> isFilterable
    189:190:void setFilterable(boolean) -> setFilterable
    194:194:boolean isSearchable() -> isSearchable
    199:200:void setSearchable(boolean) -> setSearchable
    204:204:java.lang.String getExternalMappingString() -> getExternalMappingString
    209:210:void setExternalMappingString(java.lang.String) -> setExternalMappingString
    215:218:java.util.Map getExternalMapping() -> getExternalMapping
    223:226:java.util.List getExternalMappings() -> getExternalMappings
    231:237:void setExternalMapping(java.util.Map) -> setExternalMapping
    243:249:void setExternalMappings(java.util.List) -> setExternalMappings
    255:263:void setSingleExternalMapping(java.lang.String) -> setSingleExternalMapping
    269:278:void setSingleExternalMappings(java.util.List) -> setSingleExternalMappings
    282:282:java.lang.String getSingleExternalMapping() -> getSingleExternalMapping
    287:291:java.util.List getSingleExternalMappings() -> getSingleExternalMappings
    296:296:boolean hasExternalMapping() -> hasExternalMapping
    301:304:boolean hasSingleExternalMapping() -> hasSingleExternalMapping
    309:309:boolean isExternallyManaged() -> isExternallyManaged
    314:315:void setExternallyManaged(boolean) -> setExternallyManaged
    319:319:boolean isListValues() -> isListValues
    324:325:void setListValues(boolean) -> setListValues
    329:329:long getPrimaryKey() -> getPrimaryKey
    333:333:java.lang.String toXmlString() -> toXmlString
    337:337:int compareTo(architecture.ee.user.profile.ProfileField) -> compareTo
    342:342:java.lang.Object clone() -> clone
    347:348:void setPrimaryKey(long) -> setPrimaryKey
    357:367:java.lang.String flattenExternalMappings(java.util.List) -> a
    377:389:java.lang.String flattenExternalMapping(java.util.Map) -> a
    403:411:java.util.List parseExternalMappings(java.lang.String) -> a
    422:433:java.util.Map parseExternalMapping(java.lang.String) -> a
    437:441:java.lang.String getDisplayName(java.lang.String) -> getDisplayName
    445:446:void setDisplayName(java.lang.String,java.lang.String) -> setDisplayName
    449:453:java.lang.String getDescription(java.lang.String) -> getDescription
    457:458:void setDescription(java.lang.String,java.lang.String) -> setDescription
    15:15:int compareTo(java.lang.Object) -> compareTo
architecture.ee.model.internal.ProfileFieldOptionModelImpl -> architecture.ee.model.internal.ProfileFieldOptionModelImpl:
    long fieldID -> a
    java.lang.String value -> a
    int index -> a
    boolean defaultOption -> a
    16:16:long getFieldId() -> getFieldId
    21:22:void setFieldId(long) -> setFieldId
    26:26:java.lang.String getValue() -> getValue
    31:32:void setValue(java.lang.String) -> setValue
    36:36:int getIndex() -> getIndex
    41:42:void setIndex(int) -> setIndex
    46:46:boolean isDefaultOption() -> isDefaultOption
    51:52:void setDefaultOption(boolean) -> setDefaultOption
    55:55:long getPrimaryKey() -> getPrimaryKey
    59:59:java.lang.String toXmlString() -> toXmlString
    63:63:int compareTo(architecture.ee.user.profile.ProfileFieldOption) -> compareTo
    69:69:java.lang.Object clone() -> clone
    74:75:void setPrimaryKey(long) -> setPrimaryKey
    6:6:int compareTo(java.lang.Object) -> compareTo
architecture.ee.model.internal.ProfileFieldValueModelImpl -> architecture.ee.model.internal.ProfileFieldValueModelImpl:
    org.apache.commons.logging.Log log -> a
    int primaryIndex -> a
    long fieldId -> a
    int fieldType -> b
    java.lang.String value -> a
    boolean isList -> a
    java.util.List values -> a
    49:49:long getFieldId() -> getFieldId
    53:59:void setFieldId(long) -> setFieldId
    64:64:int getFieldTypeId() -> getFieldTypeId
    68:74:void setFieldTypeId(int) -> setFieldTypeId
    79:79:java.util.List getValues() -> getValues
    83:84:void setObjectValues(java.util.List) -> setObjectValues
    88:106:void setObjectValues(java.util.List,int) -> setObjectValues
    111:128:java.util.List getObjectValues() -> getObjectValues
    134:135:void setValues(java.util.List) -> setValues
    139:146:void setValues(java.util.List,int) -> setValues
    152:152:java.lang.String getValue() -> getValue
    157:160:java.lang.String getSimpleValue() -> getSimpleValue
    165:171:void setValue(java.lang.String) -> setValue
    178:188:java.lang.Object getObjectValue() -> getObjectValue
    193:201:void setObjectValue(java.lang.Object) -> setObjectValue
    207:207:int getPrimaryIndex() -> getPrimaryIndex
    211:212:void setPrimaryIndex(int) -> setPrimaryIndex
    215:215:boolean isPrimaryValue() -> isPrimaryValue
    224:224:boolean isList() -> isList
    228:229:void setList(boolean) -> setList
    234:238:architecture.ee.user.profile.TypeConverter getTypeConverter() -> a
    243:246:void assertTypeConfigured() -> a
    252:267:boolean isValueEqual(architecture.ee.user.profile.ProfileFieldValue) -> isValueEqual
    272:272:long getPrimaryKey() -> getPrimaryKey
    276:276:java.lang.String toXmlString() -> toXmlString
    280:280:int compareTo(architecture.ee.user.profile.ProfileFieldValue) -> compareTo
    285:285:java.lang.Object clone() -> clone
    290:290:void setPrimaryKey(long) -> setPrimaryKey
    14:14:int compareTo(java.lang.Object) -> compareTo
architecture.ee.model.internal.RoleModelImpl -> architecture.ee.model.internal.RoleModelImpl:
    long roleId -> a
    java.lang.String name -> a
    java.lang.String description -> b
    java.util.Date creationDate -> a
    java.util.Date modifiedDate -> b
    17:17:long getRoleId() -> getRoleId
    21:22:void setRoleId(long) -> setRoleId
    25:25:java.lang.String getName() -> getName
    29:30:void setName(java.lang.String) -> setName
    33:33:java.lang.String getDescription() -> getDescription
    37:38:void setDescription(java.lang.String) -> setDescription
    41:41:java.util.Date getCreationDate() -> getCreationDate
    45:46:void setCreationDate(java.util.Date) -> setCreationDate
    49:49:java.util.Date getModifiedDate() -> getModifiedDate
    53:54:void setModifiedDate(java.util.Date) -> setModifiedDate
    57:57:long getPrimaryKey() -> getPrimaryKey
    61:61:java.lang.String toXmlString() -> toXmlString
    65:65:int compareTo(architecture.ee.security.role.Role) -> compareTo
    70:70:java.lang.Object clone() -> clone
    75:76:void setPrimaryKey(long) -> setPrimaryKey
    7:7:int compareTo(java.lang.Object) -> compareTo
architecture.ee.plugin.dao.PluginBean -> architecture.ee.plugin.dao.PluginBean:
    long id -> a
    java.lang.String name -> a
    java.util.Date creationDate -> a
    java.util.Date modifiedDate -> b
    22:23:void setID(long) -> setID
    27:27:long getID() -> getID
    32:32:java.lang.String getName() -> getName
    37:38:void setName(java.lang.String) -> setName
    42:42:java.util.Date getCreationDate() -> getCreationDate
    47:48:void setCreationDate(java.util.Date) -> setCreationDate
    52:52:java.util.Date getModifiedDate() -> getModifiedDate
    57:58:void setModifiedDate(java.util.Date) -> setModifiedDate
    63:63:int hashCode() -> hashCode
    68:78:boolean equals(java.lang.Object) -> equals
    84:84:java.lang.String toString() -> toString
architecture.ee.plugin.dao.PluginDao -> architecture.ee.plugin.dao.PluginDao:
    architecture.ee.plugin.dao.PluginBean create(architecture.ee.plugin.dao.PluginBean) -> create
    void delete(architecture.ee.plugin.dao.PluginBean) -> delete
    void delete(java.lang.String) -> delete
    architecture.ee.plugin.dao.PluginBean getByName(java.lang.String) -> getByName
    java.util.List getPluginBeans() -> getPluginBeans
    void setPluginData(architecture.ee.plugin.dao.PluginBean,int,java.io.InputStream) -> setPluginData
    java.io.InputStream getPluginData(architecture.ee.plugin.dao.PluginBean) -> getPluginData
    architecture.ee.plugin.dao.PluginBean create(architecture.ee.plugin.dao.PluginBean,int,java.io.InputStream) -> create
    boolean doesPluginTableExist() -> doesPluginTableExist
architecture.ee.plugin.dao.PluginPropertyDao -> architecture.ee.plugin.dao.PluginPropertyDao:
    java.util.Map getProperties(java.lang.String) -> getProperties
    void insertProperty(java.lang.String,java.lang.String,java.lang.String) -> insertProperty
    void updateProperty(java.lang.String,java.lang.String,java.lang.String) -> updateProperty
    void deleteProperty(java.lang.String,java.lang.String) -> deleteProperty
architecture.ee.plugin.dao.internal.JdbcPluginDao -> architecture.ee.plugin.dao.internal.JdbcPluginDao:
    17:20:architecture.ee.plugin.dao.PluginBean create(architecture.ee.plugin.dao.PluginBean) -> create
    25:25:architecture.ee.plugin.dao.PluginBean create(architecture.ee.plugin.dao.PluginBean,int,java.io.InputStream) -> create
    30:30:void delete(architecture.ee.plugin.dao.PluginBean) -> delete
    35:35:void delete(java.lang.String) -> delete
    39:39:architecture.ee.plugin.dao.PluginBean getByName(java.lang.String) -> getByName
    44:44:java.util.List getPluginBeans() -> getPluginBeans
    51:51:void setPluginData(architecture.ee.plugin.dao.PluginBean,int,java.io.InputStream) -> setPluginData
    55:55:java.io.InputStream getPluginData(architecture.ee.plugin.dao.PluginBean) -> getPluginData
    61:61:boolean doesPluginTableExist() -> doesPluginTableExist
architecture.ee.security.AuthToken -> architecture.ee.security.AuthToken:
    long getUserId() -> getUserId
    boolean isAnonymous() -> isAnonymous
architecture.ee.security.Permission -> architecture.ee.security.Permission:
architecture.ee.security.PermissionMask -> architecture.ee.security.PermissionMask:
architecture.ee.security.PermissionType -> architecture.ee.security.PermissionType:
    architecture.ee.security.PermissionType ADDITIVE -> ADDITIVE
    architecture.ee.security.PermissionType NEGATIVE -> NEGATIVE
    int id -> a
    architecture.ee.security.PermissionType[] $VALUES -> a
    3:3:architecture.ee.security.PermissionType[] values() -> values
    3:3:architecture.ee.security.PermissionType valueOf(java.lang.String) -> valueOf
    14:14:java.lang.String toString() -> toString
    18:18:int getId() -> getId
architecture.ee.security.Permissions -> architecture.ee.security.Permissions:
    long NONE -> NONE
    long VIEW_ONLINE_STATUS -> VIEW_ONLINE_STATUS
    long USER_ADMINISTRATION -> USER_ADMINISTRATION
    long GROUP_ADMINISTRATION -> GROUP_ADMINISTRATION
    long SYSTEM_ADMINISTRATION -> SYSTEM_ADMINISTRATION
    long HOSTED_ADMINISTRATION -> HOSTED_ADMINISTRATION
    long ACCESS -> ACCESS
    long permissions -> a
    44:44:long value() -> value
    52:52:boolean hasPermission(long) -> hasPermission
    56:62:void set(long,boolean) -> set
architecture.ee.security.Permissions$PermissionAtom -> architecture.ee.security.Permissions$a:
    architecture.ee.security.Permissions$PermissionAtom NONE -> a
    architecture.ee.security.Permissions$PermissionAtom VIEW_ONLINE_STATUS -> b
    architecture.ee.security.Permissions$PermissionAtom USER_ADMINISTRATION -> c
    architecture.ee.security.Permissions$PermissionAtom GROUP_ADMINISTRATION -> d
    architecture.ee.security.Permissions$PermissionAtom SYSTEM_ADMINISTRATION -> e
    architecture.ee.security.Permissions$PermissionAtom HOSTED_ADMINISTRATION -> f
    architecture.ee.security.Permissions$PermissionAtom ACCESS -> g
    long atomId -> a
    architecture.ee.security.Permissions$PermissionAtom[] $VALUES -> a
    7:7:architecture.ee.security.Permissions$PermissionAtom[] values() -> values
    7:7:architecture.ee.security.Permissions$PermissionAtom valueOf(java.lang.String) -> valueOf
    7:7:long access$000(architecture.ee.security.Permissions$PermissionAtom) -> a
architecture.ee.security.RoleManager -> architecture.ee.security.RoleManager:
    java.util.List getFinalUserRoles(long) -> getFinalUserRoles
    java.util.List getFinalGroupRoles(long) -> getFinalGroupRoles
    java.util.List getAllRoles() -> getAllRoles
architecture.ee.security.UnauthorizedException -> architecture.ee.security.UnauthorizedException:
architecture.ee.security.authentication.AnonymousUser -> architecture.ee.security.authentication.AnonymousUser:
    long serialVersionUID -> serialVersionUID
    long ANONYMOUS_ID -> ANONYMOUS_ID
    java.lang.String ANONYMOUS_USERNAME -> ANONYMOUS_USERNAME
    java.lang.String username -> a
    31:31:java.lang.String getUsername() -> getUsername
    35:35:java.lang.String getName() -> getName
    39:39:java.lang.String getFirstName() -> getFirstName
    43:43:java.lang.String getLastName() -> getLastName
    47:47:boolean isNameVisible() -> isNameVisible
    51:51:java.lang.String getPasswordHash() -> getPasswordHash
    55:55:java.lang.String getPassword() -> getPassword
    59:59:java.lang.String getEmail() -> getEmail
    63:63:boolean isEmailVisible() -> isEmailVisible
    67:67:java.util.Date getCreationDate() -> getCreationDate
    71:71:java.util.Date getModifiedDate() -> getModifiedDate
    75:75:java.util.Map getProperties() -> getProperties
    79:79:java.util.Date getLastLoggedIn() -> getLastLoggedIn
    83:83:java.util.Date getLastProfileUpdate() -> getLastProfileUpdate
    87:87:boolean isEnabled() -> isEnabled
    91:91:boolean isFederated() -> isFederated
    95:95:boolean isExternal() -> isExternal
    99:99:boolean isSetPasswordSupported() -> isSetPasswordSupported
    103:103:boolean isGetPasswordHashSupported() -> isGetPasswordHashSupported
    107:107:boolean isSetPasswordHashSupported() -> isSetPasswordHashSupported
    111:111:boolean isSetNameSupported() -> isSetNameSupported
    115:115:boolean isSetUsernameSupported() -> isSetUsernameSupported
    119:119:boolean isSetEmailSupported() -> isSetEmailSupported
    123:123:boolean isSetNameVisibleSupported() -> isSetNameVisibleSupported
    127:127:boolean isSetEmailVisibleSupported() -> isSetEmailVisibleSupported
    131:131:boolean isPropertyEditSupported() -> isPropertyEditSupported
    135:135:architecture.ee.model.UserModel$Status getStatus() -> getStatus
    139:139:long getPrimaryKey() -> getPrimaryKey
    143:143:java.lang.String toXmlString() -> toXmlString
    147:147:int compareTo(architecture.ee.user.User) -> compareTo
    153:153:long getUserId() -> getUserId
    157:157:boolean isAnonymous() -> isAnonymous
    162:162:java.lang.Object clone() -> clone
    168:168:void setPrimaryKey(long) -> setPrimaryKey
    13:13:int compareTo(java.lang.Object) -> compareTo
architecture.ee.security.authentication.AuthenticationProvider -> architecture.ee.security.authentication.AuthenticationProvider:
    architecture.ee.user.User getUser() -> getUser
    architecture.ee.security.AuthToken getAuthToken() -> getAuthToken
    boolean isSystemAdmin() -> isSystemAdmin
architecture.ee.security.authentication.InvalidProviderUserException -> architecture.ee.security.authentication.InvalidProviderUserException:
architecture.ee.security.authentication.SystemUser -> architecture.ee.security.authentication.SystemUser:
    java.lang.String SYSTEM_USERNAME -> SYSTEM_USERNAME
    18:18:java.lang.String getUsername() -> getUsername
    22:22:java.lang.String getName() -> getName
    26:26:java.lang.String getFirstName() -> getFirstName
    30:30:java.lang.String getLastName() -> getLastName
    34:34:boolean isNameVisible() -> isNameVisible
    38:38:java.lang.String getPasswordHash() -> getPasswordHash
    42:42:java.lang.String getPassword() -> getPassword
    46:46:java.lang.String getEmail() -> getEmail
    50:50:boolean isEmailVisible() -> isEmailVisible
    54:54:java.util.Date getCreationDate() -> getCreationDate
    58:58:java.util.Date getModifiedDate() -> getModifiedDate
    62:62:java.util.Map getProperties() -> getProperties
    66:66:java.util.Date getLastLoggedIn() -> getLastLoggedIn
    70:70:java.util.Date getLastProfileUpdate() -> getLastProfileUpdate
    74:74:boolean isEnabled() -> isEnabled
    78:78:boolean isFederated() -> isFederated
    82:82:boolean isExternal() -> isExternal
    86:86:boolean isSetPasswordSupported() -> isSetPasswordSupported
    90:90:boolean isGetPasswordHashSupported() -> isGetPasswordHashSupported
    94:94:boolean isSetPasswordHashSupported() -> isSetPasswordHashSupported
    98:98:boolean isSetNameSupported() -> isSetNameSupported
    102:102:boolean isSetUsernameSupported() -> isSetUsernameSupported
    106:106:boolean isSetEmailSupported() -> isSetEmailSupported
    110:110:boolean isSetNameVisibleSupported() -> isSetNameVisibleSupported
    114:114:boolean isSetEmailVisibleSupported() -> isSetEmailVisibleSupported
    118:118:boolean isPropertyEditSupported() -> isPropertyEditSupported
    122:122:architecture.ee.model.UserModel$Status getStatus() -> getStatus
    126:126:long getPrimaryKey() -> getPrimaryKey
    130:130:java.lang.String toXmlString() -> toXmlString
    134:134:int compareTo(architecture.ee.user.User) -> compareTo
    138:138:long getUserId() -> getUserId
    142:142:boolean isAnonymous() -> isAnonymous
    147:147:java.lang.Object clone() -> clone
    153:153:void setPrimaryKey(long) -> setPrimaryKey
    13:13:int compareTo(java.lang.Object) -> compareTo
architecture.ee.security.dao.PermissionDao -> architecture.ee.security.dao.PermissionDao:
    void removeAllUserPermissions(int,long,int) -> removeAllUserPermissions
    void removeAllPermissions(int,long) -> removeAllPermissions
    void addGroupPermission(int,long,architecture.ee.user.Group,int,int) -> addGroupPermission
    void removeGroupPermission(int,long,architecture.ee.user.Group,int,int) -> removeGroupPermission
    void removeAllGroupPermissions(int,long,int) -> removeAllGroupPermissions
    java.util.List getObjectIdsWithUserPermission(int) -> getObjectIdsWithUserPermission
    java.util.List getObjectIdsWithGroupPermission(int) -> getObjectIdsWithGroupPermission
    java.util.List getUserPermission(int,long) -> getUserPermission
    java.util.List getGroupPermissions(int,long) -> getGroupPermissions
    void addUserPermission(int,long,long,int,int) -> addUserPermission
    void removeUserPermission(int,long,long,int,int) -> removeUserPermission
    void addPermissionMask(java.lang.String,int) -> addPermissionMask
    void deletePermissionMask(java.lang.String) -> deletePermissionMask
    int getPermissionMask(java.lang.String) -> getPermissionMask
    java.util.List getPermissionsMask() -> getPermissionsMask
architecture.ee.security.dao.RoleDao -> architecture.ee.security.dao.RoleDao:
    void createRole(architecture.ee.security.role.Role) -> createRole
    void update(architecture.ee.security.role.Role) -> update
    architecture.ee.security.role.Role getRoleById(long) -> getRoleById
    architecture.ee.security.role.Role getRoleByName(java.lang.String,boolean) -> getRoleByName
    void deleteRole(long) -> deleteRole
    void deleteUserRoles(long) -> deleteUserRoles
    void deleteGroupRoles(long) -> deleteGroupRoles
    int getRoleCount() -> getRoleCount
    java.util.List getAllRoleIds() -> getAllRoleIds
    java.util.List getRoleIds(int,int) -> getRoleIds
    java.util.List getUserRoleIds(long) -> getUserRoleIds
    java.util.List getGroupRoleIds(long) -> getGroupRoleIds
    void removeUserRole(long,long) -> removeUserRole
    void removeGroupRole(long,long) -> removeGroupRole
    void addUserRole(long,long) -> addUserRole
    void addGroupRole(long,long) -> addGroupRole
architecture.ee.security.dao.impl.JdbcPermissionDao -> architecture.ee.security.dao.impl.JdbcPermissionDao:
    org.springframework.jdbc.core.RowMapper permsRowMapper -> a
    31:31:void removeAllUserPermissions(int,long,int) -> removeAllUserPermissions
    36:36:void removeAllPermissions(int,long) -> removeAllPermissions
    42:42:void addGroupPermission(int,long,architecture.ee.user.Group,int,int) -> addGroupPermission
    48:48:void removeGroupPermission(int,long,architecture.ee.user.Group,int,int) -> removeGroupPermission
    54:54:void removeAllGroupPermissions(int,long,int) -> removeAllGroupPermissions
    58:58:java.util.List getObjectIdsWithUserPermission(int) -> getObjectIdsWithUserPermission
    63:63:java.util.List getObjectIdsWithGroupPermission(int) -> getObjectIdsWithGroupPermission
    68:68:java.util.List getUserPermission(int,long) -> getUserPermission
    73:73:java.util.List getGroupPermissions(int,long) -> getGroupPermissions
    79:79:void addUserPermission(int,long,long,int,int) -> addUserPermission
    84:84:void removeUserPermission(int,long,long,int,int) -> removeUserPermission
    88:92:void addPermissionMask(java.lang.String,int) -> addPermissionMask
    95:97:void deletePermissionMask(java.lang.String) -> deletePermissionMask
    101:106:int getPermissionMask(java.lang.String) -> getPermissionMask
    111:111:java.util.List getPermissionsMask() -> getPermissionsMask
architecture.ee.security.dao.impl.JdbcPermissionDao$1 -> g:
    20:20:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.security.dao.impl.JdbcRoleDao -> architecture.ee.security.dao.impl.JdbcRoleDao:
    org.springframework.jdbc.core.RowMapper roleRowMapper -> a
    java.lang.String sequencerName -> a
    architecture.ee.jdbc.sequencer.dao.SequenceDao sequenceDao -> a
    35:36:void setSequenceDao(architecture.ee.jdbc.sequencer.dao.SequenceDao) -> setSequenceDao
    39:40:void setSequencerName(java.lang.String) -> setSequencerName
    44:59:void createRole(architecture.ee.security.role.Role) -> createRole
    62:65:void deleteRole(long) -> deleteRole
    68:71:void update(architecture.ee.security.role.Role) -> update
    74:77:architecture.ee.security.role.Role getRoleById(long) -> getRoleById
    81:85:architecture.ee.security.role.Role getRoleByName(java.lang.String,boolean) -> getRoleByName
    90:94:void deleteUserRoles(long) -> deleteUserRoles
    97:101:void deleteGroupRoles(long) -> deleteGroupRoles
    104:104:int getRoleCount() -> getRoleCount
    108:108:java.util.List getAllRoleIds() -> getAllRoleIds
    113:113:java.util.List getRoleIds(int,int) -> getRoleIds
    119:119:java.util.List getUserRoleIds(long) -> getUserRoleIds
    125:125:java.util.List getGroupRoleIds(long) -> getGroupRoleIds
    131:135:void removeUserRole(long,long) -> removeUserRole
    138:142:void removeGroupRole(long,long) -> removeGroupRole
    145:150:void addUserRole(long,long) -> addUserRole
    153:157:void addGroupRole(long,long) -> addGroupRole
architecture.ee.security.dao.impl.JdbcRoleDao$1 -> a:
    20:20:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.security.role.ExtendedRoleManager -> architecture.ee.security.role.ExtendedRoleManager:
architecture.ee.security.role.Role -> architecture.ee.security.role.Role:
architecture.ee.security.role.impl.RoleManagerImpl -> architecture.ee.security.role.impl.RoleManagerImpl:
    architecture.ee.user.GroupManager groupManager -> a
    architecture.ee.security.dao.RoleDao roleDao -> a
    net.sf.ehcache.Cache roleCache -> a
    40:41:void setRoleCache(net.sf.ehcache.Cache) -> setRoleCache
    44:44:void setUserRoleCache(net.sf.ehcache.Cache) -> setUserRoleCache
    48:49:void setGroupManager(architecture.ee.user.GroupManager) -> setGroupManager
    51:52:void setRoleDao(architecture.ee.security.dao.RoleDao) -> setRoleDao
    54:54:void setEventPublisher(architecture.common.event.api.EventPublisher) -> setEventPublisher
    59:81:java.util.List getFinalUserRoles(long) -> getFinalUserRoles
    84:93:java.util.List getFinalGroupRoles(long) -> getFinalGroupRoles
    98:101:architecture.ee.security.role.Role getRoleFromCacheById(long) -> a
    106:115:java.util.List getAllRoles() -> getAllRoles
architecture.ee.spring.context.WebApplicationContextLoader -> architecture.ee.spring.context.WebApplicationContextLoader:
    org.apache.commons.logging.Log log -> a
    java.lang.String CONTEXT_LOCATION_PARAM -> CONTEXT_LOCATION_PARAM
    java.lang.String SETUP_LOCATION_PARAM -> SETUP_LOCATION_PARAM
    java.lang.String UPGRADE_LOCATION_PARAM -> UPGRADE_LOCATION_PARAM
    java.lang.String RUNTIME_LOCATION_PARAM -> RUNTIME_LOCATION_PARAM
    java.lang.String EXTENSION_LOCATION_PARAM -> EXTENSION_LOCATION_PARAM
    33:49:void customizeContext(javax.servlet.ServletContext,org.springframework.web.context.ConfigurableWebApplicationContext) -> customizeContext
    53:74:void addXmlFilesToContextList(java.lang.String,java.util.List) -> addXmlFilesToContextList
    84:84:org.springframework.context.ApplicationContext loadParentContext(javax.servlet.ServletContext) -> loadParentContext
architecture.ee.spring.context.WebApplicationContextLoader$1 -> architecture.ee.spring.context.WebApplicationContextLoader$a:
    61:61:boolean accept(java.io.File,java.lang.String) -> accept
architecture.ee.spring.context.WebApplicationContextLoaderListener -> architecture.ee.spring.context.WebApplicationContextLoaderListener:
    org.apache.commons.logging.Log log -> a
    19:31:void contextInitialized(javax.servlet.ServletContextEvent) -> contextInitialized
    36:41:void contextDestroyed(javax.servlet.ServletContextEvent) -> contextDestroyed
architecture.ee.spring.context.internal.ApplicationHelperFactoryImpl -> architecture.ee.spring.context.internal.ApplicationHelperFactoryImpl:
    architecture.common.lifecycle.ApplicationHelper helper -> a
    13:16:architecture.common.lifecycle.ApplicationHelper getApplicationHelper() -> getApplicationHelper
architecture.ee.spring.context.internal.ApplicationHelperImpl -> architecture.ee.spring.context.internal.ApplicationHelperImpl:
    org.apache.commons.logging.Log log -> a
    org.springframework.context.ConfigurableApplicationContext applicationContext -> a
    architecture.ee.component.AdminService adminService -> a
    53:56:org.springframework.context.ConfigurableApplicationContext getConfigurableApplicationContext() -> getConfigurableApplicationContext
    60:63:org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory() -> getBeanFactory
    67:70:void addComponent(java.lang.String,java.lang.Class) -> addComponent
    73:73:architecture.common.lifecycle.Application getApplication() -> getApplication
    77:77:architecture.ee.component.AdminService getAdminService() -> getAdminService
    82:84:void autowireComponent(java.lang.Object) -> autowireComponent
    87:89:java.lang.Object createComponent(java.lang.Class) -> createComponent
    93:99:java.lang.Object getComponent(java.lang.Class) -> getComponent
    105:127:java.lang.Object getComponent(java.lang.Object) -> getComponent
    133:144:java.lang.Object getInstance(java.lang.Object) -> getInstance
    149:153:void refresh() -> refresh
    158:168:void onEvent(architecture.common.lifecycle.StateChangeEvent) -> onEvent
    171:172:void onApplicationEvent(org.springframework.context.ApplicationEvent) -> onApplicationEvent
architecture.ee.spring.event.AutoListenerEventRegister -> architecture.ee.spring.event.AutoListenerEventRegister:
    org.apache.commons.logging.Log logger -> a
    architecture.common.event.api.EventPublisher eventPublisher -> a
    28:30:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory) -> postProcessBeanFactory
architecture.ee.spring.jdbc.ExtendedJdbcTemplate -> architecture.ee.spring.jdbc.ExtendedJdbcTemplate:
    int DEFAULT_CACHE_LIMIT -> DEFAULT_CACHE_LIMIT
    int cacheLimit -> a
    java.util.Map parsedSqlCache -> a
    architecture.ee.jdbc.util.JdbcHelper jdbcHelper -> a
    org.springframework.jdbc.support.lob.LobHandler lobHandler -> a
    168:168:org.springframework.jdbc.support.lob.LobHandler getLobHandler() -> getLobHandler
    172:173:void setLobHandler(org.springframework.jdbc.support.lob.LobHandler) -> setLobHandler
    176:177:void setJdbcHelper(architecture.ee.jdbc.util.JdbcHelper) -> setJdbcHelper
    181:190:void initialize() -> initialize
    194:194:java.lang.Object executeScript(boolean,java.io.Reader) -> executeScript
    210:210:int getCacheLimit() -> getCacheLimit
    214:214:architecture.ee.jdbc.util.JdbcHelper getJdbcHelper() -> getJdbcHelper
    228:238:org.springframework.jdbc.core.namedparam.ParsedSql getParsedSql(java.lang.String) -> getParsedSql
    255:260:org.springframework.jdbc.core.PreparedStatementCreator getNamedPreparedStatementCreator(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource) -> getNamedPreparedStatementCreator
    265:269:java.util.List queryScrollable(java.lang.String,int,int,java.lang.Class,java.lang.Object[],int[]) -> queryScrollable
    274:278:java.util.List queryScrollable(java.lang.String,int,int,org.springframework.jdbc.core.RowMapper,java.lang.Object[],int[]) -> queryScrollable
    283:286:java.util.List queryScrollable(java.lang.String,int,int,java.lang.Object[],int[]) -> queryScrollable
    291:353:java.lang.Object runScript(java.sql.Connection,boolean,java.io.Reader) -> runScript
    362:363:void setCacheLimit(int) -> setCacheLimit
    366:368:void setDataSource(javax.sql.DataSource) -> setDataSource
    373:373:java.util.List query(java.lang.String,java.util.Map,org.springframework.jdbc.core.RowMapper) -> query
    377:377:java.util.List query(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,org.springframework.jdbc.core.RowMapper) -> query
    381:381:java.util.List queryForList(java.lang.String,java.util.Map,java.lang.Class) -> queryForList
    386:386:int[] batchUpdate(java.lang.String,java.util.List) -> batchUpdate
    390:390:int[] batchUpdate(java.lang.String,java.util.List,int[]) -> batchUpdate
    394:400:int[] batchUpdate(java.lang.String,java.util.Map[]) -> batchUpdate
    404:405:int[] batchUpdate(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource[]) -> batchUpdate
architecture.ee.spring.jdbc.ExtendedJdbcTemplate$1 -> b:
    architecture.ee.spring.jdbc.ExtendedJdbcTemplate this$0 -> a
    155:155:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
architecture.ee.spring.jdbc.ExtendedJdbcTemplate$2 -> architecture.ee.spring.jdbc.ExtendedJdbcTemplate$a:
    boolean val$stopOnError -> a
    java.io.Reader val$reader -> a
    architecture.ee.spring.jdbc.ExtendedJdbcTemplate this$0 -> a
    198:200:java.lang.Object doInConnection(java.sql.Connection) -> doInConnection
architecture.ee.spring.jdbc.ExtendedJdbcTemplate$ScrollablePreparedStatementCreator -> architecture.ee.spring.jdbc.ExtendedJdbcTemplate$ScrollablePreparedStatementCreator:
    java.lang.String sqlToUse -> a
    java.lang.Object[] params -> a
    int[] paramTypes -> a
    int startIndex -> a
    int numResults -> b
    architecture.ee.jdbc.util.JdbcHelper helper -> a
    86:109:java.sql.PreparedStatement createPreparedStatement(java.sql.Connection) -> createPreparedStatement
architecture.ee.spring.jdbc.ExtendedJdbcTemplate$ScrollableResultSetExtractor -> architecture.ee.spring.jdbc.ExtendedJdbcTemplate$ScrollableResultSetExtractor:
    int startIndex -> a
    int numResults -> b
    org.springframework.jdbc.core.RowMapper mapper -> a
    architecture.ee.jdbc.util.JdbcHelper helper -> a
    129:143:java.lang.Object extractData(java.sql.ResultSet) -> extractData
architecture.ee.spring.jdbc.SqlFileDeployer -> architecture.ee.spring.jdbc.SqlFileDeployer:
    architecture.common.vfs.ExtendedFileMonitor fileMonitor -> a
    42:47:void addUri(java.lang.String) -> addUri
    50:52:void buildSqlFromInputStream(java.io.InputStream,architecture.ee.jdbc.query.factory.Configuration,java.lang.String) -> buildSqlFromInputStream
    55:55:java.util.List getMonitoredFileObjectList() -> getMonitoredFileObjectList
    60:65:void removeUri(java.lang.String) -> removeUri
    68:69:void setChecksPerRun(int) -> setChecksPerRun
    72:73:void setDelay(long) -> setDelay
    76:77:void setRecursive(boolean) -> setRecursive
    81:82:void startInternal() -> startInternal
    86:87:void stopInternal() -> stopInternal
architecture.ee.spring.jdbc.SqlFileListener -> architecture.ee.spring.jdbc.SqlFileListener:
    architecture.ee.jdbc.query.factory.Configuration configuration -> a
    org.apache.commons.logging.Log log -> a
    44:46:void buildSqlFromInputStream(java.io.InputStream,java.lang.String) -> buildSqlFromInputStream
    49:51:void buildSqlFromInputStream(java.io.InputStream,architecture.ee.jdbc.query.factory.Configuration,java.lang.String) -> buildSqlFromInputStream
    55:60:void fileChanged(org.apache.commons.vfs.FileChangeEvent) -> fileChanged
    64:70:void fileCreated(org.apache.commons.vfs.FileChangeEvent) -> fileCreated
    74:81:void fileDeleted(org.apache.commons.vfs.FileChangeEvent) -> fileDeleted
architecture.ee.spring.jdbc.SqlQueryFactoryBuilder -> architecture.ee.spring.jdbc.SqlQueryFactoryBuilder:
    org.apache.commons.logging.Log log -> a
    java.lang.String prefix -> a
    java.lang.String suffix -> b
    architecture.ee.jdbc.query.factory.Configuration configuration -> a
    javax.sql.DataSource dataSource -> a
    java.util.List resourceLocations -> a
    java.util.Map deployments -> a
    70:73:boolean isSetDataSource() -> isSetDataSource
    77:79:void initialize() -> initialize
    83:86:architecture.ee.jdbc.query.factory.SqlQueryFactory createSqlQueryFactory() -> createSqlQueryFactory
    90:92:architecture.ee.jdbc.query.factory.SqlQueryFactory createSqlQueryFactory(javax.sql.DataSource) -> createSqlQueryFactory
    96:98:void buildSqlFromInputStream(java.io.InputStream,architecture.ee.jdbc.query.factory.Configuration) -> buildSqlFromInputStream
    101:101:java.util.List getResourceLocations() -> getResourceLocations
    106:117:void loadResourceLocations() -> loadResourceLocations
    120:121:void setDataSource(javax.sql.DataSource) -> setDataSource
    124:125:void setResourceLocations(java.util.List) -> setResourceLocations
    128:128:java.lang.String getPrefix() -> getPrefix
    135:136:void setPrefix(java.lang.String) -> setPrefix
    139:139:java.lang.String getSuffix() -> getSuffix
    146:147:void setSuffix(java.lang.String) -> setSuffix
    179:192:java.lang.String fileCreated(java.io.File) -> fileCreated
    197:205:boolean fileDeleted(java.io.File) -> fileDeleted
    211:217:void fileChanged(java.io.File) -> fileChanged
    220:222:long getDeploymentTime(java.io.File) -> getDeploymentTime
    226:226:boolean isFileDeployed(java.io.File) -> isFileDeployed
    235:239:boolean validateFile(java.io.File) -> validateFile
architecture.ee.spring.jdbc.SqlQueryFactoryBuilder$DeployedInfo -> architecture.ee.spring.jdbc.SqlQueryFactoryBuilder$a:
    long deployedTime -> a
    java.net.URI uri -> a
    long timestamp -> b
architecture.ee.spring.jdbc.internal.JdbcHelperFactoryImpl -> architecture.ee.spring.jdbc.internal.JdbcHelperFactoryImpl:
    26:26:architecture.ee.jdbc.util.JdbcHelper getJdbcHelper(javax.sql.DataSource) -> getJdbcHelper
    30:30:architecture.ee.jdbc.util.JdbcHelper getJdbcHelper() -> getJdbcHelper
architecture.ee.spring.jdbc.internal.JdbcHelperImpl -> architecture.ee.spring.jdbc.internal.JdbcHelperImpl:
    boolean transactionsSupported -> a
    int transactionIsolation -> a
    boolean streamTextRequired -> b
    boolean streamBlobRequired -> c
    boolean fetchSizeSupported -> d
    boolean subqueriesSupported -> e
    boolean maxRowsSupported -> f
    boolean scrollResultsSupported -> g
    boolean batchUpdatesSupported -> h
    java.lang.String databaseProductName -> a
    java.lang.String databaseProductVersion -> b
    java.lang.String jdbcDriverName -> c
    java.lang.String jdbcDriverVersion -> d
    architecture.ee.jdbc.util.JdbcHelper$DatabaseType databaseType -> a
    93:93:boolean isBatchUpdatesSupported() -> isBatchUpdatesSupported
    97:97:java.lang.String getDatabaseProductName() -> getDatabaseProductName
    101:101:java.lang.String getDatabaseProductVersion() -> getDatabaseProductVersion
    105:105:architecture.ee.jdbc.util.JdbcHelper$DatabaseType getDatabaseType() -> getDatabaseType
    109:109:boolean isDeleteSubqueriesSupported() -> isDeleteSubqueriesSupported
    113:113:boolean isFetchSizeSupported() -> isFetchSizeSupported
    117:117:java.lang.String getJdbcDriverName() -> getJdbcDriverName
    121:121:java.lang.String getJdbcDriverVersion() -> getJdbcDriverVersion
    125:125:boolean isMaxRowsSupported() -> isMaxRowsSupported
    129:129:boolean isScrollResultsSupported() -> isScrollResultsSupported
    133:133:boolean isStreamBlobRequired() -> isStreamBlobRequired
    137:137:boolean isStreamTextRequired() -> isStreamTextRequired
    141:141:boolean isSubqueriesSupported() -> isSubqueriesSupported
    145:145:int getTransactionIsolation() -> getTransactionIsolation
    149:149:boolean isTransactionsSupported() -> isTransactionsSupported
    155:255:void setDatabaseMetaData(javax.sql.DataSource) -> setDatabaseMetaData
    259:263:java.sql.PreparedStatement createScrollablePreparedStatement(java.sql.Connection,java.lang.String) -> createScrollablePreparedStatement
    268:274:void setFetchSize(java.sql.ResultSet,int) -> setFetchSize
    278:288:void scrollResultSet(java.sql.ResultSet,int) -> scrollResultSet
architecture.ee.spring.jdbc.internal.JdbcHelperImpl$1 -> architecture.ee.spring.jdbc.internal.JdbcHelperImpl$a:
    architecture.ee.spring.jdbc.internal.JdbcHelperImpl this$0 -> a
    161:252:java.lang.Object processMetaData(java.sql.DatabaseMetaData) -> processMetaData
architecture.ee.spring.jdbc.support.ExtendedJdbcDaoSupport -> architecture.ee.spring.jdbc.support.ExtendedJdbcDaoSupport:
    org.apache.commons.logging.Log log -> log
    architecture.ee.jdbc.query.factory.Configuration configuration -> a
    30:31:void setConfiguration(architecture.ee.jdbc.query.factory.Configuration) -> setConfiguration
    34:37:boolean isSetConfiguration() -> isSetConfiguration
    41:41:architecture.ee.spring.jdbc.ExtendedJdbcTemplate createJdbcTemplate(javax.sql.DataSource) -> createJdbcTemplate
    45:45:architecture.ee.spring.jdbc.ExtendedJdbcTemplate getExtendedJdbcTemplate() -> getExtendedJdbcTemplate
    49:51:void initTemplateConfig() -> initTemplateConfig
    54:54:org.springframework.jdbc.support.lob.LobHandler getLobHandler() -> getLobHandler
    58:59:void setLobHandler(org.springframework.jdbc.support.lob.LobHandler) -> setLobHandler
    62:66:architecture.ee.jdbc.query.mapping.BoundSql getBoundSql(java.lang.String) -> getBoundSql
    70:74:architecture.ee.jdbc.query.mapping.BoundSql getBoundSql(java.lang.String,java.lang.Object[]) -> getBoundSql
    78:82:architecture.ee.jdbc.query.mapping.BoundSql getBoundSqlWithAdditionalParameter(java.lang.String,java.lang.Object,java.lang.Object) -> getBoundSqlWithAdditionalParameter
    86:90:architecture.ee.jdbc.query.mapping.BoundSql getBoundSqlWithAdditionalParameter(java.lang.String,java.lang.Object) -> getBoundSqlWithAdditionalParameter
    15:15:org.springframework.jdbc.core.JdbcTemplate createJdbcTemplate(javax.sql.DataSource) -> createJdbcTemplate
architecture.ee.spring.jdbc.support.SqlQueryDaoSupport -> architecture.ee.spring.jdbc.support.SqlQueryDaoSupport:
    architecture.ee.jdbc.query.factory.SqlQueryFactory sqlQueryFactory -> a
    org.apache.commons.logging.Log log -> log
    architecture.ee.jdbc.query.SqlQuery sqlQuery -> a
    23:23:architecture.ee.jdbc.query.factory.SqlQueryFactory getSqlQueryFactory() -> getSqlQueryFactory
    27:28:void setSqlQueryFactory(architecture.ee.jdbc.query.factory.SqlQueryFactory) -> setSqlQueryFactory
    31:33:boolean isSetDataSource() -> isSetDataSource
    37:39:boolean isSetSqlQueryFactory() -> isSetSqlQueryFactory
    44:48:architecture.ee.jdbc.query.SqlQuery getSqlQuery() -> getSqlQuery
    52:53:architecture.ee.jdbc.query.SqlQuery getSqlQuery(java.lang.String,java.lang.String) -> getSqlQuery
    57:58:architecture.ee.jdbc.query.SqlQuery getSqlQuery(java.lang.String) -> getSqlQuery
architecture.ee.spring.lifecycle.internal.AbstractJdbcApplicationProperties -> architecture.ee.spring.lifecycle.internal.AbstractJdbcApplicationProperties:
    architecture.common.event.api.EventPublisher eventPublisher -> a
    15:15:boolean getBooleanProperty(java.lang.String) -> getBooleanProperty
    19:23:boolean getBooleanProperty(java.lang.String,boolean) -> getBooleanProperty
    27:27:int getIntProperty(java.lang.String,int) -> getIntProperty
    31:34:void firePropertyChangeEvent(java.lang.Object,architecture.common.lifecycle.ApplicationPropertyChangeEvent$Type,java.lang.String,java.lang.Object,java.lang.Object) -> firePropertyChangeEvent
    37:37:architecture.common.event.api.EventPublisher getEventPublisher() -> getEventPublisher
    44:45:void setEventPublisher(architecture.common.event.api.EventPublisher) -> setEventPublisher
architecture.ee.spring.lifecycle.internal.AdminImpl -> architecture.ee.spring.lifecycle.internal.AdminImpl:
    org.apache.commons.logging.Log log -> a
    architecture.ee.spring.lifecycle.internal.AdminServiceImpl adminService -> a
    architecture.common.lifecycle.ApplicationProperties properties -> a
    architecture.common.lifecycle.ApplicationProperties localizedProperties -> b
    javax.sql.DataSource dataSource -> a
    architecture.common.event.api.EventPublisher eventPublisher -> a
    architecture.ee.spring.lifecycle.internal.PluginManagerImpl pluginManager -> a
    org.springframework.core.task.TaskExecutor taskExecutor -> a
    architecture.ee.component.GlobalizationService globalizationService -> a
    java.util.Locale locale -> a
    java.util.TimeZone timeZone -> a
    java.lang.String characterEncoding -> a
    61:62:void setGlobalizationService(architecture.ee.component.GlobalizationService) -> setGlobalizationService
    65:67:boolean isSetTaskExecutor() -> isSetTaskExecutor
    71:72:void executeTask(java.lang.Runnable) -> executeTask
    76:76:architecture.common.lifecycle.State getState() -> getState
    80:80:architecture.common.lifecycle.ConfigRoot getConfigRoot() -> getConfigRoot
    84:84:java.lang.String getEffectiveRootPath() -> getEffectiveRootPath
    88:89:void setDataSource(javax.sql.DataSource) -> setDataSource
    92:93:void setEventPublisher(architecture.common.event.api.EventPublisher) -> setEventPublisher
    97:104:void initialize() -> initialize
    108:121:java.util.Locale getLocale() -> getLocale
    126:133:void setLocale(java.util.Locale) -> setLocale
    137:149:java.lang.String getCharacterEncoding() -> getCharacterEncoding
    155:166:void setCharacterEncoding(java.lang.String) -> setCharacterEncoding
    174:186:java.util.TimeZone getTimeZone() -> getTimeZone
    191:197:void setTimeZone(java.util.TimeZone) -> setTimeZone
    201:201:java.lang.String getLocalProperty(java.lang.String) -> getLocalProperty
    206:213:int getLocalProperty(java.lang.String,int) -> getLocalProperty
    218:222:java.lang.String getLocalProperty(java.lang.String,java.lang.String) -> getLocalProperty
    227:234:java.util.List getLocalProperties(java.lang.String) -> getLocalProperties
    239:240:void setLocalProperty(java.lang.String,java.lang.String) -> setLocalProperty
    244:245:void setLocalProperties(java.util.Map) -> setLocalProperties
    251:257:void deleteLocalProperty(java.lang.String) -> deleteLocalProperty
    262:262:java.lang.String getApplicationProperty(java.lang.String) -> getApplicationProperty
    267:272:java.lang.String getApplicationProperty(java.lang.String,java.lang.String) -> getApplicationProperty
    277:277:java.util.List getApplicationPropertyNames() -> getApplicationPropertyNames
    282:283:java.util.List getApplicationPropertyNames(java.lang.String) -> getApplicationPropertyNames
    288:297:java.util.List getApplicationProperties(java.lang.String) -> getApplicationProperties
    302:309:int getApplicationIntProperty(java.lang.String,int) -> getApplicationIntProperty
    314:314:boolean getApplicationBooleanProperty(java.lang.String) -> getApplicationBooleanProperty
    319:323:boolean getApplicationBooleanProperty(java.lang.String,boolean) -> getApplicationBooleanProperty
    328:329:void setApplicationProperty(java.lang.String,java.lang.String) -> setApplicationProperty
    333:334:void setApplicationProperties(java.util.Map) -> setApplicationProperties
    338:339:void deleteApplicationProperty(java.lang.String) -> deleteApplicationProperty
    344:347:java.util.List getLocalizedPropertyLocales(java.lang.String) -> getLocalizedPropertyLocales
    352:353:void setLocalizedApplicationProperty(java.lang.String,java.lang.String,java.util.Locale) -> setLocalizedApplicationProperty
    357:358:void deleteLocalizedApplicationProperty(java.lang.String,java.util.Locale) -> deleteLocalizedApplicationProperty
    365:369:architecture.common.lifecycle.ApplicationProperties getApplicationProperties() -> getApplicationProperties
    374:378:architecture.common.lifecycle.ApplicationProperties getLocalizedProperties() -> a
    382:387:architecture.common.lifecycle.ApplicationProperties createApplicationProperties(javax.sql.DataSource,boolean) -> a
    391:391:boolean isReady() -> isReady
    395:395:java.util.ResourceBundle getResourceBundle(java.lang.String) -> getResourceBundle
architecture.ee.spring.lifecycle.internal.AdminServiceImpl -> architecture.ee.spring.lifecycle.internal.AdminServiceImpl:
    org.springframework.web.context.ContextLoader contextLoader -> a
    javax.servlet.ServletContext servletContext -> a
    org.springframework.context.ConfigurableApplicationContext applicationContext -> a
    architecture.common.lifecycle.Version version -> a
    architecture.common.lifecycle.ConfigRootHelper helper -> a
    architecture.common.lifecycle.ApplicationProperties setupProperties -> a
    java.lang.String startupFileName -> a
    54:54:java.lang.Object getBootstrapComponent(java.lang.Class) -> getBootstrapComponent
    58:59:void setConfigRootHelper(architecture.common.lifecycle.ConfigRootHelper) -> setConfigRootHelper
    62:64:boolean isSetConfigRootHelper() -> isSetConfigRootHelper
    68:71:boolean isSetApplicationContext() -> isSetApplicationContext
    75:76:void setContextLoader(org.springframework.web.context.ContextLoader) -> setContextLoader
    79:79:org.springframework.web.context.ContextLoader getContextLoader() -> getContextLoader
    83:85:boolean isSetContextLoader() -> isSetContextLoader
    89:89:javax.servlet.ServletContext getServletContext() -> getServletContext
    93:95:void setServletContext(javax.servlet.ServletContext) -> setServletContext
    98:100:boolean isSetServletContext() -> isSetServletContext
    105:106:void initializeInternal() -> initializeInternal
    111:133:void startInternal() -> startInternal
    137:147:void stopInternal() -> stopInternal
    151:159:void destroy() -> destroy
    163:166:architecture.common.lifecycle.ApplicationProperties getApplicationProperties() -> getApplicationProperties
    171:217:architecture.common.lifecycle.ApplicationProperties getSetupProperties() -> a
    221:221:org.springframework.context.ConfigurableApplicationContext getApplicationContext() -> getApplicationContext
    225:228:void autowireComponent(java.lang.Object) -> autowireComponent
    232:243:java.lang.Object getComponent(java.lang.Class) -> getComponent
    248:252:void refresh() -> refresh
    255:255:architecture.common.lifecycle.Version getVersion() -> getVersion
    260:271:void onEvent(architecture.common.lifecycle.StateChangeEvent) -> onEvent
    278:278:void onEvent(architecture.common.lifecycle.ApplicationPropertyChangeEvent) -> onEvent
    281:281:architecture.common.lifecycle.ConfigRoot getConfigRoot() -> getConfigRoot
    285:285:java.lang.String getEffectiveRootPath() -> getEffectiveRootPath
    289:289:java.lang.String getRootURI() -> getRootURI
    293:296:boolean isReady() -> isReady
architecture.ee.spring.lifecycle.internal.ApplicationHomeImpl -> architecture.ee.spring.lifecycle.internal.ApplicationHomeImpl:
    java.lang.String SERVER_ROOT_KEY -> SERVER_ROOT_KEY
    java.lang.String SERVER_LOGS_KEY -> SERVER_LOGS_KEY
    java.lang.String SERVER_HOME_KEY -> SERVER_HOME_KEY
    java.lang.String SERVER_ROOT_ENV_KEY -> SERVER_ROOT_ENV_KEY
    org.apache.commons.logging.Log log -> a
    org.springframework.jndi.JndiTemplate jndiTemplate -> a
    boolean initialization -> a
    java.lang.String effectiveRootPath -> a
    java.lang.String effectiveHomePath -> b
    java.lang.String effectiveLogsPath -> c
    53:59:java.lang.String getLogsPath() -> getLogsPath
    64:64:java.io.File getLogs() -> getLogs
    69:69:java.io.File getInstallRoot() -> getInstallRoot
    74:80:java.lang.String getInstallRootPath() -> getInstallRootPath
    87:87:java.io.File getHome() -> getHome
    92:98:java.lang.String getHomePath() -> getHomePath
    105:131:java.lang.String getEnvironmentLogsPath() -> getEnvironmentLogsPath
    142:187:java.lang.String getEnvironmentHomePath() -> getEnvironmentHomePath
    193:216:java.lang.String getEnvironmentRootPath() -> getEnvironmentRootPath
architecture.ee.spring.lifecycle.internal.ConfigRootHelperImpl -> architecture.ee.spring.lifecycle.internal.ConfigRootHelperImpl:
    java.lang.String APPLICATION_HOME_KEY -> APPLICATION_HOME_KEY
    java.lang.String APPLICATION_CONFIG_ROOT_KEY -> APPLICATION_CONFIG_ROOT_KEY
    java.lang.String APPLICATION_HOME_ENV_KEY -> APPLICATION_HOME_ENV_KEY
    java.lang.String APPLICATION_CONFIG_ROOT_ENV_KEY -> APPLICATION_CONFIG_ROOT_ENV_KEY
    org.apache.commons.logging.Log log -> a
    org.springframework.jndi.JndiTemplate jndiTemplate -> a
    java.lang.String effectiveRootPath -> a
    java.lang.String rootURI -> b
    39:47:architecture.common.lifecycle.ConfigRoot getConfigRoot() -> getConfigRoot
    51:60:java.lang.String getRootURI() -> getRootURI
    65:76:java.lang.String getEffectiveRootPath() -> getEffectiveRootPath
    82:104:void setServletContext(javax.servlet.ServletContext) -> setServletContext
    108:132:java.lang.String getEnvironmentRootPath() -> getEnvironmentRootPath
architecture.ee.spring.lifecycle.internal.ConfigRootImpl -> architecture.ee.spring.lifecycle.internal.ConfigRootImpl:
    java.lang.String rootURL -> a
    org.apache.commons.vfs.FileObject rootFileObject -> a
    32:32:java.lang.String getConfigRootPath() -> getConfigRootPath
    37:41:java.io.File getFile(java.lang.String) -> getFile
    46:50:java.lang.String getURI(java.lang.String) -> getURI
architecture.ee.spring.lifecycle.internal.DirectoryScannerImpl -> architecture.ee.spring.lifecycle.internal.DirectoryScannerImpl:
    architecture.common.scanner.URLDirectoryScanner scanner -> a
    java.util.List resourceLocations -> a
    boolean fastDeploy -> a
    org.apache.commons.logging.Log log -> a
    38:42:void setDirectoryListenerList(java.util.List) -> setDirectoryListenerList
    53:54:void setFastDeploy(boolean) -> setFastDeploy
    57:57:java.util.List getResourceLocations() -> getResourceLocations
    61:62:void setResourceLocations(java.util.List) -> setResourceLocations
    65:66:void setRecursiveSearch(boolean) -> setRecursiveSearch
    69:70:void setPollIntervalMillis(int) -> setPollIntervalMillis
    73:74:void addDirectoryListener(architecture.common.scanner.DirectoryListener) -> addDirectoryListener
    77:78:void addScanDir(java.lang.String) -> addScanDir
    81:81:architecture.common.scanner.DirectoryListener[] getDirectoryListeners() -> getDirectoryListeners
    85:86:void removeDirectoryListener(architecture.common.scanner.DirectoryListener) -> removeDirectoryListener
    89:90:void removeScanURL(java.net.URL) -> removeScanURL
    94:97:void addScanURI(java.net.URI) -> addScanURI
    100:101:void addScanURL(java.net.URL) -> addScanURL
    105:108:void removeScanURI(java.net.URI) -> removeScanURI
    111:114:void destroy() -> destroy
    118:121:void afterPropertiesSet() -> afterPropertiesSet
    125:148:void loadResourceLocations() -> loadResourceLocations
    151:160:void fastDeploy(java.io.File,architecture.ee.spring.jdbc.SqlQueryFactoryBuilder) -> fastDeploy
architecture.ee.spring.lifecycle.internal.JdbcApplicationPropertiesImpl -> architecture.ee.spring.lifecycle.internal.JdbcApplicationPropertiesImpl:
    java.util.concurrent.atomic.AtomicBoolean initFlag -> initFlag
    boolean localized -> a
    java.util.concurrent.ConcurrentMap properties -> a
    42:53:void initDao() -> initDao
    56:56:void clear() -> clear
    60:60:boolean containsKey(java.lang.String) -> containsKey
    64:64:boolean containsValue(java.lang.String) -> containsValue
    68:68:java.util.Collection values() -> values
    72:75:void putAll(java.util.Map) -> putAll
    78:78:java.util.Set entrySet() -> entrySet
    82:82:java.util.Set keySet() -> keySet
    86:106:java.util.Collection getChildrenNames(java.lang.String) -> getChildrenNames
    110:110:java.util.Collection getPropertyNames() -> getPropertyNames
    114:114:boolean containsKey(java.lang.Object) -> containsKey
    118:118:boolean containsValue(java.lang.Object) -> containsValue
    122:122:java.lang.String get(java.lang.String) -> get
    126:126:boolean isEmpty() -> isEmpty
    131:167:java.lang.String put(java.lang.String,java.lang.String) -> put
    173:194:java.lang.String remove(java.lang.Object) -> remove
    198:198:java.lang.String get(java.lang.Object) -> get
    202:202:int size() -> size
    304:313:java.util.List getLocalesForProperty(java.lang.String) -> getLocalesForProperty
    28:28:java.lang.Object remove(java.lang.Object) -> remove
    28:28:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    28:28:java.lang.Object get(java.lang.Object) -> get
architecture.ee.spring.lifecycle.internal.JdbcApplicationPropertiesImpl$1 -> architecture.ee.spring.lifecycle.internal.JdbcApplicationPropertiesImpl$b:
    266:266:java.lang.Object extractData(java.sql.ResultSet) -> extractData
architecture.ee.spring.lifecycle.internal.JdbcApplicationPropertiesImpl$2 -> architecture.ee.spring.lifecycle.internal.JdbcApplicationPropertiesImpl$a:
    280:280:java.lang.Object extractData(java.sql.ResultSet) -> extractData
architecture.ee.spring.lifecycle.internal.PluginManagerImpl -> architecture.ee.spring.lifecycle.internal.PluginManagerImpl:
    java.io.File pluginDirectory -> pluginDirectory
    javax.sql.DataSource dataSource -> dataSource
    java.util.concurrent.atomic.AtomicBoolean initialized -> a
    architecture.ee.util.task.TaskEngine taskEngine -> a
    35:50:void initialize() -> initialize
    53:53:boolean isInitialized() -> isInitialized
    57:57:void setEventPublisher(architecture.common.event.api.EventPublisher) -> setEventPublisher
    61:62:void setTaskEngine(architecture.ee.util.task.TaskEngine) -> setTaskEngine
    65:66:void setDataSource(javax.sql.DataSource) -> setDataSource
architecture.ee.spring.lifecycle.internal.PluginManagerImpl$1 -> architecture.ee.spring.lifecycle.internal.PluginManagerImpl$a:
    43:43:void run() -> run
architecture.ee.spring.lifecycle.support.SpringLifecycleSupport -> architecture.ee.spring.lifecycle.support.SpringLifecycleSupport:
    11:11:boolean isRunning() -> isRunning
architecture.ee.spring.security.authentication.ExtendedAnonymousAuthenticationFilter -> architecture.ee.spring.security.authentication.ExtendedAnonymousAuthenticationFilter:
    org.apache.commons.logging.Log log -> a
    17:31:org.springframework.security.core.Authentication createAuthentication(javax.servlet.http.HttpServletRequest) -> createAuthentication
architecture.ee.spring.security.authentication.ExtendedAnonymousAuthenticationToken -> architecture.ee.spring.security.authentication.ExtendedAnonymousAuthenticationToken:
    long serialVersionUID -> serialVersionUID
    architecture.ee.security.authentication.AnonymousUser user -> a
    23:23:architecture.ee.security.AuthToken getAuthToken() -> getAuthToken
    27:27:architecture.ee.user.User getUser() -> getUser
    31:31:long getUserId() -> getUserId
    35:35:boolean isAnonymous() -> isAnonymous
architecture.ee.spring.security.authentication.ExtendedAuthentication -> architecture.ee.spring.security.authentication.ExtendedAuthentication:
    architecture.ee.security.AuthToken getAuthToken() -> getAuthToken
    architecture.ee.user.User getUser() -> getUser
    long getUserId() -> getUserId
    boolean isAnonymous() -> isAnonymous
architecture.ee.spring.security.authentication.ExtendedAuthenticationFailureHandler -> architecture.ee.spring.security.authentication.ExtendedAuthenticationFailureHandler:
architecture.ee.spring.security.authentication.ExtendedAuthenticationProcessingFilter -> architecture.ee.spring.security.authentication.ExtendedAuthenticationProcessingFilter:
    org.apache.commons.logging.Log log -> a
    architecture.ee.user.UserManager userManager -> a
    28:57:org.springframework.security.core.Authentication attemptAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> attemptAuthentication
    67:68:void setUserManager(architecture.ee.user.UserManager) -> setUserManager
architecture.ee.spring.security.authentication.ExtendedAuthenticationProcessingFilterEntryPoint -> architecture.ee.spring.security.authentication.ExtendedAuthenticationProcessingFilterEntryPoint:
architecture.ee.spring.security.authentication.ExtendedAuthenticationProvider -> architecture.ee.spring.security.authentication.ExtendedAuthenticationProvider:
    architecture.ee.spring.security.authentication.ExtendedAuthentication getAuthentication() -> getAuthentication
    architecture.ee.spring.security.authentication.ExtendedSecurityContext getSecurityContext() -> getSecurityContext
architecture.ee.spring.security.authentication.ExtendedAuthenticationProviderImpl -> architecture.ee.spring.security.authentication.ExtendedAuthenticationProviderImpl:
    org.apache.commons.logging.Log log -> a
    17:26:architecture.ee.spring.security.authentication.ExtendedAuthentication getAuthentication() -> getAuthentication
    31:36:architecture.ee.security.AuthToken getAuthToken() -> getAuthToken
    42:42:architecture.ee.spring.security.authentication.ExtendedSecurityContext getSecurityContext() -> getSecurityContext
    48:49:architecture.ee.user.User getUser() -> getUser
    55:55:boolean isSystemAdmin() -> isSystemAdmin
architecture.ee.spring.security.authentication.ExtendedDaoAuthenticationProvider -> architecture.ee.spring.security.authentication.ExtendedDaoAuthenticationProvider:
    org.apache.commons.logging.Log log -> a
    architecture.ee.user.UserManager userManager -> userManager
    org.springframework.security.authentication.AuthenticationProvider authProvider -> authProvider
    28:56:void additionalAuthenticationChecks(org.springframework.security.core.userdetails.UserDetails,org.springframework.security.authentication.UsernamePasswordAuthenticationToken) -> additionalAuthenticationChecks
    64:75:org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication) -> authenticate
    80:81:void setAuthenticationProvider(org.springframework.security.authentication.AuthenticationProvider) -> setAuthenticationProvider
    84:85:void setUserManager(architecture.ee.user.UserManager) -> setUserManager
    89:89:boolean supports(org.springframework.security.core.userdetails.UserDetails) -> supports
architecture.ee.spring.security.authentication.ExtendedSecurityContext -> architecture.ee.spring.security.authentication.ExtendedSecurityContext:
    org.apache.commons.logging.Log log -> a
    org.springframework.security.core.Authentication auth -> a
    14:14:org.springframework.security.core.Authentication getAuthentication() -> getAuthentication
    18:21:int hashCode() -> hashCode
    26:27:void setAuthentication(org.springframework.security.core.Authentication) -> setAuthentication
    32:39:void setAuthentication(org.springframework.security.core.Authentication,boolean) -> setAuthentication
    45:63:java.lang.String toString() -> toString
architecture.ee.spring.security.authentication.ExtendedUserAuthehtication -> architecture.ee.spring.security.authentication.ExtendedUserAuthehtication:
    architecture.ee.user.User user -> a
    24:24:java.util.Collection getAuthorities() -> getAuthorities
    28:28:architecture.ee.security.AuthToken getAuthToken() -> getAuthToken
    48:48:java.lang.Object getCredentials() -> getCredentials
    52:52:java.lang.Object getDetails() -> getDetails
    57:57:java.lang.String getName() -> getName
    61:61:java.lang.Object getPrincipal() -> getPrincipal
    65:65:architecture.ee.user.User getUser() -> getUser
    69:69:long getUserId() -> getUserId
    74:74:boolean isAnonymous() -> isAnonymous
    78:78:boolean isAuthenticated() -> isAuthenticated
    83:83:void setAuthenticated(boolean) -> setAuthenticated
    87:90:java.lang.String toString() -> toString
architecture.ee.spring.security.authentication.ExtendedUserAuthehtication$1 -> architecture.ee.spring.security.authentication.ExtendedUserAuthehtication$a:
    architecture.ee.spring.security.authentication.ExtendedUserAuthehtication this$0 -> a
    32:32:long getUserId() -> getUserId
    41:41:boolean isAnonymous() -> isAnonymous
architecture.ee.spring.security.authentication.ExtendedUserDetails -> architecture.ee.spring.security.authentication.ExtendedUserDetails:
    long serialVersionUID -> serialVersionUID
    long userId -> a
    architecture.ee.user.User extUser -> a
    41:41:long getCreationDate() -> getCreationDate
    46:46:architecture.ee.user.User getUser() -> getUser
    50:50:long getUserId() -> getUserId
    55:55:boolean isAccountNonExpired() -> isAccountNonExpired
    60:60:boolean isAccountNonLocked() -> isAccountNonLocked
    64:64:boolean isAnonymous() -> isAnonymous
    69:69:boolean isCredentialsNonExpired() -> isCredentialsNonExpired
    74:74:boolean isEnabled() -> isEnabled
architecture.ee.spring.security.authentication.ExtendedUserDetailsAdapter -> architecture.ee.spring.security.authentication.ExtendedUserDetailsAdapter:
    long serialVersionUID -> serialVersionUID
    architecture.ee.user.User user -> a
    java.util.List authorities -> a
    31:31:java.util.Collection getAuthorities() -> getAuthorities
    35:35:java.util.Date getCreationDate() -> getCreationDate
    39:39:java.lang.String getPassword() -> getPassword
    43:43:architecture.ee.user.User getUser() -> getUser
    47:47:long getUserId() -> getUserId
    51:51:java.lang.String getUsername() -> getUsername
    55:55:boolean isAccountNonExpired() -> isAccountNonExpired
    59:59:boolean isAccountNonLocked() -> isAccountNonLocked
    63:63:boolean isCredentialsNonExpired() -> isCredentialsNonExpired
    67:67:boolean isEnabled() -> isEnabled
architecture.ee.spring.security.authentication.ExtendedUserDetailsService -> architecture.ee.spring.security.authentication.ExtendedUserDetailsService:
    org.apache.commons.logging.Log log -> a
    boolean caseInsensitive -> a
    architecture.ee.user.UserManager userManager -> a
    architecture.ee.security.RoleManager roleManager -> a
    java.lang.String grantedAuthority -> a
    34:35:void setGrantedAuthority(java.lang.String) -> setGrantedAuthority
    44:64:architecture.ee.spring.security.authentication.ExtendedUserDetails loadByUser(architecture.ee.user.User) -> loadByUser
    69:77:org.springframework.security.core.userdetails.UserDetails loadUserByUsername(java.lang.String) -> loadUserByUsername
    83:84:void setCaseInsensitive(boolean) -> setCaseInsensitive
    87:87:void setEventPublisher(architecture.common.event.api.EventPublisher) -> setEventPublisher
    91:92:void setRoleManager(architecture.ee.security.RoleManager) -> setRoleManager
    95:96:void setUserManager(architecture.ee.user.UserManager) -> setUserManager
architecture.ee.spring.security.authentication.SystemAuthentication -> architecture.ee.spring.security.authentication.SystemAuthentication:
    architecture.ee.security.authentication.SystemUser user -> a
    17:17:architecture.ee.security.AuthToken getAuthenticationToken() -> getAuthenticationToken
    21:21:java.util.Collection getAuthorities() -> getAuthorities
    25:25:architecture.ee.security.AuthToken getAuthToken() -> getAuthToken
    29:29:java.lang.Object getCredentials() -> getCredentials
    33:33:java.lang.Object getDetails() -> getDetails
    37:37:java.lang.String getName() -> getName
    41:41:java.lang.Object getPrincipal() -> getPrincipal
    45:45:architecture.ee.user.User getUser() -> getUser
    49:49:long getUserId() -> getUserId
    53:53:boolean isAnonymous() -> isAnonymous
    57:57:boolean isAuthenticated() -> isAuthenticated
    62:62:void setAuthenticated(boolean) -> setAuthenticated
architecture.ee.spring.support.EventSourceSupport -> architecture.ee.spring.support.EventSourceSupport:
    14:14:void setEventPublisher(architecture.common.event.api.EventPublisher) -> setEventPublisher
architecture.ee.spring.util.ExtendedPropertyPlaceholderConfigurer -> architecture.ee.spring.util.ExtendedPropertyPlaceholderConfigurer:
    org.apache.commons.logging.Log log -> a
    13:14:java.lang.String convertProperty(java.lang.String,java.lang.String) -> convertProperty
    19:20:java.lang.String convertPropertyValue(java.lang.String) -> convertPropertyValue
architecture.ee.user.AbstractGroupManager -> architecture.ee.user.AbstractGroupManager:
    org.apache.commons.logging.Log log -> log
    architecture.common.event.api.EventPublisher eventPublisher -> eventPublisher
    net.sf.ehcache.Cache groupCache -> groupCache
    net.sf.ehcache.Cache groupIdCache -> groupIdCache
    net.sf.ehcache.Cache groupMemberCache -> groupMemberCache
    boolean caseInsensitiveGroupNameMatch -> caseInsensitiveGroupNameMatch
    34:35:void setGroupCache(net.sf.ehcache.Cache) -> setGroupCache
    40:41:void setGroupIdCache(net.sf.ehcache.Cache) -> setGroupIdCache
    44:45:void setGroupMemberCache(net.sf.ehcache.Cache) -> setGroupMemberCache
    50:51:void setCaseInsensitiveGroupNameMatch(boolean) -> setCaseInsensitiveGroupNameMatch
    55:56:void setEventPublisher(architecture.common.event.api.EventPublisher) -> setEventPublisher
    59:74:java.util.List getUserGroups(architecture.ee.user.User) -> getUserGroups
    java.util.List lookupGroupsForUser(architecture.ee.user.User) -> lookupGroupsForUser
    architecture.ee.user.Group lookupGroup(java.lang.String) -> lookupGroup
    83:83:boolean isGetUserGroupsSupported() -> isGetUserGroupsSupported
architecture.ee.user.EmailAlreadyExistsException -> architecture.ee.user.EmailAlreadyExistsException:
architecture.ee.user.Group -> architecture.ee.user.Group:
architecture.ee.user.GroupManager -> architecture.ee.user.GroupManager:
    java.util.List getUserGroups(architecture.ee.user.User) -> getUserGroups
architecture.ee.user.GroupNotFoundException -> architecture.ee.user.GroupNotFoundException:
architecture.ee.user.User -> architecture.ee.user.User:
architecture.ee.user.UserAlreadyExistsException -> architecture.ee.user.UserAlreadyExistsException:
architecture.ee.user.UserManager -> architecture.ee.user.UserManager:
    architecture.ee.user.User createUser(architecture.ee.user.User) -> createUser
    architecture.ee.user.User createApplicationUser(architecture.ee.user.User) -> createApplicationUser
    architecture.ee.user.User getUser(architecture.ee.user.User) -> getUser
    architecture.ee.user.User getUser(architecture.ee.user.User,boolean) -> getUser
    architecture.ee.user.User getUser(java.lang.String) -> getUser
    architecture.ee.user.User getUser(long) -> getUser
    void deleteUser(architecture.ee.user.User) -> deleteUser
    void deleteUserAndContent(architecture.ee.user.User) -> deleteUserAndContent
    int getApplicationUserCount() -> getApplicationUserCount
    java.util.List getApplicationUsers() -> getApplicationUsers
    java.util.List getApplicationUsers(int,int) -> getApplicationUsers
    int getAuthenticatedUserCount() -> getAuthenticatedUserCount
    int getTotalUserCount() -> getTotalUserCount
    int getRecentUserCount(java.util.Date) -> getRecentUserCount
    java.util.List getUsers() -> getUsers
    java.util.List getUsers(int,int) -> getUsers
    boolean isCreationSupported() -> isCreationSupported
    architecture.ee.user.User updateUser(architecture.ee.user.User) -> updateUser
    void enableUser(architecture.ee.user.User) -> enableUser
architecture.ee.user.UserNotFoundException -> architecture.ee.user.UserNotFoundException:
architecture.ee.user.UserTemplate -> architecture.ee.user.UserTemplate:
    org.apache.commons.logging.Log log -> a
    long userId -> a
    java.lang.String username -> a
    java.lang.String passwordHash -> b
    java.lang.String password -> c
    java.lang.String name -> d
    java.lang.String firstName -> e
    java.lang.String lastName -> f
    boolean nameVisible -> a
    java.lang.String email -> g
    boolean emailVisible -> b
    java.util.Date creationDate -> a
    java.util.Date modifiedDate -> b
    java.util.Map properties -> a
    boolean enabled -> c
    java.util.Date lastLoggedIn -> c
    java.util.Date lastProfileUpdate -> d
    boolean external -> d
    boolean federated -> e
    boolean setNameVisibleSupported -> f
    boolean setPasswordSupported -> g
    boolean getPasswordHashSupported -> h
    boolean setEmailVisibleSupported -> i
    boolean setNameSupported -> j
    boolean setUsernameSupported -> k
    boolean setPasswordHashSupported -> l
    boolean setPropertyEditSupported -> m
    boolean setEmailSuppoted -> n
    architecture.ee.model.UserModel$Status status -> a
    char[] USERNAME_DISALLOWED_CHARS -> a
    350:350:java.lang.String getPassword() -> getPassword
    354:355:void setPassword(java.lang.String) -> setPassword
    358:358:boolean isReadOnly() -> isReadOnly
    362:362:java.util.Date getCreationDate() -> getCreationDate
    366:367:void setCreationDate(java.util.Date) -> setCreationDate
    370:370:java.lang.String getEmail() -> getEmail
    374:375:void setEmail(java.lang.String) -> setEmail
    378:378:boolean isEmailVisible() -> isEmailVisible
    382:383:void setEmailVisible(boolean) -> setEmailVisible
    386:386:boolean isEnabled() -> isEnabled
    390:391:void setEnabled(boolean) -> setEnabled
    394:394:long getUserId() -> getUserId
    398:399:void setUserId(long) -> setUserId
    402:402:java.util.Date getLastLoggedIn() -> getLastLoggedIn
    406:407:void setLastLoggedIn(java.util.Date) -> setLastLoggedIn
    410:410:java.util.Date getLastProfileUpdate() -> getLastProfileUpdate
    414:415:void setLastProfileUpdate(java.util.Date) -> setLastProfileUpdate
    418:418:java.util.Date getModifiedDate() -> getModifiedDate
    422:423:void setModificationDate(java.util.Date) -> setModificationDate
    426:431:java.lang.String getName() -> getName
    436:452:void setName(java.lang.String) -> setName
    455:455:java.lang.String getFirstName() -> getFirstName
    459:460:void setFirstName(java.lang.String) -> setFirstName
    463:463:java.lang.String getLastName() -> getLastName
    467:468:void setLastName(java.lang.String) -> setLastName
    471:471:boolean isNameVisible() -> isNameVisible
    475:476:void setNameVisible(boolean) -> setNameVisible
    479:479:java.lang.String getPasswordHash() -> getPasswordHash
    483:484:void setPasswordHash(java.lang.String) -> setPasswordHash
    487:489:java.util.Map getProperties() -> getProperties
    493:494:void setProperties(java.util.Map) -> setProperties
    497:497:java.lang.String getUsername() -> getUsername
    501:502:void setUsername(java.lang.String) -> setUsername
    505:505:boolean isFederated() -> isFederated
    509:510:void setFederated(boolean) -> setFederated
    513:513:boolean isExternal() -> isExternal
    517:518:void setExternal(boolean) -> setExternal
    521:521:boolean isAuthorized(long) -> isAuthorized
    525:526:void setStatus(architecture.ee.model.UserModel$Status) -> setStatus
    529:529:architecture.ee.model.UserModel$Status getStatus() -> getStatus
    533:533:java.lang.String toString() -> toString
    540:540:int hashCode() -> hashCode
    544:550:boolean equals(java.lang.Object) -> equals
    555:555:boolean isSetPasswordSupported() -> isSetPasswordSupported
    559:559:boolean isGetPasswordHashSupported() -> isGetPasswordHashSupported
    563:563:boolean isSetPasswordHashSupported() -> isSetPasswordHashSupported
    567:567:boolean isSetNameSupported() -> isSetNameSupported
    571:571:boolean isSetUsernameSupported() -> isSetUsernameSupported
    575:575:boolean isSetEmailSupported() -> isSetEmailSupported
    579:579:boolean isSetNameVisibleSupported() -> isSetNameVisibleSupported
    583:583:boolean isSetEmailVisibleSupported() -> isSetEmailVisibleSupported
    587:587:boolean isPropertyEditSupported() -> isPropertyEditSupported
    591:592:void setSetNameVisibleSupported(boolean) -> setSetNameVisibleSupported
    595:596:void setSetPasswordSupported(boolean) -> setSetPasswordSupported
    599:600:void setGetPasswordHashSupported(boolean) -> setGetPasswordHashSupported
    603:604:void setSetEmailVisibleSupported(boolean) -> setSetEmailVisibleSupported
    607:608:void setSetNameSupported(boolean) -> setSetNameSupported
    611:612:void setSetUsernameSupported(boolean) -> setSetUsernameSupported
    615:616:void setSetPasswordHashSupported(boolean) -> setSetPasswordHashSupported
    619:620:void setSetPropertyEditSupported(boolean) -> setSetPropertyEditSupported
    623:624:void setSetEmailSuppoted(boolean) -> setSetEmailSuppoted
    627:627:boolean isAnonymous() -> isAnonymous
    631:631:java.io.Serializable getPrimaryKeyObj() -> getPrimaryKeyObj
    635:635:java.lang.String toXmlString() -> toXmlString
    639:646:int compareTo(architecture.ee.user.User) -> compareTo
    651:651:long getPrimaryKey() -> getPrimaryKey
    655:656:void setPrimaryKey(long) -> setPrimaryKey
    660:660:java.lang.Object clone() -> clone
    669:686:java.lang.String formatUsername(java.lang.String) -> formatUsername
    691:691:boolean isUsernameValid(java.lang.String) -> isUsernameValid
    24:24:int compareTo(java.lang.Object) -> compareTo
architecture.ee.user.dao.GroupDao -> architecture.ee.user.dao.GroupDao:
    void deleteGroupUsers(long) -> deleteGroupUsers
    void deleteGroupProperties(long) -> deleteGroupProperties
    void deleteGroup(long) -> deleteGroup
    int getGroupCount() -> getGroupCount
    java.util.List getAllGroupIds() -> getAllGroupIds
    java.util.List getUserGroupIds(long) -> getUserGroupIds
    java.util.List getGroupIds(int,int) -> getGroupIds
    void createGroup(architecture.ee.user.Group) -> createGroup
    void update(architecture.ee.user.Group) -> update
    architecture.ee.user.Group getGroupById(long) -> getGroupById
    architecture.ee.user.Group getGroupByName(java.lang.String,boolean) -> getGroupByName
    java.util.List getMembersIds(long) -> getMembersIds
    java.util.List getAdministratorIds(long) -> getAdministratorIds
    boolean isMember(long,long) -> isMember
    void addMember(long,long) -> addMember
    void removeMember(long,long) -> removeMember
    void addAdministrator(long,long) -> addAdministrator
    void removeAdministrator(long,long) -> removeAdministrator
    void addMembers(long,java.util.Set) -> addMembers
    void removeMembers(long,java.util.Set) -> removeMembers
    void addAdministrators(long,java.util.Set) -> addAdministrators
    void removeAdministrators(long,java.util.Set) -> removeAdministrators
    void deleteUserMemberships(long) -> deleteUserMemberships
architecture.ee.user.dao.ProfileFieldDao -> architecture.ee.user.dao.ProfileFieldDao:
    architecture.ee.user.profile.ProfileField createProfileField(architecture.ee.user.profile.ProfileField) -> createProfileField
    architecture.ee.user.profile.ProfileField getProfileField(long) -> getProfileField
    void editProfileField(architecture.ee.user.profile.ProfileField) -> editProfileField
    void editProfileFieldOptions(architecture.ee.user.profile.ProfileField) -> editProfileFieldOptions
    java.util.List getProfileFieldOptions(long) -> getProfileFieldOptions
    void deleteProfileField(long) -> deleteProfileField
    java.util.List getProfileFields() -> getProfileFields
    void setIndex(architecture.ee.user.profile.ProfileField,int) -> setIndex
architecture.ee.user.dao.ProfileSearchDao -> architecture.ee.user.dao.ProfileSearchDao:
    java.util.List getUserBeforeDate(java.lang.Long,java.lang.Long,java.util.Date) -> getUserBeforeDate
    int getUsersBeforeDateCount(java.util.Date) -> getUsersBeforeDateCount
    java.util.List getUsersSinceDate(java.util.Date,java.util.Date) -> getUsersSinceDate
    int getUsersSinceDateCount(java.util.Date,java.util.Date) -> getUsersSinceDateCount
    int getHighestUserID() -> getHighestUserID
    java.util.Set getPrefixCharacters(boolean) -> getPrefixCharacters
architecture.ee.user.dao.UserDao -> architecture.ee.user.dao.UserDao:
    java.util.List getUserIdsWithUserProperty(java.lang.String,java.lang.String) -> getUserIdsWithUserProperty
    architecture.ee.user.User create(architecture.ee.user.User) -> create
    architecture.ee.user.User update(architecture.ee.user.User) -> update
    architecture.ee.user.User getUserByUsername(java.lang.String) -> getUserByUsername
    architecture.ee.user.User getUserByUsernameNoCase(java.lang.String) -> getUserByUsernameNoCase
    architecture.ee.user.User getUserByEmail(java.lang.String) -> getUserByEmail
    architecture.ee.user.User getUserById(long) -> getUserById
    void delete(architecture.ee.user.User) -> delete
    java.util.Map getUserProperties(long) -> getUserProperties
    void setUserProperties(long,java.util.Map) -> setUserProperties
    int getApplicationUserCount() -> getApplicationUserCount
    java.util.List getApplicationUsers() -> getApplicationUsers
    java.util.List getApplicationUsers(int,int) -> getApplicationUsers
    int getTotalUserCount() -> getTotalUserCount
    int getAuthenticatedUserCount() -> getAuthenticatedUserCount
    int getRecentUserCount(java.util.Date) -> getRecentUserCount
    java.util.List getAllUsers() -> getAllUsers
    java.util.List getAllUsers(int,int) -> getAllUsers
    java.util.List getUserIdsWithStatuses(int[]) -> getUserIdsWithStatuses
architecture.ee.user.dao.UserProfileDao -> architecture.ee.user.dao.UserProfileDao:
    java.util.Map getProfile(architecture.ee.user.User) -> getProfile
    void setProfile(architecture.ee.user.User,java.util.Collection) -> setProfile
    void deleteProfileByUserID(long) -> deleteProfileByUserID
    void deleteProfileById(long) -> deleteProfileById
    java.util.Collection getProfileFieldTermsByFieldId(long,boolean) -> getProfileFieldTermsByFieldId
architecture.ee.user.dao.impl.JdbcGroupDao -> architecture.ee.user.dao.impl.JdbcGroupDao:
    org.springframework.jdbc.core.RowMapper groupRowMapper -> a
    architecture.ee.jdbc.sequencer.dao.SequenceDao sequenceDao -> a
    architecture.ee.jdbc.property.dao.ExtendedPropertyDao extendedPropertyDao -> a
    java.lang.String sequencerName -> a
    java.lang.String groupPropertyTableName -> b
    java.lang.String groupPropertyPrimaryColumnName -> c
    44:45:void setSequenceDao(architecture.ee.jdbc.sequencer.dao.SequenceDao) -> setSequenceDao
    48:49:void setExtendedPropertyDao(architecture.ee.jdbc.property.dao.ExtendedPropertyDao) -> setExtendedPropertyDao
    52:52:java.lang.String getSequencerName() -> getSequencerName
    56:57:void setSequencerName(java.lang.String) -> setSequencerName
    60:60:java.lang.String getGroupPropertyTableName() -> getGroupPropertyTableName
    64:65:void setGroupPropertyTableName(java.lang.String) -> setGroupPropertyTableName
    68:68:java.lang.String getGroupPropertyPrimaryColumnName() -> getGroupPropertyPrimaryColumnName
    72:73:void setGroupPropertyPrimaryColumnName(java.lang.String) -> setGroupPropertyPrimaryColumnName
    77:77:java.util.Map getGroupProperties(long) -> getGroupProperties
    81:82:void getGroupProperties(long,java.util.Map) -> getGroupProperties
    85:86:void setGroupProperties(long,java.util.Map) -> setGroupProperties
    89:90:void deleteGroupProperties(long) -> deleteGroupProperties
    94:95:void deleteGroupUsers(long) -> deleteGroupUsers
    99:103:void deleteGroup(long) -> deleteGroup
    106:106:int getGroupCount() -> getGroupCount
    111:111:java.util.List getAllGroupIds() -> getAllGroupIds
    117:117:java.util.List getUserGroupIds(long) -> getUserGroupIds
    123:123:java.util.List getGroupIds(int,int) -> getGroupIds
    127:141:void createGroup(architecture.ee.user.Group) -> createGroup
    144:146:void update(architecture.ee.user.Group) -> update
    150:158:architecture.ee.user.Group getGroupById(long) -> getGroupById
    163:174:architecture.ee.user.Group getGroupByName(java.lang.String,boolean) -> getGroupByName
    178:178:java.util.List getMembersIds(long) -> getMembersIds
    184:184:java.util.List getAdministratorIds(long) -> getAdministratorIds
    190:198:boolean isMember(long,long) -> isMember
    203:204:void deleteUserMemberships(long) -> deleteUserMemberships
    207:208:void addMember(long,long) -> addMember
    211:212:void removeMember(long,long) -> removeMember
    215:216:void addAdministrator(long,long) -> addAdministrator
    219:220:void removeAdministrator(long,long) -> removeAdministrator
    223:224:void addMembers(long,java.util.Set) -> addMembers
    227:229:void removeMembers(long,java.util.Set) -> removeMembers
    232:233:void addAdministrators(long,java.util.Set) -> addAdministrators
    236:237:void removeAdministrators(long,java.util.Set) -> removeAdministrators
    241:245:void addMembership(long,long,boolean) -> a
    248:252:void removeMembership(long,long,boolean) -> b
    256:274:void addMembership(long,java.util.Set,boolean) -> a
    277:295:void removeMembership(long,java.util.Set,boolean) -> b
architecture.ee.user.dao.impl.JdbcGroupDao$1 -> c:
    24:24:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.user.dao.impl.JdbcGroupDao$2 -> architecture.ee.user.dao.impl.JdbcGroupDao$b:
    java.util.Set val$usersToUse -> a
    long val$groupIdToUse -> a
    boolean val$isAdmin -> a
    264:269:void setValues(java.sql.PreparedStatement,int) -> setValues
    272:272:int getBatchSize() -> getBatchSize
architecture.ee.user.dao.impl.JdbcGroupDao$3 -> architecture.ee.user.dao.impl.JdbcGroupDao$a:
    java.util.Set val$usersToUse -> a
    long val$groupIdToUse -> a
    boolean val$isAdmin -> a
    285:290:void setValues(java.sql.PreparedStatement,int) -> setValues
    293:293:int getBatchSize() -> getBatchSize
architecture.ee.user.dao.impl.JdbcProfileFiledDao -> architecture.ee.user.dao.impl.JdbcProfileFiledDao:
    org.springframework.jdbc.core.RowMapper profileFieldOptionRowMapper -> a
    org.springframework.jdbc.core.RowMapper getProfileFieldsRowMapper -> b
    org.springframework.jdbc.core.RowMapper getProfileFieldRowMapper -> c
    architecture.ee.jdbc.sequencer.dao.SequenceDao sequenceDao -> a
    java.lang.String sequencerName -> a
    76:77:void setSequenceDao(architecture.ee.jdbc.sequencer.dao.SequenceDao) -> setSequenceDao
    80:109:architecture.ee.user.profile.ProfileField createProfileField(architecture.ee.user.profile.ProfileField) -> createProfileField
    114:122:architecture.ee.user.profile.ProfileField getProfileField(long) -> getProfileField
    127:146:void editProfileField(architecture.ee.user.profile.ProfileField) -> editProfileField
    153:171:void editProfileFieldOptions(architecture.ee.user.profile.ProfileField) -> editProfileFieldOptions
    177:182:java.util.List getProfileFieldOptions(long) -> getProfileFieldOptions
    188:196:void deleteProfileField(long) -> deleteProfileField
    201:201:java.util.List getProfileFields() -> getProfileFields
    205:214:void setIndex(architecture.ee.user.profile.ProfileField,int) -> setIndex
    217:220:void setRawIndex(architecture.ee.user.profile.ProfileField,int) -> setRawIndex
architecture.ee.user.dao.impl.JdbcProfileFiledDao$1 -> h:
    21:21:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.user.dao.impl.JdbcProfileFiledDao$2 -> i:
    38:38:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.user.dao.impl.JdbcProfileFiledDao$3 -> f:
    49:49:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.user.dao.impl.JdbcProfileSearchDao -> architecture.ee.user.dao.impl.JdbcProfileSearchDao:
    12:12:java.util.List getUserBeforeDate(java.lang.Long,java.lang.Long,java.util.Date) -> getUserBeforeDate
    16:16:int getUsersBeforeDateCount(java.util.Date) -> getUsersBeforeDateCount
    20:20:java.util.List getUsersSinceDate(java.util.Date,java.util.Date) -> getUsersSinceDate
    24:24:int getUsersSinceDateCount(java.util.Date,java.util.Date) -> getUsersSinceDateCount
    28:28:int getHighestUserID() -> getHighestUserID
    32:32:java.util.Set getPrefixCharacters(boolean) -> getPrefixCharacters
architecture.ee.user.dao.impl.JdbcUserDao -> architecture.ee.user.dao.impl.JdbcUserDao:
    org.springframework.jdbc.core.RowMapper userMapper -> a
    org.springframework.jdbc.core.RowMapper userMapper2 -> b
    architecture.ee.jdbc.sequencer.dao.SequenceDao sequenceDao -> a
    architecture.ee.jdbc.property.dao.ExtendedPropertyDao extendedPropertyDao -> a
    java.lang.String sequencerName -> a
    java.lang.String userPropertyTableName -> b
    java.lang.String userPropertyPrimaryColumnName -> c
    92:93:void setUserPropertyTableName(java.lang.String) -> setUserPropertyTableName
    97:98:void setUserPropertyPrimaryColumnName(java.lang.String) -> setUserPropertyPrimaryColumnName
    101:102:void setSequenceDao(architecture.ee.jdbc.sequencer.dao.SequenceDao) -> setSequenceDao
    105:106:void setExtendedPropertyDao(architecture.ee.jdbc.property.dao.ExtendedPropertyDao) -> setExtendedPropertyDao
    109:109:java.util.List getUserIdsWithUserProperty(java.lang.String,java.lang.String) -> getUserIdsWithUserProperty
    114:129:architecture.ee.user.User getUser(architecture.ee.user.User) -> getUser
    133:173:architecture.ee.user.User create(architecture.ee.user.User) -> create
    177:204:architecture.ee.user.User update(architecture.ee.user.User) -> update
    208:219:architecture.ee.user.User getUserByUsername(java.lang.String) -> getUserByUsername
    223:234:architecture.ee.user.User getUserByUsernameNoCase(java.lang.String) -> getUserByUsernameNoCase
    239:258:architecture.ee.user.User getUserByEmail(java.lang.String) -> getUserByEmail
    263:281:architecture.ee.user.User getUserById(long) -> getUserById
    286:289:void delete(architecture.ee.user.User) -> delete
    292:292:java.util.Map getUserProperties(long) -> getUserProperties
    296:297:void setUserProperties(long,java.util.Map) -> setUserProperties
    300:304:java.util.List getApplicationUsers() -> getApplicationUsers
    308:312:java.util.List getApplicationUsers(int,int) -> getApplicationUsers
    316:316:int getTotalUserCount() -> getTotalUserCount
    320:320:int getApplicationUserCount() -> getApplicationUserCount
    324:324:int getAuthenticatedUserCount() -> getAuthenticatedUserCount
    328:328:int getRecentUserCount(java.util.Date) -> getRecentUserCount
    332:336:java.util.List getAllUsers() -> getAllUsers
    340:344:java.util.List getAllUsers(int,int) -> getAllUsers
    349:349:java.util.List getUserIdsWithStatuses(int[]) -> getUserIdsWithStatuses
architecture.ee.user.dao.impl.JdbcUserDao$1 -> e:
    25:25:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.user.dao.impl.JdbcUserDao$2 -> d:
    52:52:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.user.dao.impl.JdbcUserProfileDao -> architecture.ee.user.dao.impl.JdbcUserProfileDao:
    26:39:java.util.Map getProfile(architecture.ee.user.User) -> getProfile
    43:74:void buildProfileFieldValueMap(java.util.List,java.util.Map) -> a
    78:100:void setProfile(architecture.ee.user.User,java.util.Collection) -> setProfile
    106:111:void deleteProfileByUserID(long) -> deleteProfileByUserID
    116:120:void deleteProfileById(long) -> deleteProfileById
    126:138:java.util.Collection getProfileFieldTermsByFieldId(long,boolean) -> getProfileFieldTermsByFieldId
architecture.ee.user.dao.impl.JdbcUserProfileDao$1 -> architecture.ee.user.dao.impl.JdbcUserProfileDao$b:
    30:30:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.user.dao.impl.JdbcUserProfileDao$2 -> architecture.ee.user.dao.impl.JdbcUserProfileDao$a:
    127:127:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
architecture.ee.user.impl.GroupManagerImpl -> architecture.ee.user.impl.GroupManagerImpl:
    architecture.ee.user.dao.GroupDao groupDao -> a
    26:27:void setGroupDao(architecture.ee.user.dao.GroupDao) -> setGroupDao
    32:32:void setUserManager(architecture.ee.user.UserManager) -> setUserManager
    39:53:java.util.List lookupGroupsForUser(architecture.ee.user.User) -> lookupGroupsForUser
    59:63:architecture.ee.user.Group lookupGroup(java.lang.String) -> lookupGroup
    68:74:architecture.ee.user.Group lookupGroup(long) -> lookupGroup
architecture.ee.user.impl.MultiProviderUserManager -> architecture.ee.user.impl.MultiProviderUserManager:
    org.apache.commons.logging.Log log -> a
    java.security.SecureRandom entropy -> a
    boolean allowApplicationUserCreation -> allowApplicationUserCreation
    boolean emailAddressCaseSensitive -> emailAddressCaseSensitive
    org.springframework.security.authentication.dao.SaltSource saltSource -> saltSource
    org.springframework.security.authentication.encoding.PasswordEncoder passwordEncoder -> passwordEncoder
    java.util.List providers -> providers
    architecture.ee.user.dao.UserDao userDao -> a
    int applicationUserCount -> applicationUserCount
    int authenticatedUserCount -> authenticatedUserCount
    int totalUserCount -> totalUserCount
    net.sf.ehcache.Cache userCache -> a
    net.sf.ehcache.Cache userIdCache -> b
    net.sf.ehcache.Cache providerCache -> c
    68:69:void setAllowApplicationUserCreation(boolean) -> setAllowApplicationUserCreation
    72:73:void setEmailAddressCaseSensitive(boolean) -> setEmailAddressCaseSensitive
    76:77:void setSaltSource(org.springframework.security.authentication.dao.SaltSource) -> setSaltSource
    80:81:void setPasswordEncoder(org.springframework.security.authentication.encoding.PasswordEncoder) -> setPasswordEncoder
    84:87:void addUserProvider(architecture.ee.user.spi.UserProvider) -> addUserProvider
    91:94:void setProviders(java.util.List) -> setProviders
    97:98:void setUserDao(architecture.ee.user.dao.UserDao) -> setUserDao
    101:102:void setUserCache(net.sf.ehcache.Cache) -> setUserCache
    105:106:void setUserIdCache(net.sf.ehcache.Cache) -> setUserIdCache
    109:110:void setProviderCache(net.sf.ehcache.Cache) -> setProviderCache
    113:113:void setEventPublisher(architecture.common.event.api.EventPublisher) -> setEventPublisher
    120:166:architecture.ee.user.User createUser(architecture.ee.user.User) -> createUser
    170:203:architecture.ee.user.User createApplicationUser(architecture.ee.user.User) -> createApplicationUser
    207:207:architecture.ee.user.User getUser(architecture.ee.user.User) -> getUser
    212:301:architecture.ee.user.User getUser(architecture.ee.user.User,boolean) -> getUser
    305:315:architecture.ee.user.User getUser(java.lang.String) -> getUser
    320:327:architecture.ee.user.User getUser(long) -> getUser
    331:363:void deleteUser(architecture.ee.user.User) -> deleteUser
    370:378:void deleteUserAndContent(architecture.ee.user.User) -> deleteUserAndContent
    381:383:int getApplicationUserCount() -> getApplicationUserCount
    387:387:java.util.List getApplicationUsers() -> getApplicationUsers
    391:391:java.util.List getApplicationUsers(int,int) -> getApplicationUsers
    395:397:int getAuthenticatedUserCount() -> getAuthenticatedUserCount
    401:403:int getTotalUserCount() -> getTotalUserCount
    407:407:int getRecentUserCount(java.util.Date) -> getRecentUserCount
    411:411:java.util.List getUsers() -> getUsers
    415:415:java.util.List getUsers(int,int) -> getUsers
    419:419:boolean isCreationSupported() -> isCreationSupported
    424:537:architecture.ee.user.User updateUser(architecture.ee.user.User) -> updateUser
    542:548:void enableUser(architecture.ee.user.User) -> enableUser
    551:580:architecture.ee.user.User sourceUserFromProvider(architecture.ee.user.User) -> sourceUserFromProvider
    585:588:architecture.ee.user.User getUserFromCacheById(long) -> a
    593:596:void resetUserCounts() -> a
    600:602:boolean equals(java.lang.String,java.lang.String) -> a
    615:620:void validateProviderUser(architecture.ee.user.User) -> validateProviderUser
    626:662:void modifyUserEnabled(architecture.ee.user.User,boolean) -> modifyUserEnabled
    669:689:architecture.ee.user.spi.UserProvider getUserProvider(architecture.ee.user.User) -> getUserProvider
    695:703:void updateCaches(architecture.ee.user.User) -> a
    710:723:java.lang.String getPasswordHash(architecture.ee.user.User) -> a
    728:734:void wireTemplateDates(architecture.ee.user.UserTemplate) -> a
    739:739:java.lang.String caseEmailAddress(architecture.ee.user.User) -> b
    744:755:architecture.ee.user.UserTemplate translateFederated(architecture.ee.user.UserTemplate) -> translateFederated
architecture.ee.user.profile.Address -> architecture.ee.user.profile.Address:
    java.lang.String street1 -> a
    java.lang.String street2 -> b
    java.lang.String city -> c
    java.lang.String stateOrProvince -> d
    java.lang.String country -> e
    java.lang.String postalCode -> f
    architecture.ee.user.profile.Address$Type type -> a
    48:48:java.lang.String getStreet1() -> getStreet1
    53:54:void setStreet1(java.lang.String) -> setStreet1
    58:58:java.lang.String getStreet2() -> getStreet2
    63:64:void setStreet2(java.lang.String) -> setStreet2
    68:68:java.lang.String getCountry() -> getCountry
    73:74:void setCountry(java.lang.String) -> setCountry
    78:78:java.lang.String getCity() -> getCity
    83:84:void setCity(java.lang.String) -> setCity
    88:88:java.lang.String getStateOrProvince() -> getStateOrProvince
    93:94:void setStateOrProvince(java.lang.String) -> setStateOrProvince
    98:98:java.lang.String getPostalCode() -> getPostalCode
    103:104:void setPostalCode(java.lang.String) -> setPostalCode
    108:108:architecture.ee.user.profile.Address$Type getType() -> getType
    113:114:void setType(architecture.ee.user.profile.Address$Type) -> setType
    118:118:java.lang.String getTypeString() -> getTypeString
    123:124:void setTypeString(java.lang.String) -> setTypeString
    128:145:boolean equals(java.lang.Object) -> equals
    150:157:int hashCode() -> hashCode
architecture.ee.user.profile.Address$Type -> architecture.ee.user.profile.Address$a:
    architecture.ee.user.profile.Address$Type WORK -> a
    architecture.ee.user.profile.Address$Type HOME -> b
    architecture.ee.user.profile.Address$Type PO_BOX -> c
    architecture.ee.user.profile.Address$Type OTHER -> d
    java.lang.String name -> a
    architecture.ee.user.profile.Address$Type[] $VALUES -> a
    5:5:architecture.ee.user.profile.Address$Type[] values() -> values
    5:5:architecture.ee.user.profile.Address$Type valueOf(java.lang.String) -> valueOf
    16:16:java.lang.String getName() -> a
    21:30:architecture.ee.user.profile.Address$Type fromName(java.lang.String) -> a
architecture.ee.user.profile.AddressConverter -> architecture.ee.user.profile.AddressConverter:
    27:48:architecture.ee.user.profile.Address convertFromString(java.lang.String) -> convertFromString
    54:71:java.lang.String convertToString(architecture.ee.user.profile.Address) -> convertToString
    76:76:boolean objectIsInitialized(architecture.ee.user.profile.Address) -> objectIsInitialized
    81:81:boolean objectIsConvertable(java.lang.Object) -> objectIsConvertable
    86:90:void addField(java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    94:120:void setField(architecture.ee.user.profile.Address,java.lang.String) -> setField
    124:124:boolean stringIsConvertable(java.lang.String) -> stringIsConvertable
    129:129:java.lang.String getValidationKey() -> getValidationKey
    134:143:boolean anyConbinedFieldsSet(java.lang.String) -> anyConbinedFieldsSet
    148:153:boolean allCombinedFieldsSet(java.lang.String) -> allCombinedFieldsSet
    157:157:java.lang.String convertToString(java.lang.Object) -> convertToString
    161:161:boolean objectIsInitialized(java.lang.Object) -> objectIsInitialized
    8:8:java.lang.Object convertFromString(java.lang.String) -> convertFromString
architecture.ee.user.profile.BeanPropsExternalMapper -> architecture.ee.user.profile.BeanPropsExternalMapper:
    java.lang.Class profileValueObjectClass -> a
    java.util.List propertyNames -> a
    20:29:java.util.List getObjectFieldMappingKeys() -> getObjectFieldMappingKeys
    33:33:boolean isSingleFieldMapper() -> isSingleFieldMapper
architecture.ee.user.profile.BooleanConverter -> architecture.ee.user.profile.BooleanConverter:
    14:14:java.lang.Boolean convertFromString(java.lang.String) -> convertFromString
    20:20:java.lang.String convertToString(java.lang.Boolean) -> convertToString
    25:25:boolean objectIsConvertable(java.lang.Object) -> objectIsConvertable
    30:30:boolean stringIsConvertable(java.lang.String) -> stringIsConvertable
    35:35:boolean objectIsInitialized(java.lang.Boolean) -> objectIsInitialized
    40:40:java.lang.String getValidationKey() -> getValidationKey
    44:44:java.lang.String convertToString(java.lang.Object) -> convertToString
    48:48:boolean objectIsInitialized(java.lang.Object) -> objectIsInitialized
    3:3:java.lang.Object convertFromString(java.lang.String) -> convertFromString
architecture.ee.user.profile.DateConverter -> architecture.ee.user.profile.DateConverter:
    15:17:java.util.Date convertFromString(java.lang.String) -> convertFromString
    23:23:java.lang.String convertToString(java.util.Date) -> convertToString
    27:27:boolean objectIsConvertable(java.lang.Object) -> objectIsConvertable
    31:38:boolean stringIsConvertable(java.lang.String) -> stringIsConvertable
    42:42:boolean objectIsInitialized(java.util.Date) -> objectIsInitialized
    46:46:java.lang.String getValidationKey() -> getValidationKey
    50:50:java.lang.String convertToString(java.lang.Object) -> convertToString
    54:54:boolean objectIsInitialized(java.lang.Object) -> objectIsInitialized
    7:7:java.lang.Object convertFromString(java.lang.String) -> convertFromString
architecture.ee.user.profile.DecimalConverter -> architecture.ee.user.profile.DecimalConverter:
    17:21:java.lang.Double convertFromString(java.lang.String) -> convertFromString
    28:28:java.lang.String convertToString(java.lang.Double) -> convertToString
    33:33:boolean objectIsConvertable(java.lang.Object) -> objectIsConvertable
    38:38:boolean objectIsInitialized(java.lang.Double) -> objectIsInitialized
    43:53:boolean stringIsConvertable(java.lang.String) -> stringIsConvertable
    58:58:java.lang.String getValidationKey() -> getValidationKey
    63:63:boolean objectIsInitialized(java.lang.Object) -> objectIsInitialized
    69:69:java.lang.String convertToString(java.lang.Object) -> convertToString
    4:4:java.lang.Object convertFromString(java.lang.String) -> convertFromString
architecture.ee.user.profile.EmailAddress -> architecture.ee.user.profile.EmailAddress:
    java.lang.String email -> a
    architecture.ee.user.profile.EmailAddress$Type type -> a
    52:53:void setEmail(java.lang.String) -> setEmail
    57:57:java.lang.String getEmail() -> getEmail
    62:63:void setType(architecture.ee.user.profile.EmailAddress$Type) -> setType
    67:67:architecture.ee.user.profile.EmailAddress$Type getType() -> getType
    72:72:java.lang.String getTypeString() -> getTypeString
    77:78:void setTypeString(java.lang.String) -> setTypeString
    82:89:boolean equals(java.lang.Object) -> equals
    94:96:int hashCode() -> hashCode
architecture.ee.user.profile.EmailAddress$Type -> architecture.ee.user.profile.EmailAddress$a:
    architecture.ee.user.profile.EmailAddress$Type HOME -> a
    architecture.ee.user.profile.EmailAddress$Type WORK -> b
    architecture.ee.user.profile.EmailAddress$Type OTHER -> c
    java.lang.String name -> a
    architecture.ee.user.profile.EmailAddress$Type[] $VALUES -> a
    5:5:architecture.ee.user.profile.EmailAddress$Type[] values() -> values
    5:5:architecture.ee.user.profile.EmailAddress$Type valueOf(java.lang.String) -> valueOf
    15:15:java.lang.String getName() -> a
    20:27:architecture.ee.user.profile.EmailAddress$Type fromName(java.lang.String) -> a
    32:32:java.lang.String toString() -> toString
architecture.ee.user.profile.EmailConverter -> architecture.ee.user.profile.EmailConverter:
    19:32:architecture.ee.user.profile.EmailAddress convertFromString(java.lang.String) -> convertFromString
    40:48:java.lang.String convertToString(architecture.ee.user.profile.EmailAddress) -> convertToString
    52:52:boolean objectIsConvertable(java.lang.Object) -> objectIsConvertable
    56:56:boolean objectIsInitialized(architecture.ee.user.profile.EmailAddress) -> objectIsInitialized
    60:63:boolean stringIsConvertable(java.lang.String) -> stringIsConvertable
    67:67:java.lang.String getValidationKey() -> getValidationKey
    71:71:boolean objectIsInitialized(java.lang.Object) -> objectIsInitialized
    76:76:java.lang.String convertToString(java.lang.Object) -> convertToString
    5:5:java.lang.Object convertFromString(java.lang.String) -> convertFromString
architecture.ee.user.profile.ExternalMapper -> architecture.ee.user.profile.ExternalMapper:
    java.util.List getObjectFieldMappingKeys() -> getObjectFieldMappingKeys
    boolean isSingleFieldMapper() -> isSingleFieldMapper
architecture.ee.user.profile.IntegerConverter -> architecture.ee.user.profile.IntegerConverter:
    17:21:java.lang.Integer convertFromString(java.lang.String) -> convertFromString
    28:28:java.lang.String convertToString(java.lang.Integer) -> convertToString
    33:33:boolean objectIsConvertable(java.lang.Object) -> objectIsConvertable
    38:38:boolean objectIsInitialized(java.lang.Integer) -> objectIsInitialized
    43:53:boolean stringIsConvertable(java.lang.String) -> stringIsConvertable
    58:58:java.lang.String getValidationKey() -> getValidationKey
    62:62:java.lang.String convertToString(java.lang.Object) -> convertToString
    66:66:boolean objectIsInitialized(java.lang.Object) -> objectIsInitialized
    4:4:java.lang.Object convertFromString(java.lang.String) -> convertFromString
architecture.ee.user.profile.PhoneNumber -> architecture.ee.user.profile.PhoneNumber:
    java.lang.String phoneNumber -> a
    architecture.ee.user.profile.PhoneNumber$Type type -> a
    63:64:void setPhoneNumber(java.lang.String) -> setPhoneNumber
    68:68:java.lang.String getPhoneNumber() -> getPhoneNumber
    73:74:void setTypeString(java.lang.String) -> setTypeString
    78:81:java.lang.String getTypeString() -> getTypeString
    86:87:void setType(architecture.ee.user.profile.PhoneNumber$Type) -> setType
    91:91:architecture.ee.user.profile.PhoneNumber$Type getType() -> getType
    96:103:boolean equals(java.lang.Object) -> equals
    108:110:int hashCode() -> hashCode
architecture.ee.user.profile.PhoneNumber$Type -> architecture.ee.user.profile.PhoneNumber$a:
    architecture.ee.user.profile.PhoneNumber$Type HOME -> a
    architecture.ee.user.profile.PhoneNumber$Type WORK -> b
    architecture.ee.user.profile.PhoneNumber$Type FAX -> c
    architecture.ee.user.profile.PhoneNumber$Type MOBILE -> d
    architecture.ee.user.profile.PhoneNumber$Type PAGER -> e
    architecture.ee.user.profile.PhoneNumber$Type OTHER -> f
    java.lang.String name -> a
    architecture.ee.user.profile.PhoneNumber$Type[] $VALUES -> a
    5:5:architecture.ee.user.profile.PhoneNumber$Type[] values() -> values
    5:5:architecture.ee.user.profile.PhoneNumber$Type valueOf(java.lang.String) -> valueOf
    21:21:java.lang.String getName() -> a
    26:39:architecture.ee.user.profile.PhoneNumber$Type fromName(java.lang.String) -> a
    44:44:java.lang.String toString() -> toString
architecture.ee.user.profile.PhoneNumberConverter -> architecture.ee.user.profile.PhoneNumberConverter:
    16:34:architecture.ee.user.profile.PhoneNumber convertFromString(java.lang.String) -> convertFromString
    41:49:java.lang.String convertToString(architecture.ee.user.profile.PhoneNumber) -> convertToString
    54:54:boolean objectIsConvertable(java.lang.Object) -> objectIsConvertable
    59:59:boolean objectIsInitialized(architecture.ee.user.profile.PhoneNumber) -> objectIsInitialized
    64:80:boolean stringIsConvertable(java.lang.String) -> stringIsConvertable
    85:85:java.lang.String getValidationKey() -> getValidationKey
    89:89:java.lang.String convertToString(java.lang.Object) -> convertToString
    93:93:boolean objectIsInitialized(java.lang.Object) -> objectIsInitialized
    4:4:java.lang.Object convertFromString(java.lang.String) -> convertFromString
architecture.ee.user.profile.ProfileField -> architecture.ee.user.profile.ProfileField:
architecture.ee.user.profile.ProfileField$Type -> architecture.ee.user.profile.ProfileField$Type:
    architecture.ee.user.profile.ProfileField$Type BOOLEAN -> BOOLEAN
    architecture.ee.user.profile.ProfileField$Type DATETIME -> DATETIME
    architecture.ee.user.profile.ProfileField$Type DECIMAL -> DECIMAL
    architecture.ee.user.profile.ProfileField$Type EMAIL -> EMAIL
    architecture.ee.user.profile.ProfileField$Type NUMBER -> NUMBER
    architecture.ee.user.profile.ProfileField$Type LARGETEXT -> LARGETEXT
    architecture.ee.user.profile.ProfileField$Type MULTILIST -> MULTILIST
    architecture.ee.user.profile.ProfileField$Type SINGLELIST -> SINGLELIST
    architecture.ee.user.profile.ProfileField$Type TEXT -> TEXT
    architecture.ee.user.profile.ProfileField$Type URL -> URL
    architecture.ee.user.profile.ProfileField$Type PHONE_NUMBER -> PHONE_NUMBER
    architecture.ee.user.profile.ProfileField$Type ZIP_CODE -> ZIP_CODE
    architecture.ee.user.profile.ProfileField$Type ADDRESS -> ADDRESS
    int ID -> a
    java.lang.String name -> a
    java.lang.String displayName -> b
    java.lang.String description -> c
    architecture.ee.user.profile.TypeConverter converter -> a
    boolean supportsList -> a
    boolean supportsMapping -> b
    architecture.ee.user.profile.ProfileField$Type[] $VALUES -> a
    8:8:architecture.ee.user.profile.ProfileField$Type[] values() -> values
    8:8:architecture.ee.user.profile.ProfileField$Type valueOf(java.lang.String) -> valueOf
    54:54:int getId() -> getId
    59:59:java.lang.String getName() -> getName
    64:64:java.lang.String getDisplayName() -> getDisplayName
    69:69:java.lang.String getDescription() -> getDescription
    74:74:boolean isSupportsMapping() -> isSupportsMapping
    79:79:boolean isSupportsList() -> isSupportsList
    84:84:architecture.ee.user.profile.TypeConverter getConverter() -> getConverter
    89:116:architecture.ee.user.profile.ProfileField$Type valueOf(int) -> valueOf
architecture.ee.user.profile.ProfileFieldOption -> architecture.ee.user.profile.ProfileFieldOption:
architecture.ee.user.profile.ProfileFieldUtil -> architecture.ee.user.profile.ProfileFieldUtil:
    18:21:java.lang.String escapeFieldDelimiters(java.lang.String) -> escapeFieldDelimiters
    26:29:java.lang.String unEscapeFieldDelimiters(java.lang.String) -> unEscapeFieldDelimiters
architecture.ee.user.profile.ProfileFieldValue -> architecture.ee.user.profile.ProfileFieldValue:
architecture.ee.user.profile.ProfileFieldValueCount -> architecture.ee.user.profile.ProfileFieldValueCount:
    architecture.ee.user.profile.ProfileFieldValue value -> a
    int count -> a
    45:45:architecture.ee.user.profile.ProfileFieldValue getValue() -> getValue
    49:49:int getCount() -> getCount
architecture.ee.user.profile.ProfileFieldValueCount$CountComparator -> architecture.ee.user.profile.ProfileFieldValueCount$CountComparator:
    14:14:int compare(architecture.ee.user.profile.ProfileFieldValueCount,architecture.ee.user.profile.ProfileFieldValueCount) -> compare
    7:7:int compare(java.lang.Object,java.lang.Object) -> compare
architecture.ee.user.profile.ProfileFieldValueCount$NameComparator -> architecture.ee.user.profile.ProfileFieldValueCount$NameComparator:
    25:31:int compare(architecture.ee.user.profile.ProfileFieldValueCount,architecture.ee.user.profile.ProfileFieldValueCount) -> compare
    19:19:int compare(java.lang.Object,java.lang.Object) -> compare
architecture.ee.user.profile.ProfileManager -> architecture.ee.user.profile.ProfileManager:
    java.util.Map getProfile(architecture.ee.user.User) -> getProfile
    void setProfile(architecture.ee.user.User,java.util.Collection) -> setProfile
    void deleteProfileByUserId(long) -> deleteProfileByUserId
    void deleteProfileById(long) -> deleteProfileById
    boolean isProfileImageEnabled() -> isProfileImageEnabled
    void setProfileImageEnabled(boolean) -> setProfileImageEnabled
    java.io.InputStream getProfileImage(architecture.ee.user.User) -> getProfileImage
    void deleteProfileImage(architecture.ee.user.User) -> deleteProfileImage
    java.util.Collection getProfileFieldTermsByFieldId(long,boolean) -> getProfileFieldTermsByFieldId
    boolean isFullNameEnabled() -> isFullNameEnabled
    void setFullNameEnabled(boolean) -> setFullNameEnabled
    boolean isPersonalizedHomepageEnabled() -> isPersonalizedHomepageEnabled
    void setPersonalizedHomepageEnabled(boolean) -> setPersonalizedHomepageEnabled
    boolean isAnonymousBrowsingPeoplePermitted() -> isAnonymousBrowsingPeoplePermitted
    void setAnonymousBrowsingPeoplePermitted(boolean) -> setAnonymousBrowsingPeoplePermitted
architecture.ee.user.profile.SingleFieldMapper -> architecture.ee.user.profile.SingleFieldMapper:
    13:13:java.util.List getObjectFieldMappingKeys() -> getObjectFieldMappingKeys
    17:17:boolean isSingleFieldMapper() -> isSingleFieldMapper
architecture.ee.user.profile.StringConverter -> architecture.ee.user.profile.StringConverter:
    15:15:java.lang.String convertFromString(java.lang.String) -> convertFromString
    21:21:java.lang.String convertToString(java.lang.String) -> convertToString
    26:26:boolean objectIsConvertable(java.lang.Object) -> objectIsConvertable
    31:31:boolean objectIsInitialized(java.lang.String) -> objectIsInitialized
    36:36:boolean stringIsConvertable(java.lang.String) -> stringIsConvertable
    41:41:java.lang.String getValidationKey() -> getValidationKey
    45:45:java.lang.String convertToString(java.lang.Object) -> convertToString
    49:49:boolean objectIsInitialized(java.lang.Object) -> objectIsInitialized
    4:4:java.lang.Object convertFromString(java.lang.String) -> convertFromString
architecture.ee.user.profile.TypeConverter -> architecture.ee.user.profile.TypeConverter:
    java.lang.Object convertFromString(java.lang.String) -> convertFromString
    java.lang.String convertToString(java.lang.Object) -> convertToString
    boolean objectIsConvertable(java.lang.Object) -> objectIsConvertable
    boolean stringIsConvertable(java.lang.String) -> stringIsConvertable
    boolean objectIsInitialized(java.lang.Object) -> objectIsInitialized
    java.lang.String getValidationKey() -> getValidationKey
architecture.ee.user.profile.TypeConverter$ConversionException -> architecture.ee.user.profile.TypeConverter$ConversionException:
architecture.ee.user.profile.URLConverter -> architecture.ee.user.profile.URLConverter:
    java.util.regex.Pattern INVALID_URL_PATTERN -> a
    26:30:java.net.URL convertFromString(java.lang.String) -> convertFromString
    37:37:java.lang.String convertToString(java.net.URL) -> convertToString
    42:42:boolean objectIsConvertable(java.lang.Object) -> objectIsConvertable
    47:47:boolean objectIsInitialized(java.net.URL) -> objectIsInitialized
    52:57:boolean stringIsConvertable(java.lang.String) -> stringIsConvertable
    62:62:java.lang.String getValidationKey() -> getValidationKey
    66:66:java.lang.String convertToString(java.lang.Object) -> convertToString
    70:70:boolean objectIsInitialized(java.lang.Object) -> objectIsInitialized
    10:10:java.lang.Object convertFromString(java.lang.String) -> convertFromString
architecture.ee.user.profile.UserProfile -> architecture.ee.user.profile.UserProfile:
architecture.ee.user.profile.ZipCodeConverter -> architecture.ee.user.profile.ZipCodeConverter:
    java.lang.String zipCodeRegEx -> a
    int minZipCodeLength -> a
    13:30:boolean stringIsConvertable(java.lang.String) -> stringIsConvertable
    35:35:java.lang.String getValidationKey() -> getValidationKey
architecture.ee.user.spi.AlreadyExistsException -> architecture.ee.user.spi.AlreadyExistsException:
architecture.ee.user.spi.UserProvider -> architecture.ee.user.spi.UserProvider:
    architecture.ee.user.User getUser(architecture.ee.user.User) -> getUser
    java.lang.Iterable getUsers() -> getUsers
    java.lang.Iterable getUsernames() -> getUsernames
    boolean supportsUpdate() -> supportsUpdate
    void update(architecture.ee.user.User) -> update
    architecture.ee.user.User create(architecture.ee.user.User) -> create
    void delete(architecture.ee.user.User) -> delete
    boolean supportsPagination() -> supportsPagination
    int getCount() -> getCount
    java.lang.Iterable getUsers(int,int) -> getUsers
    java.lang.String getName() -> getName
architecture.ee.util.AdminHelper -> architecture.ee.util.AdminHelper:
    java.util.Map references -> a
    24:24:architecture.common.lifecycle.ApplicationHelper getApplicationHelper() -> getApplicationHelper
    28:28:architecture.common.lifecycle.State getState() -> getState
    36:36:boolean isReady() -> isReady
    40:43:boolean isSetupComplete() -> isSetupComplete
    49:49:architecture.common.lifecycle.ConfigRoot getConfigRoot() -> getConfigRoot
    53:53:java.lang.String getEffectiveRootPath() -> getEffectiveRootPath
    58:58:java.lang.Object getComponent(java.lang.Class) -> getComponent
    62:62:architecture.ee.component.Admin getAdmin() -> getAdmin
    67:73:net.sf.ehcache.Cache getCache(java.lang.String) -> getCache
    77:77:net.sf.ehcache.CacheManager getCacheManager() -> getCacheManager
    81:84:java.lang.Object getBootstrapComponent(java.lang.Class) -> getBootstrapComponent
    88:88:architecture.ee.component.AdminService getAdminService() -> getAdminService
    92:92:java.util.Locale getLocale() -> getLocale
    96:96:java.lang.String getCharacterEncoding() -> getCharacterEncoding
    100:100:java.lang.String getApplicationProperty(java.lang.String,java.lang.String) -> getApplicationProperty
    104:104:int getApplicationIntProperty(java.lang.String,int) -> getApplicationIntProperty
    108:108:boolean getApplicationBooleanProperty(java.lang.String,boolean) -> getApplicationBooleanProperty
    112:112:java.util.TimeZone getTimeZone() -> getTimeZone
architecture.ee.util.ApplicatioinConstants -> architecture.ee.util.ApplicatioinConstants:
    java.lang.String SETUP_COMPLETE_PROP_NAME -> SETUP_COMPLETE_PROP_NAME
    java.lang.String LOCALE_LANGUAGE_PROP_NAME -> LOCALE_LANGUAGE_PROP_NAME
    java.lang.String LOCALE_COUNTRY_PROP_NAME -> LOCALE_COUNTRY_PROP_NAME
    java.lang.String LOCALE_CHARACTER_ENCODING_PROP_NAME -> LOCALE_CHARACTER_ENCODING_PROP_NAME
    java.lang.String LOCALE_TIMEZONE_PROP_NAME -> LOCALE_TIMEZONE_PROP_NAME
    java.lang.String FREEMARKER_TEMPLATE_UPDATE_DELAY_PROP_NAME -> FREEMARKER_TEMPLATE_UPDATE_DELAY_PROP_NAME
    java.lang.String FREEMARKER_LOG_ERROR_PROP_NAME -> FREEMARKER_LOG_ERROR_PROP_NAME
    java.lang.String FREEMARKER_STRONG_TEMPLATE_CACHE_SIZE_PROP_NAME -> FREEMARKER_STRONG_TEMPLATE_CACHE_SIZE_PROP_NAME
    java.lang.String FREEMARKER_WEAK_TEMPLATE_CACHE_SIZE_PROP_NAME -> FREEMARKER_WEAK_TEMPLATE_CACHE_SIZE_PROP_NAME
architecture.ee.util.I18nTextUtils -> architecture.ee.util.I18nTextUtils:
    12:14:java.lang.String generateResourceBundleKey(int,long,int) -> generateResourceBundleKey
    19:26:architecture.ee.g11n.I18nText getText(java.util.List,java.lang.String,int) -> getText
    36:45:void setText(java.util.List,java.lang.String,int,java.lang.String) -> setText
architecture.ee.util.LocaleUtils -> architecture.ee.util.LocaleUtils:
    16:16:java.util.Locale localeCodeToLocale(java.lang.String) -> localeCodeToLocale
    21:30:boolean isValidCharacterEncoding(java.lang.String) -> isValidCharacterEncoding
architecture.ee.util.SecurityHelper -> architecture.ee.util.SecurityHelper:
    19:22:org.springframework.security.core.Authentication getAuthentication() -> getAuthentication
    26:36:architecture.ee.security.AuthToken getAuthToke() -> getAuthToke
    41:51:architecture.ee.user.User getUser() -> getUser
architecture.ee.util.cache.Cache -> architecture.ee.util.cache.Cache:
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getMaxCacheSize() -> getMaxCacheSize
    void setMaxCacheSize(int) -> setMaxCacheSize
    long getMaxLifetime() -> getMaxLifetime
    void setMaxLifetime(long) -> setMaxLifetime
    int getCacheSize() -> getCacheSize
    long getCacheHits() -> getCacheHits
    long getCacheMisses() -> getCacheMisses
architecture.ee.util.cache.TimedExpirationMap -> architecture.ee.util.cache.TimedExpirationMap:
    java.util.concurrent.atomic.AtomicLong maxLifetime -> a
    java.util.concurrent.atomic.AtomicLong lastChecked -> b
    java.util.concurrent.atomic.AtomicBoolean expiring -> a
    long expirationPeriod -> a
    java.util.concurrent.ConcurrentMap map -> a
    java.util.Queue expirationQueue -> a
    java.lang.String name -> a
    56:57:int size() -> size
    62:62:boolean isEmpty() -> isEmpty
    67:68:boolean containsKey(java.lang.Object) -> containsKey
    73:73:boolean containsValue(java.lang.Object) -> containsValue
    78:83:java.lang.Object get(java.lang.Object) -> get
    88:92:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    97:98:java.lang.Object remove(java.lang.Object) -> remove
    103:103:java.lang.String getName() -> getName
    108:109:void setName(java.lang.String) -> setName
    113:113:int getMaxCacheSize() -> getMaxCacheSize
    118:118:void setMaxCacheSize(int) -> setMaxCacheSize
    122:122:long getMaxLifetime() -> getMaxLifetime
    127:128:void setMaxLifetime(long) -> setMaxLifetime
    132:132:int getCacheSize() -> getCacheSize
    137:137:long getCacheHits() -> getCacheHits
    142:142:long getCacheMisses() -> getCacheMisses
    147:153:java.lang.Object processWrapper(architecture.ee.util.cache.TimedExpirationMap$ExpirableValueWrapper) -> a
    159:162:void putAll(java.util.Map) -> putAll
    166:168:void clear() -> clear
    172:173:java.util.Set keySet() -> keySet
    178:180:java.util.Collection values() -> values
    193:194:java.util.Set entrySet() -> entrySet
    228:247:void expireEntries() -> a
architecture.ee.util.cache.TimedExpirationMap$1 -> architecture.ee.util.cache.TimedExpirationMap$a:
    185:185:java.lang.Object createProxy(java.lang.Object) -> createProxy
architecture.ee.util.cache.TimedExpirationMap$2 -> architecture.ee.util.cache.TimedExpirationMap$b:
    199:201:java.lang.Object createProxy(java.lang.Object) -> createProxy
architecture.ee.util.cache.TimedExpirationMap$2$1 -> architecture.ee.util.cache.TimedExpirationMap$b$a:
    java.util.Map$Entry val$entry -> a
    205:205:java.lang.Object getKey() -> getKey
    210:210:java.lang.Object getValue() -> getValue
    215:215:java.lang.Object setValue(java.lang.Object) -> setValue
architecture.ee.util.cache.TimedExpirationMap$ExpirableValueWrapper -> architecture.ee.util.cache.TimedExpirationMap$c:
    java.lang.Object key -> a
    java.lang.Object value -> b
    long timestamp -> a
    boolean ignore -> a
architecture.ee.util.proxy.GenericCollectionProxy -> architecture.ee.util.proxy.GenericCollectionProxy:
    java.util.Collection proxiedCollection -> a
    25:25:java.util.Iterator iterator() -> iterator
    30:30:int size() -> size
architecture.ee.util.proxy.GenericProxyFactory -> architecture.ee.util.proxy.GenericProxyFactory:
    java.lang.Object createProxy(java.lang.Object) -> createProxy
architecture.ee.util.proxy.GenericSetProxy -> architecture.ee.util.proxy.GenericSetProxy:
    java.util.Set proxiedSet -> a
    27:27:java.util.Iterator iterator() -> iterator
    32:32:int size() -> size
architecture.ee.util.task.CancellableRunnable -> architecture.ee.util.task.CancellableRunnable:
    boolean doTask -> a
    15:17:void run() -> run
    void doTask() -> doTask
    23:23:boolean isDoTask() -> isDoTask
    28:29:void setDoTask(boolean) -> setDoTask
architecture.ee.util.task.Pollable -> architecture.ee.util.task.Pollable:
    boolean isRunning() -> isRunning
    int getTaskMinimum() -> getTaskMinimum
    int getTaskMaximum() -> getTaskMaximum
    int getTaskValue() -> getTaskValue
    java.util.Date getStartDate() -> getStartDate
    java.util.Date getEndDate() -> getEndDate
    double getPercentComplete() -> getPercentComplete
    boolean isIndeterminate() -> isIndeterminate
    boolean isFinished() -> isFinished
    boolean isSuccess() -> isSuccess
    java.util.List getFailures() -> getFailures
architecture.ee.util.task.PollableRunnable -> architecture.ee.util.task.PollableRunnable:
    void cancel() -> cancel
architecture.ee.util.task.TaskEngine -> architecture.ee.util.task.TaskEngine:
    int HIGH_PRIORITY -> HIGH_PRIORITY
    int MEDIUM_PRIORITY -> MEDIUM_PRIORITY
    int LOW_PRIORITY -> LOW_PRIORITY
    java.util.PriorityQueue taskQueue -> a
    java.lang.ThreadGroup threadGroup -> a
    architecture.ee.util.task.TaskEngine$TaskEngineWorker[] workers -> a
    java.util.Timer taskTimer -> a
    java.lang.Object lock -> a
    long newWorkerTimestamp -> a
    long busyTimestamp -> b
    boolean mockMode -> a
    boolean started -> b
    architecture.ee.component.AdminService adminService -> a
    227:228:void setMockMode(boolean) -> setMockMode
    232:236:void initialize() -> initialize
    286:286:int size() -> size
    291:291:int getNumWorkers() -> getNumWorkers
    296:297:void addTask(java.lang.Runnable) -> addTask
    301:318:void addTask(int,java.lang.Runnable) -> addTask
    323:323:java.util.TimerTask scheduleTask(java.lang.Runnable,java.util.Date) -> scheduleTask
    328:330:java.util.TimerTask scheduleTask(int,java.lang.Runnable,java.util.Date) -> scheduleTask
    335:335:java.util.TimerTask scheduleTask(java.lang.Runnable,long,long) -> scheduleTask
    340:342:java.util.TimerTask scheduleTask(int,java.lang.Runnable,long,long,boolean) -> scheduleTask
    347:348:void destroy() -> destroy
    382:383:void addLowPriorityTask(java.lang.Runnable) -> addLowPriorityTask
    387:388:void addMediumPriorityTask(java.lang.Runnable) -> addMediumPriorityTask
    392:393:void addHighPriorityTask(java.lang.Runnable) -> addHighPriorityTask
    15:15:java.lang.ThreadGroup access$000(architecture.ee.util.task.TaskEngine) -> a
    15:15:java.lang.Object access$100(architecture.ee.util.task.TaskEngine) -> a
    15:15:java.util.PriorityQueue access$200(architecture.ee.util.task.TaskEngine) -> a
    15:15:boolean access$300(architecture.ee.util.task.TaskEngine) -> a
    15:15:architecture.ee.component.AdminService access$400(architecture.ee.util.task.TaskEngine) -> a
architecture.ee.util.task.TaskEngine$1 -> architecture.ee.util.task.TaskEngine$d:
    java.lang.Runnable val$task -> a
    400:401:java.lang.Object call() -> call
architecture.ee.util.task.TaskEngine$GuardedRunnable -> architecture.ee.util.task.TaskEngine$c:
    java.lang.Runnable runnable -> a
    boolean running -> a
    32:40:void run() -> run
    49:49:java.lang.String toString() -> toString
architecture.ee.util.task.TaskEngine$ScheduledTask -> architecture.ee.util.task.TaskEngine$b:
    architecture.ee.util.task.TaskEngine engine -> a
    int priority -> a
    java.lang.Runnable task -> a
    74:88:void run() -> run
    92:98:boolean shouldCancelTask(java.lang.Runnable) -> a
architecture.ee.util.task.TaskEngine$TaskEngineWorker -> architecture.ee.util.task.TaskEngine$a:
    boolean done -> a
    architecture.ee.util.task.TaskEngine this$0 -> a
    121:136:architecture.ee.util.task.TaskWrapper nextTask() -> a
    143:205:void run() -> run
architecture.ee.util.task.TaskWrapper -> architecture.ee.util.task.TaskWrapper:
    java.lang.Runnable task -> a
    int priority -> a
    19:28:int compareTo(java.lang.Object) -> compareTo
    34:34:int getPriority() -> getPriority
    39:39:java.lang.Runnable getTask() -> getTask
    44:45:void setPriority(int) -> setPriority
    48:49:void setTask(java.lang.Runnable) -> setTask
